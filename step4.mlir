module  {
  func @miopen_conv2d_gkcyx_ngchw_ngkhw_0(%arg0: memref<1x1024x1024x1x1xf32>, %arg1: memref<128x1x1024x14x14xf32>, %arg2: memref<128x1x1024x14x14xf32>) attributes {block_size = 256 : i32, grid_size = 1568 : i32, kernel = 0 : i32} {
    %c64 = arith.constant 64 : index
    %c2 = arith.constant 2 : index
    %c128 = arith.constant 128 : index
    %c4 = arith.constant 4 : index
    %c8 = arith.constant 8 : index
    %c1568 = arith.constant 1568 : index
    %cst = arith.constant dense<0.000000e+00> : vector<32xf32>
    %c32 = arith.constant 32 : index
    %c0_i32 = arith.constant 0 : i32
    %c0 = arith.constant 0 : index
    %c1 = arith.constant 1 : index
    %c512 = arith.constant 512 : index
    %c5 = arith.constant 5 : index
    %c513 = arith.constant 513 : index
    %c516 = arith.constant 516 : index
    %c517 = arith.constant 517 : index
    %c196 = arith.constant 196 : index
    %c-1 = arith.constant -1 : index
    %c14 = arith.constant 14 : index
    %c3 = arith.constant 3 : index
    %c2048 = arith.constant 2048 : index
    %c6 = arith.constant 6 : index
    %c7 = arith.constant 7 : index
    %c9 = arith.constant 9 : index
    %c10 = arith.constant 10 : index
    %c11 = arith.constant 11 : index
    %c12 = arith.constant 12 : index
    %c13 = arith.constant 13 : index
    %c15 = arith.constant 15 : index
    %c16 = arith.constant 16 : index
    %c17 = arith.constant 17 : index
    %c18 = arith.constant 18 : index
    %c19 = arith.constant 19 : index
    %c20 = arith.constant 20 : index
    %c21 = arith.constant 21 : index
    %c22 = arith.constant 22 : index
    %c23 = arith.constant 23 : index
    %c24 = arith.constant 24 : index
    %c25 = arith.constant 25 : index
    %c26 = arith.constant 26 : index
    %c27 = arith.constant 27 : index
    %c28 = arith.constant 28 : index
    %c29 = arith.constant 29 : index
    %c30 = arith.constant 30 : index
    %c31 = arith.constant 31 : index
    %cst_0 = arith.constant dense<0.000000e+00> : vector<4xf32>
    %0 = miopen.workgroup_id : index
    %1 = miopen.workitem_id : index
    %2 = arith.divui %0, %c1568 : index
    %3 = arith.remui %0, %c1568 : index
    %4 = arith.remui %3, %c8 : index
    %5 = arith.divui %3, %c8 : index
    %6 = arith.muli %4, %c128 : index
    %7 = arith.muli %5, %c128 : index
    %8 = arith.remui %1, %c4 : index
    %9 = arith.remui %8, %c2 : index
    %10 = arith.divui %1, %c4 : index
    %11 = arith.remui %1, %c4 : index
    %12 = arith.divui %11, %c2 : index
    %13 = arith.muli %9, %c2 : index
    %14 = arith.muli %10, %c2 : index
    %15 = arith.muli %12, %c2 : index
    %16 = arith.addi %6, %14 : index
    %17 = arith.divui %1, %c64 : index
    %18 = arith.remui %1, %c64 : index
    %19 = arith.muli %18, %c2 : index
    %20 = arith.addi %7, %19 : index
    %21 = miopen.alloc() : memref<4096xf32, 3>
    %22 = arith.muli %13, %c4 : index
    %23 = arith.addi %22, %15 : index
    %24 = arith.index_cast %2 : index to i32
    %25 = arith.index_cast %16 : index to i32
    %26 = arith.index_cast %23 : index to i32
    %27 = gpu.buffer_load(%arg0, %24, %25, %26, %c0_i32, %c0_i32) : memref<1x1024x1024x1x1xf32>, vector<2xf32>, i32, i32, i32, i32, i32
    %28 = vector.extractelement %27[%c0 : index] : vector<2xf32>
    %29 = vector.extractelement %27[%c1 : index] : vector<2xf32>
    %30 = arith.addi %16, %c1 : index
    %31 = arith.index_cast %2 : index to i32
    %32 = arith.index_cast %30 : index to i32
    %33 = arith.index_cast %23 : index to i32
    %34 = gpu.buffer_load(%arg0, %31, %32, %33, %c0_i32, %c0_i32) : memref<1x1024x1024x1x1xf32>, vector<2xf32>, i32, i32, i32, i32, i32
    %35 = vector.extractelement %34[%c0 : index] : vector<2xf32>
    %36 = vector.extractelement %34[%c1 : index] : vector<2xf32>
    %37 = arith.addi %23, %c4 : index
    %38 = arith.index_cast %2 : index to i32
    %39 = arith.index_cast %16 : index to i32
    %40 = arith.index_cast %37 : index to i32
    %41 = gpu.buffer_load(%arg0, %38, %39, %40, %c0_i32, %c0_i32) : memref<1x1024x1024x1x1xf32>, vector<2xf32>, i32, i32, i32, i32, i32
    %42 = vector.extractelement %41[%c0 : index] : vector<2xf32>
    %43 = vector.extractelement %41[%c1 : index] : vector<2xf32>
    %44 = arith.addi %23, %c4 : index
    %45 = arith.addi %16, %c1 : index
    %46 = arith.index_cast %2 : index to i32
    %47 = arith.index_cast %45 : index to i32
    %48 = arith.index_cast %44 : index to i32
    %49 = gpu.buffer_load(%arg0, %46, %47, %48, %c0_i32, %c0_i32) : memref<1x1024x1024x1x1xf32>, vector<2xf32>, i32, i32, i32, i32, i32
    %50 = vector.extractelement %49[%c0 : index] : vector<2xf32>
    %51 = vector.extractelement %49[%c1 : index] : vector<2xf32>
    %52 = arith.muli %13, %c512 : index
    %53 = arith.muli %14, %c4 : index
    %54 = arith.addi %52, %53 : index
    %55 = arith.addi %54, %15 : index
    memref.store %28, %21[%55] : memref<4096xf32, 3>
    %56 = arith.addi %55, %c1 : index
    memref.store %29, %21[%56] : memref<4096xf32, 3>
    %57 = arith.addi %55, %c4 : index
    memref.store %35, %21[%57] : memref<4096xf32, 3>
    %58 = arith.addi %55, %c5 : index
    memref.store %36, %21[%58] : memref<4096xf32, 3>
    %59 = arith.addi %55, %c512 : index
    memref.store %42, %21[%59] : memref<4096xf32, 3>
    %60 = arith.addi %55, %c513 : index
    memref.store %43, %21[%60] : memref<4096xf32, 3>
    %61 = arith.addi %55, %c516 : index
    memref.store %50, %21[%61] : memref<4096xf32, 3>
    %62 = arith.addi %55, %c517 : index
    memref.store %51, %21[%62] : memref<4096xf32, 3>
    %63 = arith.muli %17, %c4 : index
    %64 = arith.cmpi slt, %20, %c0 : index
    %65 = arith.subi %c-1, %20 : index
    %66 = select %64, %65, %20 : index
    %67 = arith.divsi %66, %c196 : index
    %68 = arith.subi %c-1, %67 : index
    %69 = select %64, %68, %67 : index
    %70 = arith.remsi %20, %c196 : index
    %71 = arith.cmpi slt, %70, %c0 : index
    %72 = arith.addi %70, %c196 : index
    %73 = select %71, %72, %70 : index
    %74 = arith.cmpi slt, %73, %c0 : index
    %75 = arith.subi %c-1, %73 : index
    %76 = select %74, %75, %73 : index
    %77 = arith.divsi %76, %c14 : index
    %78 = arith.subi %c-1, %77 : index
    %79 = select %74, %78, %77 : index
    %80 = arith.remsi %20, %c14 : index
    %81 = arith.cmpi slt, %80, %c0 : index
    %82 = arith.addi %80, %c14 : index
    %83 = select %81, %82, %80 : index
    %84 = arith.index_cast %69 : index to i32
    %85 = arith.index_cast %2 : index to i32
    %86 = arith.index_cast %63 : index to i32
    %87 = arith.index_cast %79 : index to i32
    %88 = arith.index_cast %83 : index to i32
    %89 = gpu.buffer_load(%arg1, %84, %85, %86, %87, %88) : memref<128x1x1024x14x14xf32>, vector<2xf32>, i32, i32, i32, i32, i32
    %90 = vector.extractelement %89[%c0 : index] : vector<2xf32>
    %91 = vector.extractelement %89[%c1 : index] : vector<2xf32>
    %92 = arith.addi %63, %c1 : index
    %93 = arith.index_cast %69 : index to i32
    %94 = arith.index_cast %2 : index to i32
    %95 = arith.index_cast %92 : index to i32
    %96 = arith.index_cast %79 : index to i32
    %97 = arith.index_cast %83 : index to i32
    %98 = gpu.buffer_load(%arg1, %93, %94, %95, %96, %97) : memref<128x1x1024x14x14xf32>, vector<2xf32>, i32, i32, i32, i32, i32
    %99 = vector.extractelement %98[%c0 : index] : vector<2xf32>
    %100 = vector.extractelement %98[%c1 : index] : vector<2xf32>
    %101 = arith.addi %63, %c2 : index
    %102 = arith.index_cast %69 : index to i32
    %103 = arith.index_cast %2 : index to i32
    %104 = arith.index_cast %101 : index to i32
    %105 = arith.index_cast %79 : index to i32
    %106 = arith.index_cast %83 : index to i32
    %107 = gpu.buffer_load(%arg1, %102, %103, %104, %105, %106) : memref<128x1x1024x14x14xf32>, vector<2xf32>, i32, i32, i32, i32, i32
    %108 = vector.extractelement %107[%c0 : index] : vector<2xf32>
    %109 = vector.extractelement %107[%c1 : index] : vector<2xf32>
    %110 = arith.addi %63, %c3 : index
    %111 = arith.index_cast %69 : index to i32
    %112 = arith.index_cast %2 : index to i32
    %113 = arith.index_cast %110 : index to i32
    %114 = arith.index_cast %79 : index to i32
    %115 = arith.index_cast %83 : index to i32
    %116 = gpu.buffer_load(%arg1, %111, %112, %113, %114, %115) : memref<128x1x1024x14x14xf32>, vector<2xf32>, i32, i32, i32, i32, i32
    %117 = vector.extractelement %116[%c0 : index] : vector<2xf32>
    %118 = vector.extractelement %116[%c1 : index] : vector<2xf32>
    %119 = arith.muli %17, %c512 : index
    %120 = arith.muli %19, %c4 : index
    %121 = arith.addi %119, %120 : index
    %122 = arith.addi %121, %c2048 : index
    memref.store %90, %21[%122] : memref<4096xf32, 3>
    %123 = arith.addi %122, %c1 : index
    memref.store %99, %21[%123] : memref<4096xf32, 3>
    %124 = arith.addi %122, %c2 : index
    memref.store %108, %21[%124] : memref<4096xf32, 3>
    %125 = arith.addi %122, %c3 : index
    memref.store %117, %21[%125] : memref<4096xf32, 3>
    %126 = arith.addi %122, %c4 : index
    memref.store %91, %21[%126] : memref<4096xf32, 3>
    %127 = arith.addi %122, %c5 : index
    memref.store %100, %21[%127] : memref<4096xf32, 3>
    %128 = arith.addi %122, %c6 : index
    memref.store %109, %21[%128] : memref<4096xf32, 3>
    %129 = arith.addi %122, %c7 : index
    memref.store %118, %21[%129] : memref<4096xf32, 3>
    %130 = arith.divui %1, %c64 : index
    %131 = arith.divui %130, %c2 : index
    %132 = arith.remui %130, %c2 : index
    %133 = arith.muli %131, %c64 : index
    %134 = arith.muli %132, %c64 : index
    %135 = miopen.alloc() : memref<4xvector<4xf32>, 5>
    %136 = miopen.alloc() : memref<4xvector<4xf32>, 5>
    %137:4 = affine.for %arg3 = 0 to 63 iter_args(%arg4 = %13, %arg5 = %17, %arg6 = %cst, %arg7 = %cst) -> (index, index, vector<32xf32>, vector<32xf32>) {
      %1528 = arith.addi %arg4, %c4 : index
      %1529 = arith.muli %1528, %c4 : index
      %1530 = arith.addi %1529, %15 : index
      %1531 = arith.index_cast %2 : index to i32
      %1532 = arith.index_cast %16 : index to i32
      %1533 = arith.index_cast %1530 : index to i32
      %1534 = gpu.buffer_load(%arg0, %1531, %1532, %1533, %c0_i32, %c0_i32) : memref<1x1024x1024x1x1xf32>, vector<2xf32>, i32, i32, i32, i32, i32
      %1535 = vector.extractelement %1534[%c0 : index] : vector<2xf32>
      %1536 = vector.extractelement %1534[%c1 : index] : vector<2xf32>
      %1537 = arith.addi %16, %c1 : index
      %1538 = arith.index_cast %2 : index to i32
      %1539 = arith.index_cast %1537 : index to i32
      %1540 = arith.index_cast %1530 : index to i32
      %1541 = gpu.buffer_load(%arg0, %1538, %1539, %1540, %c0_i32, %c0_i32) : memref<1x1024x1024x1x1xf32>, vector<2xf32>, i32, i32, i32, i32, i32
      %1542 = vector.extractelement %1541[%c0 : index] : vector<2xf32>
      %1543 = vector.extractelement %1541[%c1 : index] : vector<2xf32>
      %1544 = arith.addi %1530, %c4 : index
      %1545 = arith.index_cast %2 : index to i32
      %1546 = arith.index_cast %16 : index to i32
      %1547 = arith.index_cast %1544 : index to i32
      %1548 = gpu.buffer_load(%arg0, %1545, %1546, %1547, %c0_i32, %c0_i32) : memref<1x1024x1024x1x1xf32>, vector<2xf32>, i32, i32, i32, i32, i32
      %1549 = vector.extractelement %1548[%c0 : index] : vector<2xf32>
      %1550 = vector.extractelement %1548[%c1 : index] : vector<2xf32>
      %1551 = arith.addi %1530, %c4 : index
      %1552 = arith.addi %16, %c1 : index
      %1553 = arith.index_cast %2 : index to i32
      %1554 = arith.index_cast %1552 : index to i32
      %1555 = arith.index_cast %1551 : index to i32
      %1556 = gpu.buffer_load(%arg0, %1553, %1554, %1555, %c0_i32, %c0_i32) : memref<1x1024x1024x1x1xf32>, vector<2xf32>, i32, i32, i32, i32, i32
      %1557 = vector.extractelement %1556[%c0 : index] : vector<2xf32>
      %1558 = vector.extractelement %1556[%c1 : index] : vector<2xf32>
      %1559 = arith.addi %arg5, %c4 : index
      %1560 = arith.muli %1559, %c4 : index
      %1561 = arith.cmpi slt, %20, %c0 : index
      %1562 = arith.subi %c-1, %20 : index
      %1563 = select %1561, %1562, %20 : index
      %1564 = arith.divsi %1563, %c196 : index
      %1565 = arith.subi %c-1, %1564 : index
      %1566 = select %1561, %1565, %1564 : index
      %1567 = arith.remsi %20, %c196 : index
      %1568 = arith.cmpi slt, %1567, %c0 : index
      %1569 = arith.addi %1567, %c196 : index
      %1570 = select %1568, %1569, %1567 : index
      %1571 = arith.cmpi slt, %1570, %c0 : index
      %1572 = arith.subi %c-1, %1570 : index
      %1573 = select %1571, %1572, %1570 : index
      %1574 = arith.divsi %1573, %c14 : index
      %1575 = arith.subi %c-1, %1574 : index
      %1576 = select %1571, %1575, %1574 : index
      %1577 = arith.remsi %20, %c14 : index
      %1578 = arith.cmpi slt, %1577, %c0 : index
      %1579 = arith.addi %1577, %c14 : index
      %1580 = select %1578, %1579, %1577 : index
      %1581 = arith.index_cast %1566 : index to i32
      %1582 = arith.index_cast %2 : index to i32
      %1583 = arith.index_cast %1560 : index to i32
      %1584 = arith.index_cast %1576 : index to i32
      %1585 = arith.index_cast %1580 : index to i32
      %1586 = gpu.buffer_load(%arg1, %1581, %1582, %1583, %1584, %1585) : memref<128x1x1024x14x14xf32>, vector<2xf32>, i32, i32, i32, i32, i32
      %1587 = vector.extractelement %1586[%c0 : index] : vector<2xf32>
      %1588 = vector.extractelement %1586[%c1 : index] : vector<2xf32>
      %1589 = arith.addi %1560, %c1 : index
      %1590 = arith.index_cast %1566 : index to i32
      %1591 = arith.index_cast %2 : index to i32
      %1592 = arith.index_cast %1589 : index to i32
      %1593 = arith.index_cast %1576 : index to i32
      %1594 = arith.index_cast %1580 : index to i32
      %1595 = gpu.buffer_load(%arg1, %1590, %1591, %1592, %1593, %1594) : memref<128x1x1024x14x14xf32>, vector<2xf32>, i32, i32, i32, i32, i32
      %1596 = vector.extractelement %1595[%c0 : index] : vector<2xf32>
      %1597 = vector.extractelement %1595[%c1 : index] : vector<2xf32>
      %1598 = arith.addi %1560, %c2 : index
      %1599 = arith.index_cast %1566 : index to i32
      %1600 = arith.index_cast %2 : index to i32
      %1601 = arith.index_cast %1598 : index to i32
      %1602 = arith.index_cast %1576 : index to i32
      %1603 = arith.index_cast %1580 : index to i32
      %1604 = gpu.buffer_load(%arg1, %1599, %1600, %1601, %1602, %1603) : memref<128x1x1024x14x14xf32>, vector<2xf32>, i32, i32, i32, i32, i32
      %1605 = vector.extractelement %1604[%c0 : index] : vector<2xf32>
      %1606 = vector.extractelement %1604[%c1 : index] : vector<2xf32>
      %1607 = arith.addi %1560, %c3 : index
      %1608 = arith.index_cast %1566 : index to i32
      %1609 = arith.index_cast %2 : index to i32
      %1610 = arith.index_cast %1607 : index to i32
      %1611 = arith.index_cast %1576 : index to i32
      %1612 = arith.index_cast %1580 : index to i32
      %1613 = gpu.buffer_load(%arg1, %1608, %1609, %1610, %1611, %1612) : memref<128x1x1024x14x14xf32>, vector<2xf32>, i32, i32, i32, i32, i32
      %1614 = vector.extractelement %1613[%c0 : index] : vector<2xf32>
      %1615 = vector.extractelement %1613[%c1 : index] : vector<2xf32>
      miopen.lds_barrier
      %1616 = miopen.workitem_id : index
      %1617 = arith.remui %1616, %c64 : index
      affine.for %arg8 = 0 to 1 {
        %1641 = arith.muli %arg8, %c64 : index
        %1642 = arith.muli %arg8, %c4 : index
        affine.for %arg9 = 0 to 4 {
          %1643 = arith.muli %arg9, %c128 : index
          %1644 = arith.addi %1643, %1617 : index
          %1645 = arith.addi %1644, %1641 : index
          %1646 = arith.addi %133, %1645 : index
          %1647 = arith.muli %1646, %c4 : index
          %1648 = arith.addi %arg9, %1642 : index
          %1649 = memref.load %21[%1647] : memref<4096xf32, 3>
          %1650 = vector.insertelement %1649, %cst_0[%c0 : index] : vector<4xf32>
          %1651 = arith.addi %1647, %c1 : index
          %1652 = memref.load %21[%1651] : memref<4096xf32, 3>
          %1653 = vector.insertelement %1652, %1650[%c1 : index] : vector<4xf32>
          %1654 = arith.addi %1647, %c2 : index
          %1655 = memref.load %21[%1654] : memref<4096xf32, 3>
          %1656 = vector.insertelement %1655, %1653[%c2 : index] : vector<4xf32>
          %1657 = arith.addi %1647, %c3 : index
          %1658 = memref.load %21[%1657] : memref<4096xf32, 3>
          %1659 = vector.insertelement %1658, %1656[%c3 : index] : vector<4xf32>
          memref.store %1659, %135[%1648] : memref<4xvector<4xf32>, 5>
        }
      }
      affine.for %arg8 = 0 to 1 {
        %1641 = arith.muli %arg8, %c64 : index
        %1642 = arith.muli %arg8, %c4 : index
        affine.for %arg9 = 0 to 4 {
          %1643 = arith.muli %arg9, %c128 : index
          %1644 = arith.addi %1643, %1617 : index
          %1645 = arith.addi %1644, %1641 : index
          %1646 = arith.addi %134, %1645 : index
          %1647 = arith.muli %1646, %c4 : index
          %1648 = arith.addi %1647, %c2048 : index
          %1649 = arith.addi %arg9, %1642 : index
          %1650 = memref.load %21[%1648] : memref<4096xf32, 3>
          %1651 = vector.insertelement %1650, %cst_0[%c0 : index] : vector<4xf32>
          %1652 = arith.addi %1648, %c1 : index
          %1653 = memref.load %21[%1652] : memref<4096xf32, 3>
          %1654 = vector.insertelement %1653, %1651[%c1 : index] : vector<4xf32>
          %1655 = arith.addi %1648, %c2 : index
          %1656 = memref.load %21[%1655] : memref<4096xf32, 3>
          %1657 = vector.insertelement %1656, %1654[%c2 : index] : vector<4xf32>
          %1658 = arith.addi %1648, %c3 : index
          %1659 = memref.load %21[%1658] : memref<4096xf32, 3>
          %1660 = vector.insertelement %1659, %1657[%c3 : index] : vector<4xf32>
          memref.store %1660, %136[%1649] : memref<4xvector<4xf32>, 5>
        }
      }
      %1618:2 = affine.for %arg8 = 0 to 4 iter_args(%arg9 = %arg6, %arg10 = %arg7) -> (vector<32xf32>, vector<32xf32>) {
        %1641 = memref.load %135[%arg8] : memref<4xvector<4xf32>, 5>
        %1642 = memref.load %136[%arg8] : memref<4xvector<4xf32>, 5>
        %1643:2 = affine.for %arg11 = 0 to 4 iter_args(%arg12 = %arg9, %arg13 = %arg10) -> (vector<32xf32>, vector<32xf32>) {
          %1644 = vector.extractelement %1641[%arg11 : index] : vector<4xf32>
          %1645 = vector.extractelement %1642[%arg11 : index] : vector<4xf32>
          %1646 = miopen.mfma_v2(%1644, %1645, %arg12) {imm = [1 : i32, 0 : i32, 0 : i32], instr = "mfma_f32_32x32x1f32"} : f32, vector<32xf32>
          %1647 = miopen.mfma_v2(%1644, %1645, %arg13) {imm = [1 : i32, 1 : i32, 0 : i32], instr = "mfma_f32_32x32x1f32"} : f32, vector<32xf32>
          affine.yield %1646, %1647 : vector<32xf32>, vector<32xf32>
        }
        affine.yield %1643#0, %1643#1 : vector<32xf32>, vector<32xf32>
      }
      miopen.lds_barrier
      %1619 = arith.muli %13, %c512 : index
      %1620 = arith.muli %14, %c4 : index
      %1621 = arith.addi %1619, %1620 : index
      %1622 = arith.addi %1621, %15 : index
      memref.store %1535, %21[%1622] : memref<4096xf32, 3>
      %1623 = arith.addi %1622, %c1 : index
      memref.store %1536, %21[%1623] : memref<4096xf32, 3>
      %1624 = arith.addi %1622, %c4 : index
      memref.store %1542, %21[%1624] : memref<4096xf32, 3>
      %1625 = arith.addi %1622, %c5 : index
      memref.store %1543, %21[%1625] : memref<4096xf32, 3>
      %1626 = arith.addi %1622, %c512 : index
      memref.store %1549, %21[%1626] : memref<4096xf32, 3>
      %1627 = arith.addi %1622, %c513 : index
      memref.store %1550, %21[%1627] : memref<4096xf32, 3>
      %1628 = arith.addi %1622, %c516 : index
      memref.store %1557, %21[%1628] : memref<4096xf32, 3>
      %1629 = arith.addi %1622, %c517 : index
      memref.store %1558, %21[%1629] : memref<4096xf32, 3>
      %1630 = arith.muli %17, %c512 : index
      %1631 = arith.muli %19, %c4 : index
      %1632 = arith.addi %1630, %1631 : index
      %1633 = arith.addi %1632, %c2048 : index
      memref.store %1587, %21[%1633] : memref<4096xf32, 3>
      %1634 = arith.addi %1633, %c1 : index
      memref.store %1596, %21[%1634] : memref<4096xf32, 3>
      %1635 = arith.addi %1633, %c2 : index
      memref.store %1605, %21[%1635] : memref<4096xf32, 3>
      %1636 = arith.addi %1633, %c3 : index
      memref.store %1614, %21[%1636] : memref<4096xf32, 3>
      %1637 = arith.addi %1633, %c4 : index
      memref.store %1588, %21[%1637] : memref<4096xf32, 3>
      %1638 = arith.addi %1633, %c5 : index
      memref.store %1597, %21[%1638] : memref<4096xf32, 3>
      %1639 = arith.addi %1633, %c6 : index
      memref.store %1606, %21[%1639] : memref<4096xf32, 3>
      %1640 = arith.addi %1633, %c7 : index
      memref.store %1615, %21[%1640] : memref<4096xf32, 3>
      affine.yield %1528, %1559, %1618#0, %1618#1 : index, index, vector<32xf32>, vector<32xf32>
    }
    miopen.lds_barrier
    %138 = miopen.workitem_id : index
    %139 = arith.remui %138, %c64 : index
    affine.for %arg3 = 0 to 1 {
      %1528 = arith.muli %arg3, %c64 : index
      %1529 = arith.muli %arg3, %c4 : index
      affine.for %arg4 = 0 to 4 {
        %1530 = arith.muli %arg4, %c128 : index
        %1531 = arith.addi %1530, %139 : index
        %1532 = arith.addi %1531, %1528 : index
        %1533 = arith.addi %133, %1532 : index
        %1534 = arith.muli %1533, %c4 : index
        %1535 = arith.addi %arg4, %1529 : index
        %1536 = memref.load %21[%1534] : memref<4096xf32, 3>
        %1537 = vector.insertelement %1536, %cst_0[%c0 : index] : vector<4xf32>
        %1538 = arith.addi %1534, %c1 : index
        %1539 = memref.load %21[%1538] : memref<4096xf32, 3>
        %1540 = vector.insertelement %1539, %1537[%c1 : index] : vector<4xf32>
        %1541 = arith.addi %1534, %c2 : index
        %1542 = memref.load %21[%1541] : memref<4096xf32, 3>
        %1543 = vector.insertelement %1542, %1540[%c2 : index] : vector<4xf32>
        %1544 = arith.addi %1534, %c3 : index
        %1545 = memref.load %21[%1544] : memref<4096xf32, 3>
        %1546 = vector.insertelement %1545, %1543[%c3 : index] : vector<4xf32>
        memref.store %1546, %135[%1535] : memref<4xvector<4xf32>, 5>
      }
    }
    affine.for %arg3 = 0 to 1 {
      %1528 = arith.muli %arg3, %c64 : index
      %1529 = arith.muli %arg3, %c4 : index
      affine.for %arg4 = 0 to 4 {
        %1530 = arith.muli %arg4, %c128 : index
        %1531 = arith.addi %1530, %139 : index
        %1532 = arith.addi %1531, %1528 : index
        %1533 = arith.addi %134, %1532 : index
        %1534 = arith.muli %1533, %c4 : index
        %1535 = arith.addi %1534, %c2048 : index
        %1536 = arith.addi %arg4, %1529 : index
        %1537 = memref.load %21[%1535] : memref<4096xf32, 3>
        %1538 = vector.insertelement %1537, %cst_0[%c0 : index] : vector<4xf32>
        %1539 = arith.addi %1535, %c1 : index
        %1540 = memref.load %21[%1539] : memref<4096xf32, 3>
        %1541 = vector.insertelement %1540, %1538[%c1 : index] : vector<4xf32>
        %1542 = arith.addi %1535, %c2 : index
        %1543 = memref.load %21[%1542] : memref<4096xf32, 3>
        %1544 = vector.insertelement %1543, %1541[%c2 : index] : vector<4xf32>
        %1545 = arith.addi %1535, %c3 : index
        %1546 = memref.load %21[%1545] : memref<4096xf32, 3>
        %1547 = vector.insertelement %1546, %1544[%c3 : index] : vector<4xf32>
        memref.store %1547, %136[%1536] : memref<4xvector<4xf32>, 5>
      }
    }
    %140:2 = affine.for %arg3 = 0 to 4 iter_args(%arg4 = %137#2, %arg5 = %137#3) -> (vector<32xf32>, vector<32xf32>) {
      %1528 = memref.load %135[%arg3] : memref<4xvector<4xf32>, 5>
      %1529 = memref.load %136[%arg3] : memref<4xvector<4xf32>, 5>
      %1530:2 = affine.for %arg6 = 0 to 4 iter_args(%arg7 = %arg4, %arg8 = %arg5) -> (vector<32xf32>, vector<32xf32>) {
        %1531 = vector.extractelement %1528[%arg6 : index] : vector<4xf32>
        %1532 = vector.extractelement %1529[%arg6 : index] : vector<4xf32>
        %1533 = miopen.mfma_v2(%1531, %1532, %arg7) {imm = [1 : i32, 0 : i32, 0 : i32], instr = "mfma_f32_32x32x1f32"} : f32, vector<32xf32>
        %1534 = miopen.mfma_v2(%1531, %1532, %arg8) {imm = [1 : i32, 1 : i32, 0 : i32], instr = "mfma_f32_32x32x1f32"} : f32, vector<32xf32>
        affine.yield %1533, %1534 : vector<32xf32>, vector<32xf32>
      }
      affine.yield %1530#0, %1530#1 : vector<32xf32>, vector<32xf32>
    }
    %141 = arith.remui %1, %c64 : index
    %142 = arith.divui %141, %c32 : index
    %143 = arith.remui %141, %c32 : index
    %144 = arith.andi %141, %c2 : index
    %145 = arith.cmpi ne, %144, %c0 : index
    %146 = vector.extractelement %140#0[%c0 : index] : vector<32xf32>
    %147 = vector.extractelement %140#0[%c1 : index] : vector<32xf32>
    %148 = vector.extractelement %140#0[%c2 : index] : vector<32xf32>
    %149 = vector.extractelement %140#0[%c3 : index] : vector<32xf32>
    %150 = vector.extractelement %140#0[%c4 : index] : vector<32xf32>
    %151 = vector.extractelement %140#0[%c5 : index] : vector<32xf32>
    %152 = vector.extractelement %140#0[%c6 : index] : vector<32xf32>
    %153 = vector.extractelement %140#0[%c7 : index] : vector<32xf32>
    %154 = vector.extractelement %140#0[%c8 : index] : vector<32xf32>
    %155 = vector.extractelement %140#0[%c9 : index] : vector<32xf32>
    %156 = vector.extractelement %140#0[%c10 : index] : vector<32xf32>
    %157 = vector.extractelement %140#0[%c11 : index] : vector<32xf32>
    %158 = vector.extractelement %140#0[%c12 : index] : vector<32xf32>
    %159 = vector.extractelement %140#0[%c13 : index] : vector<32xf32>
    %160 = vector.extractelement %140#0[%c14 : index] : vector<32xf32>
    %161 = vector.extractelement %140#0[%c15 : index] : vector<32xf32>
    %162 = vector.extractelement %140#0[%c16 : index] : vector<32xf32>
    %163 = vector.extractelement %140#0[%c17 : index] : vector<32xf32>
    %164 = vector.extractelement %140#0[%c18 : index] : vector<32xf32>
    %165 = vector.extractelement %140#0[%c19 : index] : vector<32xf32>
    %166 = vector.extractelement %140#0[%c20 : index] : vector<32xf32>
    %167 = vector.extractelement %140#0[%c21 : index] : vector<32xf32>
    %168 = vector.extractelement %140#0[%c22 : index] : vector<32xf32>
    %169 = vector.extractelement %140#0[%c23 : index] : vector<32xf32>
    %170 = vector.extractelement %140#0[%c24 : index] : vector<32xf32>
    %171 = vector.extractelement %140#0[%c25 : index] : vector<32xf32>
    %172 = vector.extractelement %140#0[%c26 : index] : vector<32xf32>
    %173 = vector.extractelement %140#0[%c27 : index] : vector<32xf32>
    %174 = vector.extractelement %140#0[%c28 : index] : vector<32xf32>
    %175 = vector.extractelement %140#0[%c29 : index] : vector<32xf32>
    %176 = vector.extractelement %140#0[%c30 : index] : vector<32xf32>
    %177 = vector.extractelement %140#0[%c31 : index] : vector<32xf32>
    %178 = select %145, %146, %148 : f32
    %179 = vector.insertelement %178, %140#0[%c2 : index] : vector<32xf32>
    %180 = select %145, %147, %149 : f32
    %181 = vector.insertelement %180, %179[%c3 : index] : vector<32xf32>
    %182 = select %145, %148, %146 : f32
    %183 = vector.insertelement %182, %181[%c0 : index] : vector<32xf32>
    %184 = select %145, %149, %147 : f32
    %185 = vector.insertelement %184, %183[%c1 : index] : vector<32xf32>
    %186 = select %145, %150, %152 : f32
    %187 = vector.insertelement %186, %185[%c6 : index] : vector<32xf32>
    %188 = select %145, %151, %153 : f32
    %189 = vector.insertelement %188, %187[%c7 : index] : vector<32xf32>
    %190 = select %145, %152, %150 : f32
    %191 = vector.insertelement %190, %189[%c4 : index] : vector<32xf32>
    %192 = select %145, %153, %151 : f32
    %193 = vector.insertelement %192, %191[%c5 : index] : vector<32xf32>
    %194 = select %145, %154, %156 : f32
    %195 = vector.insertelement %194, %193[%c10 : index] : vector<32xf32>
    %196 = select %145, %155, %157 : f32
    %197 = vector.insertelement %196, %195[%c11 : index] : vector<32xf32>
    %198 = select %145, %156, %154 : f32
    %199 = vector.insertelement %198, %197[%c8 : index] : vector<32xf32>
    %200 = select %145, %157, %155 : f32
    %201 = vector.insertelement %200, %199[%c9 : index] : vector<32xf32>
    %202 = select %145, %158, %160 : f32
    %203 = vector.insertelement %202, %201[%c14 : index] : vector<32xf32>
    %204 = select %145, %159, %161 : f32
    %205 = vector.insertelement %204, %203[%c15 : index] : vector<32xf32>
    %206 = select %145, %160, %158 : f32
    %207 = vector.insertelement %206, %205[%c12 : index] : vector<32xf32>
    %208 = select %145, %161, %159 : f32
    %209 = vector.insertelement %208, %207[%c13 : index] : vector<32xf32>
    %210 = select %145, %162, %164 : f32
    %211 = vector.insertelement %210, %209[%c18 : index] : vector<32xf32>
    %212 = select %145, %163, %165 : f32
    %213 = vector.insertelement %212, %211[%c19 : index] : vector<32xf32>
    %214 = select %145, %164, %162 : f32
    %215 = vector.insertelement %214, %213[%c16 : index] : vector<32xf32>
    %216 = select %145, %165, %163 : f32
    %217 = vector.insertelement %216, %215[%c17 : index] : vector<32xf32>
    %218 = select %145, %166, %168 : f32
    %219 = vector.insertelement %218, %217[%c22 : index] : vector<32xf32>
    %220 = select %145, %167, %169 : f32
    %221 = vector.insertelement %220, %219[%c23 : index] : vector<32xf32>
    %222 = select %145, %168, %166 : f32
    %223 = vector.insertelement %222, %221[%c20 : index] : vector<32xf32>
    %224 = select %145, %169, %167 : f32
    %225 = vector.insertelement %224, %223[%c21 : index] : vector<32xf32>
    %226 = select %145, %170, %172 : f32
    %227 = vector.insertelement %226, %225[%c26 : index] : vector<32xf32>
    %228 = select %145, %171, %173 : f32
    %229 = vector.insertelement %228, %227[%c27 : index] : vector<32xf32>
    %230 = select %145, %172, %170 : f32
    %231 = vector.insertelement %230, %229[%c24 : index] : vector<32xf32>
    %232 = select %145, %173, %171 : f32
    %233 = vector.insertelement %232, %231[%c25 : index] : vector<32xf32>
    %234 = select %145, %174, %176 : f32
    %235 = vector.insertelement %234, %233[%c30 : index] : vector<32xf32>
    %236 = select %145, %175, %177 : f32
    %237 = vector.insertelement %236, %235[%c31 : index] : vector<32xf32>
    %238 = select %145, %176, %174 : f32
    %239 = vector.insertelement %238, %237[%c28 : index] : vector<32xf32>
    %240 = select %145, %177, %175 : f32
    %241 = vector.insertelement %240, %239[%c29 : index] : vector<32xf32>
    %242 = arith.andi %141, %c1 : index
    %243 = arith.cmpi ne, %242, %c0 : index
    %244 = vector.extractelement %241[%c0 : index] : vector<32xf32>
    %245 = vector.extractelement %241[%c1 : index] : vector<32xf32>
    %246 = vector.extractelement %241[%c2 : index] : vector<32xf32>
    %247 = vector.extractelement %241[%c3 : index] : vector<32xf32>
    %248 = vector.extractelement %241[%c4 : index] : vector<32xf32>
    %249 = vector.extractelement %241[%c5 : index] : vector<32xf32>
    %250 = vector.extractelement %241[%c6 : index] : vector<32xf32>
    %251 = vector.extractelement %241[%c7 : index] : vector<32xf32>
    %252 = vector.extractelement %241[%c8 : index] : vector<32xf32>
    %253 = vector.extractelement %241[%c9 : index] : vector<32xf32>
    %254 = vector.extractelement %241[%c10 : index] : vector<32xf32>
    %255 = vector.extractelement %241[%c11 : index] : vector<32xf32>
    %256 = vector.extractelement %241[%c12 : index] : vector<32xf32>
    %257 = vector.extractelement %241[%c13 : index] : vector<32xf32>
    %258 = vector.extractelement %241[%c14 : index] : vector<32xf32>
    %259 = vector.extractelement %241[%c15 : index] : vector<32xf32>
    %260 = vector.extractelement %241[%c16 : index] : vector<32xf32>
    %261 = vector.extractelement %241[%c17 : index] : vector<32xf32>
    %262 = vector.extractelement %241[%c18 : index] : vector<32xf32>
    %263 = vector.extractelement %241[%c19 : index] : vector<32xf32>
    %264 = vector.extractelement %241[%c20 : index] : vector<32xf32>
    %265 = vector.extractelement %241[%c21 : index] : vector<32xf32>
    %266 = vector.extractelement %241[%c22 : index] : vector<32xf32>
    %267 = vector.extractelement %241[%c23 : index] : vector<32xf32>
    %268 = vector.extractelement %241[%c24 : index] : vector<32xf32>
    %269 = vector.extractelement %241[%c25 : index] : vector<32xf32>
    %270 = vector.extractelement %241[%c26 : index] : vector<32xf32>
    %271 = vector.extractelement %241[%c27 : index] : vector<32xf32>
    %272 = vector.extractelement %241[%c28 : index] : vector<32xf32>
    %273 = vector.extractelement %241[%c29 : index] : vector<32xf32>
    %274 = vector.extractelement %241[%c30 : index] : vector<32xf32>
    %275 = vector.extractelement %241[%c31 : index] : vector<32xf32>
    %276 = select %243, %244, %245 : f32
    %277 = vector.insertelement %276, %241[%c1 : index] : vector<32xf32>
    %278 = select %243, %245, %246 : f32
    %279 = vector.insertelement %278, %277[%c2 : index] : vector<32xf32>
    %280 = select %243, %246, %247 : f32
    %281 = vector.insertelement %280, %279[%c3 : index] : vector<32xf32>
    %282 = select %243, %247, %244 : f32
    %283 = vector.insertelement %282, %281[%c0 : index] : vector<32xf32>
    %284 = select %243, %248, %249 : f32
    %285 = vector.insertelement %284, %283[%c5 : index] : vector<32xf32>
    %286 = select %243, %249, %250 : f32
    %287 = vector.insertelement %286, %285[%c6 : index] : vector<32xf32>
    %288 = select %243, %250, %251 : f32
    %289 = vector.insertelement %288, %287[%c7 : index] : vector<32xf32>
    %290 = select %243, %251, %248 : f32
    %291 = vector.insertelement %290, %289[%c4 : index] : vector<32xf32>
    %292 = select %243, %252, %253 : f32
    %293 = vector.insertelement %292, %291[%c9 : index] : vector<32xf32>
    %294 = select %243, %253, %254 : f32
    %295 = vector.insertelement %294, %293[%c10 : index] : vector<32xf32>
    %296 = select %243, %254, %255 : f32
    %297 = vector.insertelement %296, %295[%c11 : index] : vector<32xf32>
    %298 = select %243, %255, %252 : f32
    %299 = vector.insertelement %298, %297[%c8 : index] : vector<32xf32>
    %300 = select %243, %256, %257 : f32
    %301 = vector.insertelement %300, %299[%c13 : index] : vector<32xf32>
    %302 = select %243, %257, %258 : f32
    %303 = vector.insertelement %302, %301[%c14 : index] : vector<32xf32>
    %304 = select %243, %258, %259 : f32
    %305 = vector.insertelement %304, %303[%c15 : index] : vector<32xf32>
    %306 = select %243, %259, %256 : f32
    %307 = vector.insertelement %306, %305[%c12 : index] : vector<32xf32>
    %308 = select %243, %260, %261 : f32
    %309 = vector.insertelement %308, %307[%c17 : index] : vector<32xf32>
    %310 = select %243, %261, %262 : f32
    %311 = vector.insertelement %310, %309[%c18 : index] : vector<32xf32>
    %312 = select %243, %262, %263 : f32
    %313 = vector.insertelement %312, %311[%c19 : index] : vector<32xf32>
    %314 = select %243, %263, %260 : f32
    %315 = vector.insertelement %314, %313[%c16 : index] : vector<32xf32>
    %316 = select %243, %264, %265 : f32
    %317 = vector.insertelement %316, %315[%c21 : index] : vector<32xf32>
    %318 = select %243, %265, %266 : f32
    %319 = vector.insertelement %318, %317[%c22 : index] : vector<32xf32>
    %320 = select %243, %266, %267 : f32
    %321 = vector.insertelement %320, %319[%c23 : index] : vector<32xf32>
    %322 = select %243, %267, %264 : f32
    %323 = vector.insertelement %322, %321[%c20 : index] : vector<32xf32>
    %324 = select %243, %268, %269 : f32
    %325 = vector.insertelement %324, %323[%c25 : index] : vector<32xf32>
    %326 = select %243, %269, %270 : f32
    %327 = vector.insertelement %326, %325[%c26 : index] : vector<32xf32>
    %328 = select %243, %270, %271 : f32
    %329 = vector.insertelement %328, %327[%c27 : index] : vector<32xf32>
    %330 = select %243, %271, %268 : f32
    %331 = vector.insertelement %330, %329[%c24 : index] : vector<32xf32>
    %332 = select %243, %272, %273 : f32
    %333 = vector.insertelement %332, %331[%c29 : index] : vector<32xf32>
    %334 = select %243, %273, %274 : f32
    %335 = vector.insertelement %334, %333[%c30 : index] : vector<32xf32>
    %336 = select %243, %274, %275 : f32
    %337 = vector.insertelement %336, %335[%c31 : index] : vector<32xf32>
    %338 = select %243, %275, %272 : f32
    %339 = vector.insertelement %338, %337[%c28 : index] : vector<32xf32>
    %340 = vector.bitcast %339 : vector<32xf32> to vector<32xi32>
    %341 = vector.extractelement %340[%c0 : index] : vector<32xi32>
    %342 = vector.extractelement %340[%c1 : index] : vector<32xi32>
    %343 = vector.extractelement %340[%c2 : index] : vector<32xi32>
    %344 = vector.extractelement %340[%c3 : index] : vector<32xi32>
    %345 = vector.extractelement %340[%c4 : index] : vector<32xi32>
    %346 = vector.extractelement %340[%c5 : index] : vector<32xi32>
    %347 = vector.extractelement %340[%c6 : index] : vector<32xi32>
    %348 = vector.extractelement %340[%c7 : index] : vector<32xi32>
    %349 = vector.extractelement %340[%c8 : index] : vector<32xi32>
    %350 = vector.extractelement %340[%c9 : index] : vector<32xi32>
    %351 = vector.extractelement %340[%c10 : index] : vector<32xi32>
    %352 = vector.extractelement %340[%c11 : index] : vector<32xi32>
    %353 = vector.extractelement %340[%c12 : index] : vector<32xi32>
    %354 = vector.extractelement %340[%c13 : index] : vector<32xi32>
    %355 = vector.extractelement %340[%c14 : index] : vector<32xi32>
    %356 = vector.extractelement %340[%c15 : index] : vector<32xi32>
    %357 = vector.extractelement %340[%c16 : index] : vector<32xi32>
    %358 = vector.extractelement %340[%c17 : index] : vector<32xi32>
    %359 = vector.extractelement %340[%c18 : index] : vector<32xi32>
    %360 = vector.extractelement %340[%c19 : index] : vector<32xi32>
    %361 = vector.extractelement %340[%c20 : index] : vector<32xi32>
    %362 = vector.extractelement %340[%c21 : index] : vector<32xi32>
    %363 = vector.extractelement %340[%c22 : index] : vector<32xi32>
    %364 = vector.extractelement %340[%c23 : index] : vector<32xi32>
    %365 = vector.extractelement %340[%c24 : index] : vector<32xi32>
    %366 = vector.extractelement %340[%c25 : index] : vector<32xi32>
    %367 = vector.extractelement %340[%c26 : index] : vector<32xi32>
    %368 = vector.extractelement %340[%c27 : index] : vector<32xi32>
    %369 = vector.extractelement %340[%c28 : index] : vector<32xi32>
    %370 = vector.extractelement %340[%c29 : index] : vector<32xi32>
    %371 = vector.extractelement %340[%c30 : index] : vector<32xi32>
    %372 = vector.extractelement %340[%c31 : index] : vector<32xi32>
    %373 = gpu.warp_swizzle {selector = [0 : i32, 3 : i32, 2 : i32, 1 : i32]} %341 : i32
    %374 = gpu.warp_swizzle {selector = [1 : i32, 0 : i32, 3 : i32, 2 : i32]} %342 : i32
    %375 = gpu.warp_swizzle {selector = [2 : i32, 1 : i32, 0 : i32, 3 : i32]} %343 : i32
    %376 = gpu.warp_swizzle {selector = [3 : i32, 2 : i32, 1 : i32, 0 : i32]} %344 : i32
    %377 = gpu.warp_swizzle {selector = [0 : i32, 3 : i32, 2 : i32, 1 : i32]} %345 : i32
    %378 = gpu.warp_swizzle {selector = [1 : i32, 0 : i32, 3 : i32, 2 : i32]} %346 : i32
    %379 = gpu.warp_swizzle {selector = [2 : i32, 1 : i32, 0 : i32, 3 : i32]} %347 : i32
    %380 = gpu.warp_swizzle {selector = [3 : i32, 2 : i32, 1 : i32, 0 : i32]} %348 : i32
    %381 = gpu.warp_swizzle {selector = [0 : i32, 3 : i32, 2 : i32, 1 : i32]} %349 : i32
    %382 = gpu.warp_swizzle {selector = [1 : i32, 0 : i32, 3 : i32, 2 : i32]} %350 : i32
    %383 = gpu.warp_swizzle {selector = [2 : i32, 1 : i32, 0 : i32, 3 : i32]} %351 : i32
    %384 = gpu.warp_swizzle {selector = [3 : i32, 2 : i32, 1 : i32, 0 : i32]} %352 : i32
    %385 = gpu.warp_swizzle {selector = [0 : i32, 3 : i32, 2 : i32, 1 : i32]} %353 : i32
    %386 = gpu.warp_swizzle {selector = [1 : i32, 0 : i32, 3 : i32, 2 : i32]} %354 : i32
    %387 = gpu.warp_swizzle {selector = [2 : i32, 1 : i32, 0 : i32, 3 : i32]} %355 : i32
    %388 = gpu.warp_swizzle {selector = [3 : i32, 2 : i32, 1 : i32, 0 : i32]} %356 : i32
    %389 = gpu.warp_swizzle {selector = [0 : i32, 3 : i32, 2 : i32, 1 : i32]} %357 : i32
    %390 = gpu.warp_swizzle {selector = [1 : i32, 0 : i32, 3 : i32, 2 : i32]} %358 : i32
    %391 = gpu.warp_swizzle {selector = [2 : i32, 1 : i32, 0 : i32, 3 : i32]} %359 : i32
    %392 = gpu.warp_swizzle {selector = [3 : i32, 2 : i32, 1 : i32, 0 : i32]} %360 : i32
    %393 = gpu.warp_swizzle {selector = [0 : i32, 3 : i32, 2 : i32, 1 : i32]} %361 : i32
    %394 = gpu.warp_swizzle {selector = [1 : i32, 0 : i32, 3 : i32, 2 : i32]} %362 : i32
    %395 = gpu.warp_swizzle {selector = [2 : i32, 1 : i32, 0 : i32, 3 : i32]} %363 : i32
    %396 = gpu.warp_swizzle {selector = [3 : i32, 2 : i32, 1 : i32, 0 : i32]} %364 : i32
    %397 = gpu.warp_swizzle {selector = [0 : i32, 3 : i32, 2 : i32, 1 : i32]} %365 : i32
    %398 = gpu.warp_swizzle {selector = [1 : i32, 0 : i32, 3 : i32, 2 : i32]} %366 : i32
    %399 = gpu.warp_swizzle {selector = [2 : i32, 1 : i32, 0 : i32, 3 : i32]} %367 : i32
    %400 = gpu.warp_swizzle {selector = [3 : i32, 2 : i32, 1 : i32, 0 : i32]} %368 : i32
    %401 = gpu.warp_swizzle {selector = [0 : i32, 3 : i32, 2 : i32, 1 : i32]} %369 : i32
    %402 = gpu.warp_swizzle {selector = [1 : i32, 0 : i32, 3 : i32, 2 : i32]} %370 : i32
    %403 = gpu.warp_swizzle {selector = [2 : i32, 1 : i32, 0 : i32, 3 : i32]} %371 : i32
    %404 = gpu.warp_swizzle {selector = [3 : i32, 2 : i32, 1 : i32, 0 : i32]} %372 : i32
    %405 = vector.insertelement %373, %340[%c0 : index] : vector<32xi32>
    %406 = vector.insertelement %374, %405[%c1 : index] : vector<32xi32>
    %407 = vector.insertelement %375, %406[%c2 : index] : vector<32xi32>
    %408 = vector.insertelement %376, %407[%c3 : index] : vector<32xi32>
    %409 = vector.insertelement %377, %408[%c4 : index] : vector<32xi32>
    %410 = vector.insertelement %378, %409[%c5 : index] : vector<32xi32>
    %411 = vector.insertelement %379, %410[%c6 : index] : vector<32xi32>
    %412 = vector.insertelement %380, %411[%c7 : index] : vector<32xi32>
    %413 = vector.insertelement %381, %412[%c8 : index] : vector<32xi32>
    %414 = vector.insertelement %382, %413[%c9 : index] : vector<32xi32>
    %415 = vector.insertelement %383, %414[%c10 : index] : vector<32xi32>
    %416 = vector.insertelement %384, %415[%c11 : index] : vector<32xi32>
    %417 = vector.insertelement %385, %416[%c12 : index] : vector<32xi32>
    %418 = vector.insertelement %386, %417[%c13 : index] : vector<32xi32>
    %419 = vector.insertelement %387, %418[%c14 : index] : vector<32xi32>
    %420 = vector.insertelement %388, %419[%c15 : index] : vector<32xi32>
    %421 = vector.insertelement %389, %420[%c16 : index] : vector<32xi32>
    %422 = vector.insertelement %390, %421[%c17 : index] : vector<32xi32>
    %423 = vector.insertelement %391, %422[%c18 : index] : vector<32xi32>
    %424 = vector.insertelement %392, %423[%c19 : index] : vector<32xi32>
    %425 = vector.insertelement %393, %424[%c20 : index] : vector<32xi32>
    %426 = vector.insertelement %394, %425[%c21 : index] : vector<32xi32>
    %427 = vector.insertelement %395, %426[%c22 : index] : vector<32xi32>
    %428 = vector.insertelement %396, %427[%c23 : index] : vector<32xi32>
    %429 = vector.insertelement %397, %428[%c24 : index] : vector<32xi32>
    %430 = vector.insertelement %398, %429[%c25 : index] : vector<32xi32>
    %431 = vector.insertelement %399, %430[%c26 : index] : vector<32xi32>
    %432 = vector.insertelement %400, %431[%c27 : index] : vector<32xi32>
    %433 = vector.insertelement %401, %432[%c28 : index] : vector<32xi32>
    %434 = vector.insertelement %402, %433[%c29 : index] : vector<32xi32>
    %435 = vector.insertelement %403, %434[%c30 : index] : vector<32xi32>
    %436 = vector.insertelement %404, %435[%c31 : index] : vector<32xi32>
    %437 = vector.bitcast %436 : vector<32xi32> to vector<32xf32>
    %438 = arith.andi %141, %c1 : index
    %439 = arith.cmpi ne, %438, %c0 : index
    %440 = vector.extractelement %437[%c0 : index] : vector<32xf32>
    %441 = vector.extractelement %437[%c1 : index] : vector<32xf32>
    %442 = vector.extractelement %437[%c2 : index] : vector<32xf32>
    %443 = vector.extractelement %437[%c3 : index] : vector<32xf32>
    %444 = vector.extractelement %437[%c4 : index] : vector<32xf32>
    %445 = vector.extractelement %437[%c5 : index] : vector<32xf32>
    %446 = vector.extractelement %437[%c6 : index] : vector<32xf32>
    %447 = vector.extractelement %437[%c7 : index] : vector<32xf32>
    %448 = vector.extractelement %437[%c8 : index] : vector<32xf32>
    %449 = vector.extractelement %437[%c9 : index] : vector<32xf32>
    %450 = vector.extractelement %437[%c10 : index] : vector<32xf32>
    %451 = vector.extractelement %437[%c11 : index] : vector<32xf32>
    %452 = vector.extractelement %437[%c12 : index] : vector<32xf32>
    %453 = vector.extractelement %437[%c13 : index] : vector<32xf32>
    %454 = vector.extractelement %437[%c14 : index] : vector<32xf32>
    %455 = vector.extractelement %437[%c15 : index] : vector<32xf32>
    %456 = vector.extractelement %437[%c16 : index] : vector<32xf32>
    %457 = vector.extractelement %437[%c17 : index] : vector<32xf32>
    %458 = vector.extractelement %437[%c18 : index] : vector<32xf32>
    %459 = vector.extractelement %437[%c19 : index] : vector<32xf32>
    %460 = vector.extractelement %437[%c20 : index] : vector<32xf32>
    %461 = vector.extractelement %437[%c21 : index] : vector<32xf32>
    %462 = vector.extractelement %437[%c22 : index] : vector<32xf32>
    %463 = vector.extractelement %437[%c23 : index] : vector<32xf32>
    %464 = vector.extractelement %437[%c24 : index] : vector<32xf32>
    %465 = vector.extractelement %437[%c25 : index] : vector<32xf32>
    %466 = vector.extractelement %437[%c26 : index] : vector<32xf32>
    %467 = vector.extractelement %437[%c27 : index] : vector<32xf32>
    %468 = vector.extractelement %437[%c28 : index] : vector<32xf32>
    %469 = vector.extractelement %437[%c29 : index] : vector<32xf32>
    %470 = vector.extractelement %437[%c30 : index] : vector<32xf32>
    %471 = vector.extractelement %437[%c31 : index] : vector<32xf32>
    %472 = select %439, %440, %443 : f32
    %473 = vector.insertelement %472, %437[%c3 : index] : vector<32xf32>
    %474 = select %439, %441, %440 : f32
    %475 = vector.insertelement %474, %473[%c0 : index] : vector<32xf32>
    %476 = select %439, %442, %441 : f32
    %477 = vector.insertelement %476, %475[%c1 : index] : vector<32xf32>
    %478 = select %439, %443, %442 : f32
    %479 = vector.insertelement %478, %477[%c2 : index] : vector<32xf32>
    %480 = select %439, %444, %447 : f32
    %481 = vector.insertelement %480, %479[%c7 : index] : vector<32xf32>
    %482 = select %439, %445, %444 : f32
    %483 = vector.insertelement %482, %481[%c4 : index] : vector<32xf32>
    %484 = select %439, %446, %445 : f32
    %485 = vector.insertelement %484, %483[%c5 : index] : vector<32xf32>
    %486 = select %439, %447, %446 : f32
    %487 = vector.insertelement %486, %485[%c6 : index] : vector<32xf32>
    %488 = select %439, %448, %451 : f32
    %489 = vector.insertelement %488, %487[%c11 : index] : vector<32xf32>
    %490 = select %439, %449, %448 : f32
    %491 = vector.insertelement %490, %489[%c8 : index] : vector<32xf32>
    %492 = select %439, %450, %449 : f32
    %493 = vector.insertelement %492, %491[%c9 : index] : vector<32xf32>
    %494 = select %439, %451, %450 : f32
    %495 = vector.insertelement %494, %493[%c10 : index] : vector<32xf32>
    %496 = select %439, %452, %455 : f32
    %497 = vector.insertelement %496, %495[%c15 : index] : vector<32xf32>
    %498 = select %439, %453, %452 : f32
    %499 = vector.insertelement %498, %497[%c12 : index] : vector<32xf32>
    %500 = select %439, %454, %453 : f32
    %501 = vector.insertelement %500, %499[%c13 : index] : vector<32xf32>
    %502 = select %439, %455, %454 : f32
    %503 = vector.insertelement %502, %501[%c14 : index] : vector<32xf32>
    %504 = select %439, %456, %459 : f32
    %505 = vector.insertelement %504, %503[%c19 : index] : vector<32xf32>
    %506 = select %439, %457, %456 : f32
    %507 = vector.insertelement %506, %505[%c16 : index] : vector<32xf32>
    %508 = select %439, %458, %457 : f32
    %509 = vector.insertelement %508, %507[%c17 : index] : vector<32xf32>
    %510 = select %439, %459, %458 : f32
    %511 = vector.insertelement %510, %509[%c18 : index] : vector<32xf32>
    %512 = select %439, %460, %463 : f32
    %513 = vector.insertelement %512, %511[%c23 : index] : vector<32xf32>
    %514 = select %439, %461, %460 : f32
    %515 = vector.insertelement %514, %513[%c20 : index] : vector<32xf32>
    %516 = select %439, %462, %461 : f32
    %517 = vector.insertelement %516, %515[%c21 : index] : vector<32xf32>
    %518 = select %439, %463, %462 : f32
    %519 = vector.insertelement %518, %517[%c22 : index] : vector<32xf32>
    %520 = select %439, %464, %467 : f32
    %521 = vector.insertelement %520, %519[%c27 : index] : vector<32xf32>
    %522 = select %439, %465, %464 : f32
    %523 = vector.insertelement %522, %521[%c24 : index] : vector<32xf32>
    %524 = select %439, %466, %465 : f32
    %525 = vector.insertelement %524, %523[%c25 : index] : vector<32xf32>
    %526 = select %439, %467, %466 : f32
    %527 = vector.insertelement %526, %525[%c26 : index] : vector<32xf32>
    %528 = select %439, %468, %471 : f32
    %529 = vector.insertelement %528, %527[%c31 : index] : vector<32xf32>
    %530 = select %439, %469, %468 : f32
    %531 = vector.insertelement %530, %529[%c28 : index] : vector<32xf32>
    %532 = select %439, %470, %469 : f32
    %533 = vector.insertelement %532, %531[%c29 : index] : vector<32xf32>
    %534 = select %439, %471, %470 : f32
    %535 = vector.insertelement %534, %533[%c30 : index] : vector<32xf32>
    %536 = arith.andi %141, %c2 : index
    %537 = arith.cmpi ne, %536, %c0 : index
    %538 = vector.extractelement %535[%c0 : index] : vector<32xf32>
    %539 = vector.extractelement %535[%c1 : index] : vector<32xf32>
    %540 = vector.extractelement %535[%c2 : index] : vector<32xf32>
    %541 = vector.extractelement %535[%c3 : index] : vector<32xf32>
    %542 = vector.extractelement %535[%c4 : index] : vector<32xf32>
    %543 = vector.extractelement %535[%c5 : index] : vector<32xf32>
    %544 = vector.extractelement %535[%c6 : index] : vector<32xf32>
    %545 = vector.extractelement %535[%c7 : index] : vector<32xf32>
    %546 = vector.extractelement %535[%c8 : index] : vector<32xf32>
    %547 = vector.extractelement %535[%c9 : index] : vector<32xf32>
    %548 = vector.extractelement %535[%c10 : index] : vector<32xf32>
    %549 = vector.extractelement %535[%c11 : index] : vector<32xf32>
    %550 = vector.extractelement %535[%c12 : index] : vector<32xf32>
    %551 = vector.extractelement %535[%c13 : index] : vector<32xf32>
    %552 = vector.extractelement %535[%c14 : index] : vector<32xf32>
    %553 = vector.extractelement %535[%c15 : index] : vector<32xf32>
    %554 = vector.extractelement %535[%c16 : index] : vector<32xf32>
    %555 = vector.extractelement %535[%c17 : index] : vector<32xf32>
    %556 = vector.extractelement %535[%c18 : index] : vector<32xf32>
    %557 = vector.extractelement %535[%c19 : index] : vector<32xf32>
    %558 = vector.extractelement %535[%c20 : index] : vector<32xf32>
    %559 = vector.extractelement %535[%c21 : index] : vector<32xf32>
    %560 = vector.extractelement %535[%c22 : index] : vector<32xf32>
    %561 = vector.extractelement %535[%c23 : index] : vector<32xf32>
    %562 = vector.extractelement %535[%c24 : index] : vector<32xf32>
    %563 = vector.extractelement %535[%c25 : index] : vector<32xf32>
    %564 = vector.extractelement %535[%c26 : index] : vector<32xf32>
    %565 = vector.extractelement %535[%c27 : index] : vector<32xf32>
    %566 = vector.extractelement %535[%c28 : index] : vector<32xf32>
    %567 = vector.extractelement %535[%c29 : index] : vector<32xf32>
    %568 = vector.extractelement %535[%c30 : index] : vector<32xf32>
    %569 = vector.extractelement %535[%c31 : index] : vector<32xf32>
    %570 = select %537, %538, %540 : f32
    %571 = vector.insertelement %570, %535[%c2 : index] : vector<32xf32>
    %572 = select %537, %539, %541 : f32
    %573 = vector.insertelement %572, %571[%c3 : index] : vector<32xf32>
    %574 = select %537, %540, %538 : f32
    %575 = vector.insertelement %574, %573[%c0 : index] : vector<32xf32>
    %576 = select %537, %541, %539 : f32
    %577 = vector.insertelement %576, %575[%c1 : index] : vector<32xf32>
    %578 = select %537, %542, %544 : f32
    %579 = vector.insertelement %578, %577[%c6 : index] : vector<32xf32>
    %580 = select %537, %543, %545 : f32
    %581 = vector.insertelement %580, %579[%c7 : index] : vector<32xf32>
    %582 = select %537, %544, %542 : f32
    %583 = vector.insertelement %582, %581[%c4 : index] : vector<32xf32>
    %584 = select %537, %545, %543 : f32
    %585 = vector.insertelement %584, %583[%c5 : index] : vector<32xf32>
    %586 = select %537, %546, %548 : f32
    %587 = vector.insertelement %586, %585[%c10 : index] : vector<32xf32>
    %588 = select %537, %547, %549 : f32
    %589 = vector.insertelement %588, %587[%c11 : index] : vector<32xf32>
    %590 = select %537, %548, %546 : f32
    %591 = vector.insertelement %590, %589[%c8 : index] : vector<32xf32>
    %592 = select %537, %549, %547 : f32
    %593 = vector.insertelement %592, %591[%c9 : index] : vector<32xf32>
    %594 = select %537, %550, %552 : f32
    %595 = vector.insertelement %594, %593[%c14 : index] : vector<32xf32>
    %596 = select %537, %551, %553 : f32
    %597 = vector.insertelement %596, %595[%c15 : index] : vector<32xf32>
    %598 = select %537, %552, %550 : f32
    %599 = vector.insertelement %598, %597[%c12 : index] : vector<32xf32>
    %600 = select %537, %553, %551 : f32
    %601 = vector.insertelement %600, %599[%c13 : index] : vector<32xf32>
    %602 = select %537, %554, %556 : f32
    %603 = vector.insertelement %602, %601[%c18 : index] : vector<32xf32>
    %604 = select %537, %555, %557 : f32
    %605 = vector.insertelement %604, %603[%c19 : index] : vector<32xf32>
    %606 = select %537, %556, %554 : f32
    %607 = vector.insertelement %606, %605[%c16 : index] : vector<32xf32>
    %608 = select %537, %557, %555 : f32
    %609 = vector.insertelement %608, %607[%c17 : index] : vector<32xf32>
    %610 = select %537, %558, %560 : f32
    %611 = vector.insertelement %610, %609[%c22 : index] : vector<32xf32>
    %612 = select %537, %559, %561 : f32
    %613 = vector.insertelement %612, %611[%c23 : index] : vector<32xf32>
    %614 = select %537, %560, %558 : f32
    %615 = vector.insertelement %614, %613[%c20 : index] : vector<32xf32>
    %616 = select %537, %561, %559 : f32
    %617 = vector.insertelement %616, %615[%c21 : index] : vector<32xf32>
    %618 = select %537, %562, %564 : f32
    %619 = vector.insertelement %618, %617[%c26 : index] : vector<32xf32>
    %620 = select %537, %563, %565 : f32
    %621 = vector.insertelement %620, %619[%c27 : index] : vector<32xf32>
    %622 = select %537, %564, %562 : f32
    %623 = vector.insertelement %622, %621[%c24 : index] : vector<32xf32>
    %624 = select %537, %565, %563 : f32
    %625 = vector.insertelement %624, %623[%c25 : index] : vector<32xf32>
    %626 = select %537, %566, %568 : f32
    %627 = vector.insertelement %626, %625[%c30 : index] : vector<32xf32>
    %628 = select %537, %567, %569 : f32
    %629 = vector.insertelement %628, %627[%c31 : index] : vector<32xf32>
    %630 = select %537, %568, %566 : f32
    %631 = vector.insertelement %630, %629[%c28 : index] : vector<32xf32>
    %632 = select %537, %569, %567 : f32
    %633 = vector.insertelement %632, %631[%c29 : index] : vector<32xf32>
    %634 = arith.andi %141, %c2 : index
    %635 = arith.cmpi ne, %634, %c0 : index
    %636 = vector.extractelement %140#1[%c0 : index] : vector<32xf32>
    %637 = vector.extractelement %140#1[%c1 : index] : vector<32xf32>
    %638 = vector.extractelement %140#1[%c2 : index] : vector<32xf32>
    %639 = vector.extractelement %140#1[%c3 : index] : vector<32xf32>
    %640 = vector.extractelement %140#1[%c4 : index] : vector<32xf32>
    %641 = vector.extractelement %140#1[%c5 : index] : vector<32xf32>
    %642 = vector.extractelement %140#1[%c6 : index] : vector<32xf32>
    %643 = vector.extractelement %140#1[%c7 : index] : vector<32xf32>
    %644 = vector.extractelement %140#1[%c8 : index] : vector<32xf32>
    %645 = vector.extractelement %140#1[%c9 : index] : vector<32xf32>
    %646 = vector.extractelement %140#1[%c10 : index] : vector<32xf32>
    %647 = vector.extractelement %140#1[%c11 : index] : vector<32xf32>
    %648 = vector.extractelement %140#1[%c12 : index] : vector<32xf32>
    %649 = vector.extractelement %140#1[%c13 : index] : vector<32xf32>
    %650 = vector.extractelement %140#1[%c14 : index] : vector<32xf32>
    %651 = vector.extractelement %140#1[%c15 : index] : vector<32xf32>
    %652 = vector.extractelement %140#1[%c16 : index] : vector<32xf32>
    %653 = vector.extractelement %140#1[%c17 : index] : vector<32xf32>
    %654 = vector.extractelement %140#1[%c18 : index] : vector<32xf32>
    %655 = vector.extractelement %140#1[%c19 : index] : vector<32xf32>
    %656 = vector.extractelement %140#1[%c20 : index] : vector<32xf32>
    %657 = vector.extractelement %140#1[%c21 : index] : vector<32xf32>
    %658 = vector.extractelement %140#1[%c22 : index] : vector<32xf32>
    %659 = vector.extractelement %140#1[%c23 : index] : vector<32xf32>
    %660 = vector.extractelement %140#1[%c24 : index] : vector<32xf32>
    %661 = vector.extractelement %140#1[%c25 : index] : vector<32xf32>
    %662 = vector.extractelement %140#1[%c26 : index] : vector<32xf32>
    %663 = vector.extractelement %140#1[%c27 : index] : vector<32xf32>
    %664 = vector.extractelement %140#1[%c28 : index] : vector<32xf32>
    %665 = vector.extractelement %140#1[%c29 : index] : vector<32xf32>
    %666 = vector.extractelement %140#1[%c30 : index] : vector<32xf32>
    %667 = vector.extractelement %140#1[%c31 : index] : vector<32xf32>
    %668 = select %635, %636, %638 : f32
    %669 = vector.insertelement %668, %140#1[%c2 : index] : vector<32xf32>
    %670 = select %635, %637, %639 : f32
    %671 = vector.insertelement %670, %669[%c3 : index] : vector<32xf32>
    %672 = select %635, %638, %636 : f32
    %673 = vector.insertelement %672, %671[%c0 : index] : vector<32xf32>
    %674 = select %635, %639, %637 : f32
    %675 = vector.insertelement %674, %673[%c1 : index] : vector<32xf32>
    %676 = select %635, %640, %642 : f32
    %677 = vector.insertelement %676, %675[%c6 : index] : vector<32xf32>
    %678 = select %635, %641, %643 : f32
    %679 = vector.insertelement %678, %677[%c7 : index] : vector<32xf32>
    %680 = select %635, %642, %640 : f32
    %681 = vector.insertelement %680, %679[%c4 : index] : vector<32xf32>
    %682 = select %635, %643, %641 : f32
    %683 = vector.insertelement %682, %681[%c5 : index] : vector<32xf32>
    %684 = select %635, %644, %646 : f32
    %685 = vector.insertelement %684, %683[%c10 : index] : vector<32xf32>
    %686 = select %635, %645, %647 : f32
    %687 = vector.insertelement %686, %685[%c11 : index] : vector<32xf32>
    %688 = select %635, %646, %644 : f32
    %689 = vector.insertelement %688, %687[%c8 : index] : vector<32xf32>
    %690 = select %635, %647, %645 : f32
    %691 = vector.insertelement %690, %689[%c9 : index] : vector<32xf32>
    %692 = select %635, %648, %650 : f32
    %693 = vector.insertelement %692, %691[%c14 : index] : vector<32xf32>
    %694 = select %635, %649, %651 : f32
    %695 = vector.insertelement %694, %693[%c15 : index] : vector<32xf32>
    %696 = select %635, %650, %648 : f32
    %697 = vector.insertelement %696, %695[%c12 : index] : vector<32xf32>
    %698 = select %635, %651, %649 : f32
    %699 = vector.insertelement %698, %697[%c13 : index] : vector<32xf32>
    %700 = select %635, %652, %654 : f32
    %701 = vector.insertelement %700, %699[%c18 : index] : vector<32xf32>
    %702 = select %635, %653, %655 : f32
    %703 = vector.insertelement %702, %701[%c19 : index] : vector<32xf32>
    %704 = select %635, %654, %652 : f32
    %705 = vector.insertelement %704, %703[%c16 : index] : vector<32xf32>
    %706 = select %635, %655, %653 : f32
    %707 = vector.insertelement %706, %705[%c17 : index] : vector<32xf32>
    %708 = select %635, %656, %658 : f32
    %709 = vector.insertelement %708, %707[%c22 : index] : vector<32xf32>
    %710 = select %635, %657, %659 : f32
    %711 = vector.insertelement %710, %709[%c23 : index] : vector<32xf32>
    %712 = select %635, %658, %656 : f32
    %713 = vector.insertelement %712, %711[%c20 : index] : vector<32xf32>
    %714 = select %635, %659, %657 : f32
    %715 = vector.insertelement %714, %713[%c21 : index] : vector<32xf32>
    %716 = select %635, %660, %662 : f32
    %717 = vector.insertelement %716, %715[%c26 : index] : vector<32xf32>
    %718 = select %635, %661, %663 : f32
    %719 = vector.insertelement %718, %717[%c27 : index] : vector<32xf32>
    %720 = select %635, %662, %660 : f32
    %721 = vector.insertelement %720, %719[%c24 : index] : vector<32xf32>
    %722 = select %635, %663, %661 : f32
    %723 = vector.insertelement %722, %721[%c25 : index] : vector<32xf32>
    %724 = select %635, %664, %666 : f32
    %725 = vector.insertelement %724, %723[%c30 : index] : vector<32xf32>
    %726 = select %635, %665, %667 : f32
    %727 = vector.insertelement %726, %725[%c31 : index] : vector<32xf32>
    %728 = select %635, %666, %664 : f32
    %729 = vector.insertelement %728, %727[%c28 : index] : vector<32xf32>
    %730 = select %635, %667, %665 : f32
    %731 = vector.insertelement %730, %729[%c29 : index] : vector<32xf32>
    %732 = arith.andi %141, %c1 : index
    %733 = arith.cmpi ne, %732, %c0 : index
    %734 = vector.extractelement %731[%c0 : index] : vector<32xf32>
    %735 = vector.extractelement %731[%c1 : index] : vector<32xf32>
    %736 = vector.extractelement %731[%c2 : index] : vector<32xf32>
    %737 = vector.extractelement %731[%c3 : index] : vector<32xf32>
    %738 = vector.extractelement %731[%c4 : index] : vector<32xf32>
    %739 = vector.extractelement %731[%c5 : index] : vector<32xf32>
    %740 = vector.extractelement %731[%c6 : index] : vector<32xf32>
    %741 = vector.extractelement %731[%c7 : index] : vector<32xf32>
    %742 = vector.extractelement %731[%c8 : index] : vector<32xf32>
    %743 = vector.extractelement %731[%c9 : index] : vector<32xf32>
    %744 = vector.extractelement %731[%c10 : index] : vector<32xf32>
    %745 = vector.extractelement %731[%c11 : index] : vector<32xf32>
    %746 = vector.extractelement %731[%c12 : index] : vector<32xf32>
    %747 = vector.extractelement %731[%c13 : index] : vector<32xf32>
    %748 = vector.extractelement %731[%c14 : index] : vector<32xf32>
    %749 = vector.extractelement %731[%c15 : index] : vector<32xf32>
    %750 = vector.extractelement %731[%c16 : index] : vector<32xf32>
    %751 = vector.extractelement %731[%c17 : index] : vector<32xf32>
    %752 = vector.extractelement %731[%c18 : index] : vector<32xf32>
    %753 = vector.extractelement %731[%c19 : index] : vector<32xf32>
    %754 = vector.extractelement %731[%c20 : index] : vector<32xf32>
    %755 = vector.extractelement %731[%c21 : index] : vector<32xf32>
    %756 = vector.extractelement %731[%c22 : index] : vector<32xf32>
    %757 = vector.extractelement %731[%c23 : index] : vector<32xf32>
    %758 = vector.extractelement %731[%c24 : index] : vector<32xf32>
    %759 = vector.extractelement %731[%c25 : index] : vector<32xf32>
    %760 = vector.extractelement %731[%c26 : index] : vector<32xf32>
    %761 = vector.extractelement %731[%c27 : index] : vector<32xf32>
    %762 = vector.extractelement %731[%c28 : index] : vector<32xf32>
    %763 = vector.extractelement %731[%c29 : index] : vector<32xf32>
    %764 = vector.extractelement %731[%c30 : index] : vector<32xf32>
    %765 = vector.extractelement %731[%c31 : index] : vector<32xf32>
    %766 = select %733, %734, %735 : f32
    %767 = vector.insertelement %766, %731[%c1 : index] : vector<32xf32>
    %768 = select %733, %735, %736 : f32
    %769 = vector.insertelement %768, %767[%c2 : index] : vector<32xf32>
    %770 = select %733, %736, %737 : f32
    %771 = vector.insertelement %770, %769[%c3 : index] : vector<32xf32>
    %772 = select %733, %737, %734 : f32
    %773 = vector.insertelement %772, %771[%c0 : index] : vector<32xf32>
    %774 = select %733, %738, %739 : f32
    %775 = vector.insertelement %774, %773[%c5 : index] : vector<32xf32>
    %776 = select %733, %739, %740 : f32
    %777 = vector.insertelement %776, %775[%c6 : index] : vector<32xf32>
    %778 = select %733, %740, %741 : f32
    %779 = vector.insertelement %778, %777[%c7 : index] : vector<32xf32>
    %780 = select %733, %741, %738 : f32
    %781 = vector.insertelement %780, %779[%c4 : index] : vector<32xf32>
    %782 = select %733, %742, %743 : f32
    %783 = vector.insertelement %782, %781[%c9 : index] : vector<32xf32>
    %784 = select %733, %743, %744 : f32
    %785 = vector.insertelement %784, %783[%c10 : index] : vector<32xf32>
    %786 = select %733, %744, %745 : f32
    %787 = vector.insertelement %786, %785[%c11 : index] : vector<32xf32>
    %788 = select %733, %745, %742 : f32
    %789 = vector.insertelement %788, %787[%c8 : index] : vector<32xf32>
    %790 = select %733, %746, %747 : f32
    %791 = vector.insertelement %790, %789[%c13 : index] : vector<32xf32>
    %792 = select %733, %747, %748 : f32
    %793 = vector.insertelement %792, %791[%c14 : index] : vector<32xf32>
    %794 = select %733, %748, %749 : f32
    %795 = vector.insertelement %794, %793[%c15 : index] : vector<32xf32>
    %796 = select %733, %749, %746 : f32
    %797 = vector.insertelement %796, %795[%c12 : index] : vector<32xf32>
    %798 = select %733, %750, %751 : f32
    %799 = vector.insertelement %798, %797[%c17 : index] : vector<32xf32>
    %800 = select %733, %751, %752 : f32
    %801 = vector.insertelement %800, %799[%c18 : index] : vector<32xf32>
    %802 = select %733, %752, %753 : f32
    %803 = vector.insertelement %802, %801[%c19 : index] : vector<32xf32>
    %804 = select %733, %753, %750 : f32
    %805 = vector.insertelement %804, %803[%c16 : index] : vector<32xf32>
    %806 = select %733, %754, %755 : f32
    %807 = vector.insertelement %806, %805[%c21 : index] : vector<32xf32>
    %808 = select %733, %755, %756 : f32
    %809 = vector.insertelement %808, %807[%c22 : index] : vector<32xf32>
    %810 = select %733, %756, %757 : f32
    %811 = vector.insertelement %810, %809[%c23 : index] : vector<32xf32>
    %812 = select %733, %757, %754 : f32
    %813 = vector.insertelement %812, %811[%c20 : index] : vector<32xf32>
    %814 = select %733, %758, %759 : f32
    %815 = vector.insertelement %814, %813[%c25 : index] : vector<32xf32>
    %816 = select %733, %759, %760 : f32
    %817 = vector.insertelement %816, %815[%c26 : index] : vector<32xf32>
    %818 = select %733, %760, %761 : f32
    %819 = vector.insertelement %818, %817[%c27 : index] : vector<32xf32>
    %820 = select %733, %761, %758 : f32
    %821 = vector.insertelement %820, %819[%c24 : index] : vector<32xf32>
    %822 = select %733, %762, %763 : f32
    %823 = vector.insertelement %822, %821[%c29 : index] : vector<32xf32>
    %824 = select %733, %763, %764 : f32
    %825 = vector.insertelement %824, %823[%c30 : index] : vector<32xf32>
    %826 = select %733, %764, %765 : f32
    %827 = vector.insertelement %826, %825[%c31 : index] : vector<32xf32>
    %828 = select %733, %765, %762 : f32
    %829 = vector.insertelement %828, %827[%c28 : index] : vector<32xf32>
    %830 = vector.bitcast %829 : vector<32xf32> to vector<32xi32>
    %831 = vector.extractelement %830[%c0 : index] : vector<32xi32>
    %832 = vector.extractelement %830[%c1 : index] : vector<32xi32>
    %833 = vector.extractelement %830[%c2 : index] : vector<32xi32>
    %834 = vector.extractelement %830[%c3 : index] : vector<32xi32>
    %835 = vector.extractelement %830[%c4 : index] : vector<32xi32>
    %836 = vector.extractelement %830[%c5 : index] : vector<32xi32>
    %837 = vector.extractelement %830[%c6 : index] : vector<32xi32>
    %838 = vector.extractelement %830[%c7 : index] : vector<32xi32>
    %839 = vector.extractelement %830[%c8 : index] : vector<32xi32>
    %840 = vector.extractelement %830[%c9 : index] : vector<32xi32>
    %841 = vector.extractelement %830[%c10 : index] : vector<32xi32>
    %842 = vector.extractelement %830[%c11 : index] : vector<32xi32>
    %843 = vector.extractelement %830[%c12 : index] : vector<32xi32>
    %844 = vector.extractelement %830[%c13 : index] : vector<32xi32>
    %845 = vector.extractelement %830[%c14 : index] : vector<32xi32>
    %846 = vector.extractelement %830[%c15 : index] : vector<32xi32>
    %847 = vector.extractelement %830[%c16 : index] : vector<32xi32>
    %848 = vector.extractelement %830[%c17 : index] : vector<32xi32>
    %849 = vector.extractelement %830[%c18 : index] : vector<32xi32>
    %850 = vector.extractelement %830[%c19 : index] : vector<32xi32>
    %851 = vector.extractelement %830[%c20 : index] : vector<32xi32>
    %852 = vector.extractelement %830[%c21 : index] : vector<32xi32>
    %853 = vector.extractelement %830[%c22 : index] : vector<32xi32>
    %854 = vector.extractelement %830[%c23 : index] : vector<32xi32>
    %855 = vector.extractelement %830[%c24 : index] : vector<32xi32>
    %856 = vector.extractelement %830[%c25 : index] : vector<32xi32>
    %857 = vector.extractelement %830[%c26 : index] : vector<32xi32>
    %858 = vector.extractelement %830[%c27 : index] : vector<32xi32>
    %859 = vector.extractelement %830[%c28 : index] : vector<32xi32>
    %860 = vector.extractelement %830[%c29 : index] : vector<32xi32>
    %861 = vector.extractelement %830[%c30 : index] : vector<32xi32>
    %862 = vector.extractelement %830[%c31 : index] : vector<32xi32>
    %863 = gpu.warp_swizzle {selector = [0 : i32, 3 : i32, 2 : i32, 1 : i32]} %831 : i32
    %864 = gpu.warp_swizzle {selector = [1 : i32, 0 : i32, 3 : i32, 2 : i32]} %832 : i32
    %865 = gpu.warp_swizzle {selector = [2 : i32, 1 : i32, 0 : i32, 3 : i32]} %833 : i32
    %866 = gpu.warp_swizzle {selector = [3 : i32, 2 : i32, 1 : i32, 0 : i32]} %834 : i32
    %867 = gpu.warp_swizzle {selector = [0 : i32, 3 : i32, 2 : i32, 1 : i32]} %835 : i32
    %868 = gpu.warp_swizzle {selector = [1 : i32, 0 : i32, 3 : i32, 2 : i32]} %836 : i32
    %869 = gpu.warp_swizzle {selector = [2 : i32, 1 : i32, 0 : i32, 3 : i32]} %837 : i32
    %870 = gpu.warp_swizzle {selector = [3 : i32, 2 : i32, 1 : i32, 0 : i32]} %838 : i32
    %871 = gpu.warp_swizzle {selector = [0 : i32, 3 : i32, 2 : i32, 1 : i32]} %839 : i32
    %872 = gpu.warp_swizzle {selector = [1 : i32, 0 : i32, 3 : i32, 2 : i32]} %840 : i32
    %873 = gpu.warp_swizzle {selector = [2 : i32, 1 : i32, 0 : i32, 3 : i32]} %841 : i32
    %874 = gpu.warp_swizzle {selector = [3 : i32, 2 : i32, 1 : i32, 0 : i32]} %842 : i32
    %875 = gpu.warp_swizzle {selector = [0 : i32, 3 : i32, 2 : i32, 1 : i32]} %843 : i32
    %876 = gpu.warp_swizzle {selector = [1 : i32, 0 : i32, 3 : i32, 2 : i32]} %844 : i32
    %877 = gpu.warp_swizzle {selector = [2 : i32, 1 : i32, 0 : i32, 3 : i32]} %845 : i32
    %878 = gpu.warp_swizzle {selector = [3 : i32, 2 : i32, 1 : i32, 0 : i32]} %846 : i32
    %879 = gpu.warp_swizzle {selector = [0 : i32, 3 : i32, 2 : i32, 1 : i32]} %847 : i32
    %880 = gpu.warp_swizzle {selector = [1 : i32, 0 : i32, 3 : i32, 2 : i32]} %848 : i32
    %881 = gpu.warp_swizzle {selector = [2 : i32, 1 : i32, 0 : i32, 3 : i32]} %849 : i32
    %882 = gpu.warp_swizzle {selector = [3 : i32, 2 : i32, 1 : i32, 0 : i32]} %850 : i32
    %883 = gpu.warp_swizzle {selector = [0 : i32, 3 : i32, 2 : i32, 1 : i32]} %851 : i32
    %884 = gpu.warp_swizzle {selector = [1 : i32, 0 : i32, 3 : i32, 2 : i32]} %852 : i32
    %885 = gpu.warp_swizzle {selector = [2 : i32, 1 : i32, 0 : i32, 3 : i32]} %853 : i32
    %886 = gpu.warp_swizzle {selector = [3 : i32, 2 : i32, 1 : i32, 0 : i32]} %854 : i32
    %887 = gpu.warp_swizzle {selector = [0 : i32, 3 : i32, 2 : i32, 1 : i32]} %855 : i32
    %888 = gpu.warp_swizzle {selector = [1 : i32, 0 : i32, 3 : i32, 2 : i32]} %856 : i32
    %889 = gpu.warp_swizzle {selector = [2 : i32, 1 : i32, 0 : i32, 3 : i32]} %857 : i32
    %890 = gpu.warp_swizzle {selector = [3 : i32, 2 : i32, 1 : i32, 0 : i32]} %858 : i32
    %891 = gpu.warp_swizzle {selector = [0 : i32, 3 : i32, 2 : i32, 1 : i32]} %859 : i32
    %892 = gpu.warp_swizzle {selector = [1 : i32, 0 : i32, 3 : i32, 2 : i32]} %860 : i32
    %893 = gpu.warp_swizzle {selector = [2 : i32, 1 : i32, 0 : i32, 3 : i32]} %861 : i32
    %894 = gpu.warp_swizzle {selector = [3 : i32, 2 : i32, 1 : i32, 0 : i32]} %862 : i32
    %895 = vector.insertelement %863, %830[%c0 : index] : vector<32xi32>
    %896 = vector.insertelement %864, %895[%c1 : index] : vector<32xi32>
    %897 = vector.insertelement %865, %896[%c2 : index] : vector<32xi32>
    %898 = vector.insertelement %866, %897[%c3 : index] : vector<32xi32>
    %899 = vector.insertelement %867, %898[%c4 : index] : vector<32xi32>
    %900 = vector.insertelement %868, %899[%c5 : index] : vector<32xi32>
    %901 = vector.insertelement %869, %900[%c6 : index] : vector<32xi32>
    %902 = vector.insertelement %870, %901[%c7 : index] : vector<32xi32>
    %903 = vector.insertelement %871, %902[%c8 : index] : vector<32xi32>
    %904 = vector.insertelement %872, %903[%c9 : index] : vector<32xi32>
    %905 = vector.insertelement %873, %904[%c10 : index] : vector<32xi32>
    %906 = vector.insertelement %874, %905[%c11 : index] : vector<32xi32>
    %907 = vector.insertelement %875, %906[%c12 : index] : vector<32xi32>
    %908 = vector.insertelement %876, %907[%c13 : index] : vector<32xi32>
    %909 = vector.insertelement %877, %908[%c14 : index] : vector<32xi32>
    %910 = vector.insertelement %878, %909[%c15 : index] : vector<32xi32>
    %911 = vector.insertelement %879, %910[%c16 : index] : vector<32xi32>
    %912 = vector.insertelement %880, %911[%c17 : index] : vector<32xi32>
    %913 = vector.insertelement %881, %912[%c18 : index] : vector<32xi32>
    %914 = vector.insertelement %882, %913[%c19 : index] : vector<32xi32>
    %915 = vector.insertelement %883, %914[%c20 : index] : vector<32xi32>
    %916 = vector.insertelement %884, %915[%c21 : index] : vector<32xi32>
    %917 = vector.insertelement %885, %916[%c22 : index] : vector<32xi32>
    %918 = vector.insertelement %886, %917[%c23 : index] : vector<32xi32>
    %919 = vector.insertelement %887, %918[%c24 : index] : vector<32xi32>
    %920 = vector.insertelement %888, %919[%c25 : index] : vector<32xi32>
    %921 = vector.insertelement %889, %920[%c26 : index] : vector<32xi32>
    %922 = vector.insertelement %890, %921[%c27 : index] : vector<32xi32>
    %923 = vector.insertelement %891, %922[%c28 : index] : vector<32xi32>
    %924 = vector.insertelement %892, %923[%c29 : index] : vector<32xi32>
    %925 = vector.insertelement %893, %924[%c30 : index] : vector<32xi32>
    %926 = vector.insertelement %894, %925[%c31 : index] : vector<32xi32>
    %927 = vector.bitcast %926 : vector<32xi32> to vector<32xf32>
    %928 = arith.andi %141, %c1 : index
    %929 = arith.cmpi ne, %928, %c0 : index
    %930 = vector.extractelement %927[%c0 : index] : vector<32xf32>
    %931 = vector.extractelement %927[%c1 : index] : vector<32xf32>
    %932 = vector.extractelement %927[%c2 : index] : vector<32xf32>
    %933 = vector.extractelement %927[%c3 : index] : vector<32xf32>
    %934 = vector.extractelement %927[%c4 : index] : vector<32xf32>
    %935 = vector.extractelement %927[%c5 : index] : vector<32xf32>
    %936 = vector.extractelement %927[%c6 : index] : vector<32xf32>
    %937 = vector.extractelement %927[%c7 : index] : vector<32xf32>
    %938 = vector.extractelement %927[%c8 : index] : vector<32xf32>
    %939 = vector.extractelement %927[%c9 : index] : vector<32xf32>
    %940 = vector.extractelement %927[%c10 : index] : vector<32xf32>
    %941 = vector.extractelement %927[%c11 : index] : vector<32xf32>
    %942 = vector.extractelement %927[%c12 : index] : vector<32xf32>
    %943 = vector.extractelement %927[%c13 : index] : vector<32xf32>
    %944 = vector.extractelement %927[%c14 : index] : vector<32xf32>
    %945 = vector.extractelement %927[%c15 : index] : vector<32xf32>
    %946 = vector.extractelement %927[%c16 : index] : vector<32xf32>
    %947 = vector.extractelement %927[%c17 : index] : vector<32xf32>
    %948 = vector.extractelement %927[%c18 : index] : vector<32xf32>
    %949 = vector.extractelement %927[%c19 : index] : vector<32xf32>
    %950 = vector.extractelement %927[%c20 : index] : vector<32xf32>
    %951 = vector.extractelement %927[%c21 : index] : vector<32xf32>
    %952 = vector.extractelement %927[%c22 : index] : vector<32xf32>
    %953 = vector.extractelement %927[%c23 : index] : vector<32xf32>
    %954 = vector.extractelement %927[%c24 : index] : vector<32xf32>
    %955 = vector.extractelement %927[%c25 : index] : vector<32xf32>
    %956 = vector.extractelement %927[%c26 : index] : vector<32xf32>
    %957 = vector.extractelement %927[%c27 : index] : vector<32xf32>
    %958 = vector.extractelement %927[%c28 : index] : vector<32xf32>
    %959 = vector.extractelement %927[%c29 : index] : vector<32xf32>
    %960 = vector.extractelement %927[%c30 : index] : vector<32xf32>
    %961 = vector.extractelement %927[%c31 : index] : vector<32xf32>
    %962 = select %929, %930, %933 : f32
    %963 = vector.insertelement %962, %927[%c3 : index] : vector<32xf32>
    %964 = select %929, %931, %930 : f32
    %965 = vector.insertelement %964, %963[%c0 : index] : vector<32xf32>
    %966 = select %929, %932, %931 : f32
    %967 = vector.insertelement %966, %965[%c1 : index] : vector<32xf32>
    %968 = select %929, %933, %932 : f32
    %969 = vector.insertelement %968, %967[%c2 : index] : vector<32xf32>
    %970 = select %929, %934, %937 : f32
    %971 = vector.insertelement %970, %969[%c7 : index] : vector<32xf32>
    %972 = select %929, %935, %934 : f32
    %973 = vector.insertelement %972, %971[%c4 : index] : vector<32xf32>
    %974 = select %929, %936, %935 : f32
    %975 = vector.insertelement %974, %973[%c5 : index] : vector<32xf32>
    %976 = select %929, %937, %936 : f32
    %977 = vector.insertelement %976, %975[%c6 : index] : vector<32xf32>
    %978 = select %929, %938, %941 : f32
    %979 = vector.insertelement %978, %977[%c11 : index] : vector<32xf32>
    %980 = select %929, %939, %938 : f32
    %981 = vector.insertelement %980, %979[%c8 : index] : vector<32xf32>
    %982 = select %929, %940, %939 : f32
    %983 = vector.insertelement %982, %981[%c9 : index] : vector<32xf32>
    %984 = select %929, %941, %940 : f32
    %985 = vector.insertelement %984, %983[%c10 : index] : vector<32xf32>
    %986 = select %929, %942, %945 : f32
    %987 = vector.insertelement %986, %985[%c15 : index] : vector<32xf32>
    %988 = select %929, %943, %942 : f32
    %989 = vector.insertelement %988, %987[%c12 : index] : vector<32xf32>
    %990 = select %929, %944, %943 : f32
    %991 = vector.insertelement %990, %989[%c13 : index] : vector<32xf32>
    %992 = select %929, %945, %944 : f32
    %993 = vector.insertelement %992, %991[%c14 : index] : vector<32xf32>
    %994 = select %929, %946, %949 : f32
    %995 = vector.insertelement %994, %993[%c19 : index] : vector<32xf32>
    %996 = select %929, %947, %946 : f32
    %997 = vector.insertelement %996, %995[%c16 : index] : vector<32xf32>
    %998 = select %929, %948, %947 : f32
    %999 = vector.insertelement %998, %997[%c17 : index] : vector<32xf32>
    %1000 = select %929, %949, %948 : f32
    %1001 = vector.insertelement %1000, %999[%c18 : index] : vector<32xf32>
    %1002 = select %929, %950, %953 : f32
    %1003 = vector.insertelement %1002, %1001[%c23 : index] : vector<32xf32>
    %1004 = select %929, %951, %950 : f32
    %1005 = vector.insertelement %1004, %1003[%c20 : index] : vector<32xf32>
    %1006 = select %929, %952, %951 : f32
    %1007 = vector.insertelement %1006, %1005[%c21 : index] : vector<32xf32>
    %1008 = select %929, %953, %952 : f32
    %1009 = vector.insertelement %1008, %1007[%c22 : index] : vector<32xf32>
    %1010 = select %929, %954, %957 : f32
    %1011 = vector.insertelement %1010, %1009[%c27 : index] : vector<32xf32>
    %1012 = select %929, %955, %954 : f32
    %1013 = vector.insertelement %1012, %1011[%c24 : index] : vector<32xf32>
    %1014 = select %929, %956, %955 : f32
    %1015 = vector.insertelement %1014, %1013[%c25 : index] : vector<32xf32>
    %1016 = select %929, %957, %956 : f32
    %1017 = vector.insertelement %1016, %1015[%c26 : index] : vector<32xf32>
    %1018 = select %929, %958, %961 : f32
    %1019 = vector.insertelement %1018, %1017[%c31 : index] : vector<32xf32>
    %1020 = select %929, %959, %958 : f32
    %1021 = vector.insertelement %1020, %1019[%c28 : index] : vector<32xf32>
    %1022 = select %929, %960, %959 : f32
    %1023 = vector.insertelement %1022, %1021[%c29 : index] : vector<32xf32>
    %1024 = select %929, %961, %960 : f32
    %1025 = vector.insertelement %1024, %1023[%c30 : index] : vector<32xf32>
    %1026 = arith.andi %141, %c2 : index
    %1027 = arith.cmpi ne, %1026, %c0 : index
    %1028 = vector.extractelement %1025[%c0 : index] : vector<32xf32>
    %1029 = vector.extractelement %1025[%c1 : index] : vector<32xf32>
    %1030 = vector.extractelement %1025[%c2 : index] : vector<32xf32>
    %1031 = vector.extractelement %1025[%c3 : index] : vector<32xf32>
    %1032 = vector.extractelement %1025[%c4 : index] : vector<32xf32>
    %1033 = vector.extractelement %1025[%c5 : index] : vector<32xf32>
    %1034 = vector.extractelement %1025[%c6 : index] : vector<32xf32>
    %1035 = vector.extractelement %1025[%c7 : index] : vector<32xf32>
    %1036 = vector.extractelement %1025[%c8 : index] : vector<32xf32>
    %1037 = vector.extractelement %1025[%c9 : index] : vector<32xf32>
    %1038 = vector.extractelement %1025[%c10 : index] : vector<32xf32>
    %1039 = vector.extractelement %1025[%c11 : index] : vector<32xf32>
    %1040 = vector.extractelement %1025[%c12 : index] : vector<32xf32>
    %1041 = vector.extractelement %1025[%c13 : index] : vector<32xf32>
    %1042 = vector.extractelement %1025[%c14 : index] : vector<32xf32>
    %1043 = vector.extractelement %1025[%c15 : index] : vector<32xf32>
    %1044 = vector.extractelement %1025[%c16 : index] : vector<32xf32>
    %1045 = vector.extractelement %1025[%c17 : index] : vector<32xf32>
    %1046 = vector.extractelement %1025[%c18 : index] : vector<32xf32>
    %1047 = vector.extractelement %1025[%c19 : index] : vector<32xf32>
    %1048 = vector.extractelement %1025[%c20 : index] : vector<32xf32>
    %1049 = vector.extractelement %1025[%c21 : index] : vector<32xf32>
    %1050 = vector.extractelement %1025[%c22 : index] : vector<32xf32>
    %1051 = vector.extractelement %1025[%c23 : index] : vector<32xf32>
    %1052 = vector.extractelement %1025[%c24 : index] : vector<32xf32>
    %1053 = vector.extractelement %1025[%c25 : index] : vector<32xf32>
    %1054 = vector.extractelement %1025[%c26 : index] : vector<32xf32>
    %1055 = vector.extractelement %1025[%c27 : index] : vector<32xf32>
    %1056 = vector.extractelement %1025[%c28 : index] : vector<32xf32>
    %1057 = vector.extractelement %1025[%c29 : index] : vector<32xf32>
    %1058 = vector.extractelement %1025[%c30 : index] : vector<32xf32>
    %1059 = vector.extractelement %1025[%c31 : index] : vector<32xf32>
    %1060 = select %1027, %1028, %1030 : f32
    %1061 = vector.insertelement %1060, %1025[%c2 : index] : vector<32xf32>
    %1062 = select %1027, %1029, %1031 : f32
    %1063 = vector.insertelement %1062, %1061[%c3 : index] : vector<32xf32>
    %1064 = select %1027, %1030, %1028 : f32
    %1065 = vector.insertelement %1064, %1063[%c0 : index] : vector<32xf32>
    %1066 = select %1027, %1031, %1029 : f32
    %1067 = vector.insertelement %1066, %1065[%c1 : index] : vector<32xf32>
    %1068 = select %1027, %1032, %1034 : f32
    %1069 = vector.insertelement %1068, %1067[%c6 : index] : vector<32xf32>
    %1070 = select %1027, %1033, %1035 : f32
    %1071 = vector.insertelement %1070, %1069[%c7 : index] : vector<32xf32>
    %1072 = select %1027, %1034, %1032 : f32
    %1073 = vector.insertelement %1072, %1071[%c4 : index] : vector<32xf32>
    %1074 = select %1027, %1035, %1033 : f32
    %1075 = vector.insertelement %1074, %1073[%c5 : index] : vector<32xf32>
    %1076 = select %1027, %1036, %1038 : f32
    %1077 = vector.insertelement %1076, %1075[%c10 : index] : vector<32xf32>
    %1078 = select %1027, %1037, %1039 : f32
    %1079 = vector.insertelement %1078, %1077[%c11 : index] : vector<32xf32>
    %1080 = select %1027, %1038, %1036 : f32
    %1081 = vector.insertelement %1080, %1079[%c8 : index] : vector<32xf32>
    %1082 = select %1027, %1039, %1037 : f32
    %1083 = vector.insertelement %1082, %1081[%c9 : index] : vector<32xf32>
    %1084 = select %1027, %1040, %1042 : f32
    %1085 = vector.insertelement %1084, %1083[%c14 : index] : vector<32xf32>
    %1086 = select %1027, %1041, %1043 : f32
    %1087 = vector.insertelement %1086, %1085[%c15 : index] : vector<32xf32>
    %1088 = select %1027, %1042, %1040 : f32
    %1089 = vector.insertelement %1088, %1087[%c12 : index] : vector<32xf32>
    %1090 = select %1027, %1043, %1041 : f32
    %1091 = vector.insertelement %1090, %1089[%c13 : index] : vector<32xf32>
    %1092 = select %1027, %1044, %1046 : f32
    %1093 = vector.insertelement %1092, %1091[%c18 : index] : vector<32xf32>
    %1094 = select %1027, %1045, %1047 : f32
    %1095 = vector.insertelement %1094, %1093[%c19 : index] : vector<32xf32>
    %1096 = select %1027, %1046, %1044 : f32
    %1097 = vector.insertelement %1096, %1095[%c16 : index] : vector<32xf32>
    %1098 = select %1027, %1047, %1045 : f32
    %1099 = vector.insertelement %1098, %1097[%c17 : index] : vector<32xf32>
    %1100 = select %1027, %1048, %1050 : f32
    %1101 = vector.insertelement %1100, %1099[%c22 : index] : vector<32xf32>
    %1102 = select %1027, %1049, %1051 : f32
    %1103 = vector.insertelement %1102, %1101[%c23 : index] : vector<32xf32>
    %1104 = select %1027, %1050, %1048 : f32
    %1105 = vector.insertelement %1104, %1103[%c20 : index] : vector<32xf32>
    %1106 = select %1027, %1051, %1049 : f32
    %1107 = vector.insertelement %1106, %1105[%c21 : index] : vector<32xf32>
    %1108 = select %1027, %1052, %1054 : f32
    %1109 = vector.insertelement %1108, %1107[%c26 : index] : vector<32xf32>
    %1110 = select %1027, %1053, %1055 : f32
    %1111 = vector.insertelement %1110, %1109[%c27 : index] : vector<32xf32>
    %1112 = select %1027, %1054, %1052 : f32
    %1113 = vector.insertelement %1112, %1111[%c24 : index] : vector<32xf32>
    %1114 = select %1027, %1055, %1053 : f32
    %1115 = vector.insertelement %1114, %1113[%c25 : index] : vector<32xf32>
    %1116 = select %1027, %1056, %1058 : f32
    %1117 = vector.insertelement %1116, %1115[%c30 : index] : vector<32xf32>
    %1118 = select %1027, %1057, %1059 : f32
    %1119 = vector.insertelement %1118, %1117[%c31 : index] : vector<32xf32>
    %1120 = select %1027, %1058, %1056 : f32
    %1121 = vector.insertelement %1120, %1119[%c28 : index] : vector<32xf32>
    %1122 = select %1027, %1059, %1057 : f32
    %1123 = vector.insertelement %1122, %1121[%c29 : index] : vector<32xf32>
    %1124 = arith.divui %143, %c4 : index
    %1125 = arith.muli %1124, %c4 : index
    %1126 = arith.muli %142, %c4 : index
    %1127 = arith.remui %143, %c4 : index
    %1128 = arith.addi %1126, %1127 : index
    %1129 = arith.remui %130, %c2 : index
    %1130 = arith.muli %1129, %c64 : index
    %1131 = arith.addi %1130, %1125 : index
    %1132 = arith.divui %130, %c2 : index
    %1133 = arith.muli %1132, %c64 : index
    %1134 = arith.addi %1133, %1128 : index
    %1135 = arith.addi %6, %1134 : index
    %1136 = arith.addi %7, %1131 : index
    %1137 = arith.divui %1135, %c8 : index
    %1138 = arith.remui %1135, %c8 : index
    %1139 = arith.divui %1138, %c4 : index
    %1140 = arith.remui %1135, %c4 : index
    %1141 = arith.divui %1136, %c4 : index
    %1142 = arith.remui %1136, %c4 : index
    %1143 = arith.muli %1137, %c8 : index
    %1144 = arith.muli %1139, %c4 : index
    %1145 = arith.addi %1143, %1144 : index
    %1146 = arith.addi %1145, %1140 : index
    %1147 = arith.muli %1141, %c4 : index
    %1148 = arith.addi %1147, %1142 : index
    %1149 = arith.cmpi slt, %1148, %c0 : index
    %1150 = arith.subi %c-1, %1148 : index
    %1151 = select %1149, %1150, %1148 : index
    %1152 = arith.divsi %1151, %c196 : index
    %1153 = arith.subi %c-1, %1152 : index
    %1154 = select %1149, %1153, %1152 : index
    %1155 = arith.remsi %1148, %c196 : index
    %1156 = arith.cmpi slt, %1155, %c0 : index
    %1157 = arith.addi %1155, %c196 : index
    %1158 = select %1156, %1157, %1155 : index
    %1159 = arith.cmpi slt, %1158, %c0 : index
    %1160 = arith.subi %c-1, %1158 : index
    %1161 = select %1159, %1160, %1158 : index
    %1162 = arith.divsi %1161, %c14 : index
    %1163 = arith.subi %c-1, %1162 : index
    %1164 = select %1159, %1163, %1162 : index
    %1165 = arith.remsi %1148, %c14 : index
    %1166 = arith.cmpi slt, %1165, %c0 : index
    %1167 = arith.addi %1165, %c14 : index
    %1168 = select %1166, %1167, %1165 : index
    %1169 = vector.extractelement %633[%c0 : index] : vector<32xf32>
    %1170 = vector.insertelement %1169, %cst_0[%c0 : index] : vector<4xf32>
    %1171 = vector.extractelement %633[%c1 : index] : vector<32xf32>
    %1172 = vector.insertelement %1171, %1170[%c1 : index] : vector<4xf32>
    %1173 = vector.extractelement %633[%c2 : index] : vector<32xf32>
    %1174 = vector.insertelement %1173, %1172[%c2 : index] : vector<4xf32>
    %1175 = vector.extractelement %633[%c3 : index] : vector<32xf32>
    %1176 = vector.insertelement %1175, %1174[%c3 : index] : vector<4xf32>
    %1177 = arith.index_cast %1154 : index to i32
    %1178 = arith.index_cast %2 : index to i32
    %1179 = arith.index_cast %1146 : index to i32
    %1180 = arith.index_cast %1164 : index to i32
    %1181 = arith.index_cast %1168 : index to i32
    gpu.raw_buffer_store(%1176, %arg2, %c0_i32, %1177, %1178, %1179, %1180, %1181) : vector<4xf32>, memref<128x1x1024x14x14xf32>, i32, i32, i32, i32, i32, i32
    %1182 = vector.extractelement %633[%c4 : index] : vector<32xf32>
    %1183 = vector.insertelement %1182, %cst_0[%c0 : index] : vector<4xf32>
    %1184 = vector.extractelement %633[%c5 : index] : vector<32xf32>
    %1185 = vector.insertelement %1184, %1183[%c1 : index] : vector<4xf32>
    %1186 = vector.extractelement %633[%c6 : index] : vector<32xf32>
    %1187 = vector.insertelement %1186, %1185[%c2 : index] : vector<4xf32>
    %1188 = vector.extractelement %633[%c7 : index] : vector<32xf32>
    %1189 = vector.insertelement %1188, %1187[%c3 : index] : vector<4xf32>
    %1190 = arith.addi %1146, %c8 : index
    %1191 = arith.index_cast %1154 : index to i32
    %1192 = arith.index_cast %2 : index to i32
    %1193 = arith.index_cast %1190 : index to i32
    %1194 = arith.index_cast %1164 : index to i32
    %1195 = arith.index_cast %1168 : index to i32
    gpu.raw_buffer_store(%1189, %arg2, %c0_i32, %1191, %1192, %1193, %1194, %1195) : vector<4xf32>, memref<128x1x1024x14x14xf32>, i32, i32, i32, i32, i32, i32
    %1196 = vector.extractelement %633[%c8 : index] : vector<32xf32>
    %1197 = vector.insertelement %1196, %cst_0[%c0 : index] : vector<4xf32>
    %1198 = vector.extractelement %633[%c9 : index] : vector<32xf32>
    %1199 = vector.insertelement %1198, %1197[%c1 : index] : vector<4xf32>
    %1200 = vector.extractelement %633[%c10 : index] : vector<32xf32>
    %1201 = vector.insertelement %1200, %1199[%c2 : index] : vector<4xf32>
    %1202 = vector.extractelement %633[%c11 : index] : vector<32xf32>
    %1203 = vector.insertelement %1202, %1201[%c3 : index] : vector<4xf32>
    %1204 = arith.addi %1146, %c16 : index
    %1205 = arith.index_cast %1154 : index to i32
    %1206 = arith.index_cast %2 : index to i32
    %1207 = arith.index_cast %1204 : index to i32
    %1208 = arith.index_cast %1164 : index to i32
    %1209 = arith.index_cast %1168 : index to i32
    gpu.raw_buffer_store(%1203, %arg2, %c0_i32, %1205, %1206, %1207, %1208, %1209) : vector<4xf32>, memref<128x1x1024x14x14xf32>, i32, i32, i32, i32, i32, i32
    %1210 = vector.extractelement %633[%c12 : index] : vector<32xf32>
    %1211 = vector.insertelement %1210, %cst_0[%c0 : index] : vector<4xf32>
    %1212 = vector.extractelement %633[%c13 : index] : vector<32xf32>
    %1213 = vector.insertelement %1212, %1211[%c1 : index] : vector<4xf32>
    %1214 = vector.extractelement %633[%c14 : index] : vector<32xf32>
    %1215 = vector.insertelement %1214, %1213[%c2 : index] : vector<4xf32>
    %1216 = vector.extractelement %633[%c15 : index] : vector<32xf32>
    %1217 = vector.insertelement %1216, %1215[%c3 : index] : vector<4xf32>
    %1218 = arith.addi %1146, %c24 : index
    %1219 = arith.index_cast %1154 : index to i32
    %1220 = arith.index_cast %2 : index to i32
    %1221 = arith.index_cast %1218 : index to i32
    %1222 = arith.index_cast %1164 : index to i32
    %1223 = arith.index_cast %1168 : index to i32
    gpu.raw_buffer_store(%1217, %arg2, %c0_i32, %1219, %1220, %1221, %1222, %1223) : vector<4xf32>, memref<128x1x1024x14x14xf32>, i32, i32, i32, i32, i32, i32
    %1224 = arith.divui %143, %c4 : index
    %1225 = arith.muli %1224, %c4 : index
    %1226 = arith.addi %1225, %c32 : index
    %1227 = arith.muli %142, %c4 : index
    %1228 = arith.remui %143, %c4 : index
    %1229 = arith.addi %1227, %1228 : index
    %1230 = arith.remui %130, %c2 : index
    %1231 = arith.muli %1230, %c64 : index
    %1232 = arith.addi %1231, %1226 : index
    %1233 = arith.divui %130, %c2 : index
    %1234 = arith.muli %1233, %c64 : index
    %1235 = arith.addi %1234, %1229 : index
    %1236 = arith.addi %6, %1235 : index
    %1237 = arith.addi %7, %1232 : index
    %1238 = arith.divui %1236, %c8 : index
    %1239 = arith.remui %1236, %c8 : index
    %1240 = arith.divui %1239, %c4 : index
    %1241 = arith.remui %1236, %c4 : index
    %1242 = arith.divui %1237, %c4 : index
    %1243 = arith.remui %1237, %c4 : index
    %1244 = arith.muli %1238, %c8 : index
    %1245 = arith.muli %1240, %c4 : index
    %1246 = arith.addi %1244, %1245 : index
    %1247 = arith.addi %1246, %1241 : index
    %1248 = arith.muli %1242, %c4 : index
    %1249 = arith.addi %1248, %1243 : index
    %1250 = arith.cmpi slt, %1249, %c0 : index
    %1251 = arith.subi %c-1, %1249 : index
    %1252 = select %1250, %1251, %1249 : index
    %1253 = arith.divsi %1252, %c196 : index
    %1254 = arith.subi %c-1, %1253 : index
    %1255 = select %1250, %1254, %1253 : index
    %1256 = arith.remsi %1249, %c196 : index
    %1257 = arith.cmpi slt, %1256, %c0 : index
    %1258 = arith.addi %1256, %c196 : index
    %1259 = select %1257, %1258, %1256 : index
    %1260 = arith.cmpi slt, %1259, %c0 : index
    %1261 = arith.subi %c-1, %1259 : index
    %1262 = select %1260, %1261, %1259 : index
    %1263 = arith.divsi %1262, %c14 : index
    %1264 = arith.subi %c-1, %1263 : index
    %1265 = select %1260, %1264, %1263 : index
    %1266 = arith.remsi %1249, %c14 : index
    %1267 = arith.cmpi slt, %1266, %c0 : index
    %1268 = arith.addi %1266, %c14 : index
    %1269 = select %1267, %1268, %1266 : index
    %1270 = vector.extractelement %633[%c16 : index] : vector<32xf32>
    %1271 = vector.insertelement %1270, %cst_0[%c0 : index] : vector<4xf32>
    %1272 = vector.extractelement %633[%c17 : index] : vector<32xf32>
    %1273 = vector.insertelement %1272, %1271[%c1 : index] : vector<4xf32>
    %1274 = vector.extractelement %633[%c18 : index] : vector<32xf32>
    %1275 = vector.insertelement %1274, %1273[%c2 : index] : vector<4xf32>
    %1276 = vector.extractelement %633[%c19 : index] : vector<32xf32>
    %1277 = vector.insertelement %1276, %1275[%c3 : index] : vector<4xf32>
    %1278 = arith.index_cast %1255 : index to i32
    %1279 = arith.index_cast %2 : index to i32
    %1280 = arith.index_cast %1247 : index to i32
    %1281 = arith.index_cast %1265 : index to i32
    %1282 = arith.index_cast %1269 : index to i32
    gpu.raw_buffer_store(%1277, %arg2, %c0_i32, %1278, %1279, %1280, %1281, %1282) : vector<4xf32>, memref<128x1x1024x14x14xf32>, i32, i32, i32, i32, i32, i32
    %1283 = vector.extractelement %633[%c20 : index] : vector<32xf32>
    %1284 = vector.insertelement %1283, %cst_0[%c0 : index] : vector<4xf32>
    %1285 = vector.extractelement %633[%c21 : index] : vector<32xf32>
    %1286 = vector.insertelement %1285, %1284[%c1 : index] : vector<4xf32>
    %1287 = vector.extractelement %633[%c22 : index] : vector<32xf32>
    %1288 = vector.insertelement %1287, %1286[%c2 : index] : vector<4xf32>
    %1289 = vector.extractelement %633[%c23 : index] : vector<32xf32>
    %1290 = vector.insertelement %1289, %1288[%c3 : index] : vector<4xf32>
    %1291 = arith.addi %1247, %c8 : index
    %1292 = arith.index_cast %1255 : index to i32
    %1293 = arith.index_cast %2 : index to i32
    %1294 = arith.index_cast %1291 : index to i32
    %1295 = arith.index_cast %1265 : index to i32
    %1296 = arith.index_cast %1269 : index to i32
    gpu.raw_buffer_store(%1290, %arg2, %c0_i32, %1292, %1293, %1294, %1295, %1296) : vector<4xf32>, memref<128x1x1024x14x14xf32>, i32, i32, i32, i32, i32, i32
    %1297 = vector.extractelement %633[%c24 : index] : vector<32xf32>
    %1298 = vector.insertelement %1297, %cst_0[%c0 : index] : vector<4xf32>
    %1299 = vector.extractelement %633[%c25 : index] : vector<32xf32>
    %1300 = vector.insertelement %1299, %1298[%c1 : index] : vector<4xf32>
    %1301 = vector.extractelement %633[%c26 : index] : vector<32xf32>
    %1302 = vector.insertelement %1301, %1300[%c2 : index] : vector<4xf32>
    %1303 = vector.extractelement %633[%c27 : index] : vector<32xf32>
    %1304 = vector.insertelement %1303, %1302[%c3 : index] : vector<4xf32>
    %1305 = arith.addi %1247, %c16 : index
    %1306 = arith.index_cast %1255 : index to i32
    %1307 = arith.index_cast %2 : index to i32
    %1308 = arith.index_cast %1305 : index to i32
    %1309 = arith.index_cast %1265 : index to i32
    %1310 = arith.index_cast %1269 : index to i32
    gpu.raw_buffer_store(%1304, %arg2, %c0_i32, %1306, %1307, %1308, %1309, %1310) : vector<4xf32>, memref<128x1x1024x14x14xf32>, i32, i32, i32, i32, i32, i32
    %1311 = vector.extractelement %633[%c28 : index] : vector<32xf32>
    %1312 = vector.insertelement %1311, %cst_0[%c0 : index] : vector<4xf32>
    %1313 = vector.extractelement %633[%c29 : index] : vector<32xf32>
    %1314 = vector.insertelement %1313, %1312[%c1 : index] : vector<4xf32>
    %1315 = vector.extractelement %633[%c30 : index] : vector<32xf32>
    %1316 = vector.insertelement %1315, %1314[%c2 : index] : vector<4xf32>
    %1317 = vector.extractelement %633[%c31 : index] : vector<32xf32>
    %1318 = vector.insertelement %1317, %1316[%c3 : index] : vector<4xf32>
    %1319 = arith.addi %1247, %c24 : index
    %1320 = arith.index_cast %1255 : index to i32
    %1321 = arith.index_cast %2 : index to i32
    %1322 = arith.index_cast %1319 : index to i32
    %1323 = arith.index_cast %1265 : index to i32
    %1324 = arith.index_cast %1269 : index to i32
    gpu.raw_buffer_store(%1318, %arg2, %c0_i32, %1320, %1321, %1322, %1323, %1324) : vector<4xf32>, memref<128x1x1024x14x14xf32>, i32, i32, i32, i32, i32, i32
    %1325 = arith.divui %143, %c4 : index
    %1326 = arith.muli %1325, %c4 : index
    %1327 = arith.muli %142, %c4 : index
    %1328 = arith.remui %143, %c4 : index
    %1329 = arith.addi %1327, %1328 : index
    %1330 = arith.addi %1329, %c32 : index
    %1331 = arith.remui %130, %c2 : index
    %1332 = arith.muli %1331, %c64 : index
    %1333 = arith.addi %1332, %1326 : index
    %1334 = arith.divui %130, %c2 : index
    %1335 = arith.muli %1334, %c64 : index
    %1336 = arith.addi %1335, %1330 : index
    %1337 = arith.addi %6, %1336 : index
    %1338 = arith.addi %7, %1333 : index
    %1339 = arith.divui %1337, %c8 : index
    %1340 = arith.remui %1337, %c8 : index
    %1341 = arith.divui %1340, %c4 : index
    %1342 = arith.remui %1337, %c4 : index
    %1343 = arith.divui %1338, %c4 : index
    %1344 = arith.remui %1338, %c4 : index
    %1345 = arith.muli %1339, %c8 : index
    %1346 = arith.muli %1341, %c4 : index
    %1347 = arith.addi %1345, %1346 : index
    %1348 = arith.addi %1347, %1342 : index
    %1349 = arith.muli %1343, %c4 : index
    %1350 = arith.addi %1349, %1344 : index
    %1351 = arith.cmpi slt, %1350, %c0 : index
    %1352 = arith.subi %c-1, %1350 : index
    %1353 = select %1351, %1352, %1350 : index
    %1354 = arith.divsi %1353, %c196 : index
    %1355 = arith.subi %c-1, %1354 : index
    %1356 = select %1351, %1355, %1354 : index
    %1357 = arith.remsi %1350, %c196 : index
    %1358 = arith.cmpi slt, %1357, %c0 : index
    %1359 = arith.addi %1357, %c196 : index
    %1360 = select %1358, %1359, %1357 : index
    %1361 = arith.cmpi slt, %1360, %c0 : index
    %1362 = arith.subi %c-1, %1360 : index
    %1363 = select %1361, %1362, %1360 : index
    %1364 = arith.divsi %1363, %c14 : index
    %1365 = arith.subi %c-1, %1364 : index
    %1366 = select %1361, %1365, %1364 : index
    %1367 = arith.remsi %1350, %c14 : index
    %1368 = arith.cmpi slt, %1367, %c0 : index
    %1369 = arith.addi %1367, %c14 : index
    %1370 = select %1368, %1369, %1367 : index
    %1371 = vector.extractelement %1123[%c0 : index] : vector<32xf32>
    %1372 = vector.insertelement %1371, %cst_0[%c0 : index] : vector<4xf32>
    %1373 = vector.extractelement %1123[%c1 : index] : vector<32xf32>
    %1374 = vector.insertelement %1373, %1372[%c1 : index] : vector<4xf32>
    %1375 = vector.extractelement %1123[%c2 : index] : vector<32xf32>
    %1376 = vector.insertelement %1375, %1374[%c2 : index] : vector<4xf32>
    %1377 = vector.extractelement %1123[%c3 : index] : vector<32xf32>
    %1378 = vector.insertelement %1377, %1376[%c3 : index] : vector<4xf32>
    %1379 = arith.index_cast %1356 : index to i32
    %1380 = arith.index_cast %2 : index to i32
    %1381 = arith.index_cast %1348 : index to i32
    %1382 = arith.index_cast %1366 : index to i32
    %1383 = arith.index_cast %1370 : index to i32
    gpu.raw_buffer_store(%1378, %arg2, %c0_i32, %1379, %1380, %1381, %1382, %1383) : vector<4xf32>, memref<128x1x1024x14x14xf32>, i32, i32, i32, i32, i32, i32
    %1384 = vector.extractelement %1123[%c4 : index] : vector<32xf32>
    %1385 = vector.insertelement %1384, %cst_0[%c0 : index] : vector<4xf32>
    %1386 = vector.extractelement %1123[%c5 : index] : vector<32xf32>
    %1387 = vector.insertelement %1386, %1385[%c1 : index] : vector<4xf32>
    %1388 = vector.extractelement %1123[%c6 : index] : vector<32xf32>
    %1389 = vector.insertelement %1388, %1387[%c2 : index] : vector<4xf32>
    %1390 = vector.extractelement %1123[%c7 : index] : vector<32xf32>
    %1391 = vector.insertelement %1390, %1389[%c3 : index] : vector<4xf32>
    %1392 = arith.addi %1348, %c8 : index
    %1393 = arith.index_cast %1356 : index to i32
    %1394 = arith.index_cast %2 : index to i32
    %1395 = arith.index_cast %1392 : index to i32
    %1396 = arith.index_cast %1366 : index to i32
    %1397 = arith.index_cast %1370 : index to i32
    gpu.raw_buffer_store(%1391, %arg2, %c0_i32, %1393, %1394, %1395, %1396, %1397) : vector<4xf32>, memref<128x1x1024x14x14xf32>, i32, i32, i32, i32, i32, i32
    %1398 = vector.extractelement %1123[%c8 : index] : vector<32xf32>
    %1399 = vector.insertelement %1398, %cst_0[%c0 : index] : vector<4xf32>
    %1400 = vector.extractelement %1123[%c9 : index] : vector<32xf32>
    %1401 = vector.insertelement %1400, %1399[%c1 : index] : vector<4xf32>
    %1402 = vector.extractelement %1123[%c10 : index] : vector<32xf32>
    %1403 = vector.insertelement %1402, %1401[%c2 : index] : vector<4xf32>
    %1404 = vector.extractelement %1123[%c11 : index] : vector<32xf32>
    %1405 = vector.insertelement %1404, %1403[%c3 : index] : vector<4xf32>
    %1406 = arith.addi %1348, %c16 : index
    %1407 = arith.index_cast %1356 : index to i32
    %1408 = arith.index_cast %2 : index to i32
    %1409 = arith.index_cast %1406 : index to i32
    %1410 = arith.index_cast %1366 : index to i32
    %1411 = arith.index_cast %1370 : index to i32
    gpu.raw_buffer_store(%1405, %arg2, %c0_i32, %1407, %1408, %1409, %1410, %1411) : vector<4xf32>, memref<128x1x1024x14x14xf32>, i32, i32, i32, i32, i32, i32
    %1412 = vector.extractelement %1123[%c12 : index] : vector<32xf32>
    %1413 = vector.insertelement %1412, %cst_0[%c0 : index] : vector<4xf32>
    %1414 = vector.extractelement %1123[%c13 : index] : vector<32xf32>
    %1415 = vector.insertelement %1414, %1413[%c1 : index] : vector<4xf32>
    %1416 = vector.extractelement %1123[%c14 : index] : vector<32xf32>
    %1417 = vector.insertelement %1416, %1415[%c2 : index] : vector<4xf32>
    %1418 = vector.extractelement %1123[%c15 : index] : vector<32xf32>
    %1419 = vector.insertelement %1418, %1417[%c3 : index] : vector<4xf32>
    %1420 = arith.addi %1348, %c24 : index
    %1421 = arith.index_cast %1356 : index to i32
    %1422 = arith.index_cast %2 : index to i32
    %1423 = arith.index_cast %1420 : index to i32
    %1424 = arith.index_cast %1366 : index to i32
    %1425 = arith.index_cast %1370 : index to i32
    gpu.raw_buffer_store(%1419, %arg2, %c0_i32, %1421, %1422, %1423, %1424, %1425) : vector<4xf32>, memref<128x1x1024x14x14xf32>, i32, i32, i32, i32, i32, i32
    %1426 = arith.divui %143, %c4 : index
    %1427 = arith.muli %1426, %c4 : index
    %1428 = arith.addi %1427, %c32 : index
    %1429 = arith.muli %142, %c4 : index
    %1430 = arith.remui %143, %c4 : index
    %1431 = arith.addi %1429, %1430 : index
    %1432 = arith.addi %1431, %c32 : index
    %1433 = arith.remui %130, %c2 : index
    %1434 = arith.muli %1433, %c64 : index
    %1435 = arith.addi %1434, %1428 : index
    %1436 = arith.divui %130, %c2 : index
    %1437 = arith.muli %1436, %c64 : index
    %1438 = arith.addi %1437, %1432 : index
    %1439 = arith.addi %6, %1438 : index
    %1440 = arith.addi %7, %1435 : index
    %1441 = arith.divui %1439, %c8 : index
    %1442 = arith.remui %1439, %c8 : index
    %1443 = arith.divui %1442, %c4 : index
    %1444 = arith.remui %1439, %c4 : index
    %1445 = arith.divui %1440, %c4 : index
    %1446 = arith.remui %1440, %c4 : index
    %1447 = arith.muli %1441, %c8 : index
    %1448 = arith.muli %1443, %c4 : index
    %1449 = arith.addi %1447, %1448 : index
    %1450 = arith.addi %1449, %1444 : index
    %1451 = arith.muli %1445, %c4 : index
    %1452 = arith.addi %1451, %1446 : index
    %1453 = arith.cmpi slt, %1452, %c0 : index
    %1454 = arith.subi %c-1, %1452 : index
    %1455 = select %1453, %1454, %1452 : index
    %1456 = arith.divsi %1455, %c196 : index
    %1457 = arith.subi %c-1, %1456 : index
    %1458 = select %1453, %1457, %1456 : index
    %1459 = arith.remsi %1452, %c196 : index
    %1460 = arith.cmpi slt, %1459, %c0 : index
    %1461 = arith.addi %1459, %c196 : index
    %1462 = select %1460, %1461, %1459 : index
    %1463 = arith.cmpi slt, %1462, %c0 : index
    %1464 = arith.subi %c-1, %1462 : index
    %1465 = select %1463, %1464, %1462 : index
    %1466 = arith.divsi %1465, %c14 : index
    %1467 = arith.subi %c-1, %1466 : index
    %1468 = select %1463, %1467, %1466 : index
    %1469 = arith.remsi %1452, %c14 : index
    %1470 = arith.cmpi slt, %1469, %c0 : index
    %1471 = arith.addi %1469, %c14 : index
    %1472 = select %1470, %1471, %1469 : index
    %1473 = vector.extractelement %1123[%c16 : index] : vector<32xf32>
    %1474 = vector.insertelement %1473, %cst_0[%c0 : index] : vector<4xf32>
    %1475 = vector.extractelement %1123[%c17 : index] : vector<32xf32>
    %1476 = vector.insertelement %1475, %1474[%c1 : index] : vector<4xf32>
    %1477 = vector.extractelement %1123[%c18 : index] : vector<32xf32>
    %1478 = vector.insertelement %1477, %1476[%c2 : index] : vector<4xf32>
    %1479 = vector.extractelement %1123[%c19 : index] : vector<32xf32>
    %1480 = vector.insertelement %1479, %1478[%c3 : index] : vector<4xf32>
    %1481 = arith.index_cast %1458 : index to i32
    %1482 = arith.index_cast %2 : index to i32
    %1483 = arith.index_cast %1450 : index to i32
    %1484 = arith.index_cast %1468 : index to i32
    %1485 = arith.index_cast %1472 : index to i32
    gpu.raw_buffer_store(%1480, %arg2, %c0_i32, %1481, %1482, %1483, %1484, %1485) : vector<4xf32>, memref<128x1x1024x14x14xf32>, i32, i32, i32, i32, i32, i32
    %1486 = vector.extractelement %1123[%c20 : index] : vector<32xf32>
    %1487 = vector.insertelement %1486, %cst_0[%c0 : index] : vector<4xf32>
    %1488 = vector.extractelement %1123[%c21 : index] : vector<32xf32>
    %1489 = vector.insertelement %1488, %1487[%c1 : index] : vector<4xf32>
    %1490 = vector.extractelement %1123[%c22 : index] : vector<32xf32>
    %1491 = vector.insertelement %1490, %1489[%c2 : index] : vector<4xf32>
    %1492 = vector.extractelement %1123[%c23 : index] : vector<32xf32>
    %1493 = vector.insertelement %1492, %1491[%c3 : index] : vector<4xf32>
    %1494 = arith.addi %1450, %c8 : index
    %1495 = arith.index_cast %1458 : index to i32
    %1496 = arith.index_cast %2 : index to i32
    %1497 = arith.index_cast %1494 : index to i32
    %1498 = arith.index_cast %1468 : index to i32
    %1499 = arith.index_cast %1472 : index to i32
    gpu.raw_buffer_store(%1493, %arg2, %c0_i32, %1495, %1496, %1497, %1498, %1499) : vector<4xf32>, memref<128x1x1024x14x14xf32>, i32, i32, i32, i32, i32, i32
    %1500 = vector.extractelement %1123[%c24 : index] : vector<32xf32>
    %1501 = vector.insertelement %1500, %cst_0[%c0 : index] : vector<4xf32>
    %1502 = vector.extractelement %1123[%c25 : index] : vector<32xf32>
    %1503 = vector.insertelement %1502, %1501[%c1 : index] : vector<4xf32>
    %1504 = vector.extractelement %1123[%c26 : index] : vector<32xf32>
    %1505 = vector.insertelement %1504, %1503[%c2 : index] : vector<4xf32>
    %1506 = vector.extractelement %1123[%c27 : index] : vector<32xf32>
    %1507 = vector.insertelement %1506, %1505[%c3 : index] : vector<4xf32>
    %1508 = arith.addi %1450, %c16 : index
    %1509 = arith.index_cast %1458 : index to i32
    %1510 = arith.index_cast %2 : index to i32
    %1511 = arith.index_cast %1508 : index to i32
    %1512 = arith.index_cast %1468 : index to i32
    %1513 = arith.index_cast %1472 : index to i32
    gpu.raw_buffer_store(%1507, %arg2, %c0_i32, %1509, %1510, %1511, %1512, %1513) : vector<4xf32>, memref<128x1x1024x14x14xf32>, i32, i32, i32, i32, i32, i32
    %1514 = vector.extractelement %1123[%c28 : index] : vector<32xf32>
    %1515 = vector.insertelement %1514, %cst_0[%c0 : index] : vector<4xf32>
    %1516 = vector.extractelement %1123[%c29 : index] : vector<32xf32>
    %1517 = vector.insertelement %1516, %1515[%c1 : index] : vector<4xf32>
    %1518 = vector.extractelement %1123[%c30 : index] : vector<32xf32>
    %1519 = vector.insertelement %1518, %1517[%c2 : index] : vector<4xf32>
    %1520 = vector.extractelement %1123[%c31 : index] : vector<32xf32>
    %1521 = vector.insertelement %1520, %1519[%c3 : index] : vector<4xf32>
    %1522 = arith.addi %1450, %c24 : index
    %1523 = arith.index_cast %1458 : index to i32
    %1524 = arith.index_cast %2 : index to i32
    %1525 = arith.index_cast %1522 : index to i32
    %1526 = arith.index_cast %1468 : index to i32
    %1527 = arith.index_cast %1472 : index to i32
    gpu.raw_buffer_store(%1521, %arg2, %c0_i32, %1523, %1524, %1525, %1526, %1527) : vector<4xf32>, memref<128x1x1024x14x14xf32>, i32, i32, i32, i32, i32, i32
    return
  }
}

