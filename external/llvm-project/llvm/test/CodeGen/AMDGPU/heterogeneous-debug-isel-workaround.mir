# RUN: llc -mtriple=amdgcn-amd-amdhsa -mcpu=gfx906 -run-pass=machine-scheduler -o - %s
# Test that heterogeneous debug instrs don't crash the scheduler
--- |
  ; ModuleID = 'reduced.ll'
  source_filename = "reduced.ll"
  target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
  target triple = "amdgcn-amd-amdhsa"

  define void @__assert_fail() {
  entry:
    %tmp.ascast = addrspacecast ptr addrspace(5) null to ptr
    call void @llvm.dbg.def(metadata !4, metadata ptr addrspace(5) null), !dbg !11
    store i32 0, ptr null, align 4
    ret void
  }

  declare void @llvm.dbg.def(metadata, metadata)
  !llvm.dbg.cu = !{!0}
  !llvm.module.flags = !{!3}

  !0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1, producer: "AMD clang version 17.0.0 (ssh://gerritgit/lightning/ec/llvm-project amd-mainline-open 23262 33db8b560f4f2bc27c70bb85143e79f7f431be87)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2, imports: !2, splitDebugInlining: false, nameTableKind: None)
  !1 = !DIFile(filename: "atomicinc1.cc", directory: "/home/matt/bugs/SWDEV-407456", checksumkind: CSK_MD5, checksum: "82814da46a929c1b92682e63ec2834f9")
  !2 = !{}
  !3 = !{i32 2, !"Debug Info Version", i32 4}
  !4 = distinct !DILifetime(object: !5, location: !DIExpr(DIOpReferrer(ptr addrspace(5)), DIOpDeref(i32)))
  !5 = !DILocalVariable(name: "len", scope: !6, file: !7, line: 847, type: !10)
  !6 = distinct !DISubprogram(name: "__assert_fail", scope: !7, file: !7, line: 822, type: !8, scopeLine: 826, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
  !7 = !DIFile(filename: "/opt/rocm-5.7.0-12430/include/hip/amd_detail/amd_device_functions.h", directory: "")
  !8 = distinct !DISubroutineType(types: !9)
  !9 = !{null}
  !10 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
  !11 = !DILocation(line: 847, column: 7, scope: !6)

...
---
name:            __assert_fail
tracksRegLiveness: true
body:             |
  bb.0:
    DBG_DEF !4, %0, debug-location !11
    %0:vgpr_32 = V_MOV_B32_e32 0, implicit $exec
    %2:vreg_64 = V_MOV_B64_PSEUDO 0, implicit $exec
    FLAT_STORE_DWORD %2, %0, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into `ptr null`)
    SI_RETURN

...
