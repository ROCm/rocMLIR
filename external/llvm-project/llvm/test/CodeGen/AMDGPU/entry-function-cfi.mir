# RUN: llc -mtriple=amdgcn-amd-amdhsa -mcpu=gfx900 -run-pass=prologepilog -o - -emit-heterogeneous-dwarf-as-user-ops=false %s | FileCheck --check-prefixes=CHECK,CHECK-ORIG-OPS %s
# RUN: llc -mtriple=amdgcn-amd-amdhsa -mcpu=gfx900 -run-pass=prologepilog -o - %s | FileCheck --check-prefixes=CHECK,CHECK-USER-OPS %s

--- |

  define protected amdgpu_kernel void @kern1() {
  entry:
    ret void
  }
...
---
name:            kern1
alignment:       1
tracksRegLiveness: true
frameInfo:
  maxAlignment:    1
machineFunctionInfo:
  maxKernArgAlign: 1
  isEntryFunction: true
  scratchRSrcReg:  '$sgpr100_sgpr101_sgpr102_sgpr103'
  stackPtrOffsetReg: '$sgpr32'
  argumentInfo:
    workGroupIDX:    { reg: '$sgpr0' }
    privateSegmentWaveByteOffset: { reg: '$sgpr1' }
    workItemIDX:     { reg: '$vgpr0' }
body:             |
  bb.0:
    ; CHECK-ORIG-OPS: frame-setup CFI_INSTRUCTION escape 0x0f, 0x03, 0x30, 0x36, 0xe1
    ; CHECK-USER-OPS: frame-setup CFI_INSTRUCTION escape 0x0f, 0x04, 0x30, 0x36, 0xe9, 0x02
    ; CHECK: frame-setup CFI_INSTRUCTION undefined $pc_reg
    S_ENDPGM 0

...
