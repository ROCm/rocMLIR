# NOTE: This file was generated by llvm/utils/gen-heterogeneous-debug-test.sh
# NOTE: Do not edit this file manually. Instead run:
# NOTE: llvm/utils/gen-heterogeneous-debug-test.sh > llvm/test/CodeGen/X86/heterogeneous-debug.test

# RUN: split-file %s %t

;--- ir
; RUN: llc -O0 --filetype=obj < %t/ir | llvm-dwarfdump --diff --debug-info -name Var* -regex - | FileCheck %t/ir
source_filename = "-"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -1)
; CHECK-NEXT: DW_AT_name ("Var0")
define dso_local void @Fun0() #0 !dbg !5 {
entry:
  %Var0 = alloca i1
  ; DIExpression()
  call void @llvm.dbg.declare(metadata ptr %Var0, metadata !9, metadata !DIExpression()), !dbg !11
  call void @Esc(ptr %Var0), !dbg !11
  ret void, !dbg !11
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -1, DW_OP_deref)
; CHECK-NEXT: DW_AT_name ("Var1")
define dso_local void @Fun1() #0 !dbg !12 {
entry:
  %Var1 = alloca i1
  ; DIExpression(DW_OP_deref)
  call void @llvm.dbg.declare(metadata ptr %Var1, metadata !16, metadata !DIExpression(DW_OP_deref)), !dbg !18
  call void @Esc(ptr %Var1), !dbg !18
  ret void, !dbg !18
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -1)
; CHECK-NEXT: DW_AT_name ("Var2")
define dso_local void @Fun2() #0 !dbg !19 {
entry:
  %Var2 = alloca i4
  ; DIExpression()
  call void @llvm.dbg.declare(metadata ptr %Var2, metadata !23, metadata !DIExpression()), !dbg !25
  call void @Esc(ptr %Var2), !dbg !25
  ret void, !dbg !25
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -1, DW_OP_deref)
; CHECK-NEXT: DW_AT_name ("Var3")
define dso_local void @Fun3() #0 !dbg !26 {
entry:
  %Var3 = alloca i4
  ; DIExpression(DW_OP_deref)
  call void @llvm.dbg.declare(metadata ptr %Var3, metadata !30, metadata !DIExpression(DW_OP_deref)), !dbg !32
  call void @Esc(ptr %Var3), !dbg !32
  ret void, !dbg !32
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -1)
; CHECK-NEXT: DW_AT_name ("Var4")
define dso_local void @Fun4() #0 !dbg !33 {
entry:
  %Var4 = alloca i8
  ; DIExpression()
  call void @llvm.dbg.declare(metadata ptr %Var4, metadata !37, metadata !DIExpression()), !dbg !39
  call void @Esc(ptr %Var4), !dbg !39
  ret void, !dbg !39
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -1, DW_OP_deref)
; CHECK-NEXT: DW_AT_name ("Var5")
define dso_local void @Fun5() #0 !dbg !40 {
entry:
  %Var5 = alloca i8
  ; DIExpression(DW_OP_deref)
  call void @llvm.dbg.declare(metadata ptr %Var5, metadata !44, metadata !DIExpression(DW_OP_deref)), !dbg !46
  call void @Esc(ptr %Var5), !dbg !46
  ret void, !dbg !46
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -2)
; CHECK-NEXT: DW_AT_name ("Var6")
define dso_local void @Fun6() #0 !dbg !47 {
entry:
  %Var6 = alloca i16
  ; DIExpression()
  call void @llvm.dbg.declare(metadata ptr %Var6, metadata !51, metadata !DIExpression()), !dbg !53
  call void @Esc(ptr %Var6), !dbg !53
  ret void, !dbg !53
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -2, DW_OP_deref)
; CHECK-NEXT: DW_AT_name ("Var7")
define dso_local void @Fun7() #0 !dbg !54 {
entry:
  %Var7 = alloca i16
  ; DIExpression(DW_OP_deref)
  call void @llvm.dbg.declare(metadata ptr %Var7, metadata !58, metadata !DIExpression(DW_OP_deref)), !dbg !60
  call void @Esc(ptr %Var7), !dbg !60
  ret void, !dbg !60
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -4)
; CHECK-NEXT: DW_AT_name ("Var8")
define dso_local void @Fun8() #0 !dbg !61 {
entry:
  %Var8 = alloca i17
  ; DIExpression()
  call void @llvm.dbg.declare(metadata ptr %Var8, metadata !65, metadata !DIExpression()), !dbg !67
  call void @Esc(ptr %Var8), !dbg !67
  ret void, !dbg !67
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -4, DW_OP_deref)
; CHECK-NEXT: DW_AT_name ("Var9")
define dso_local void @Fun9() #0 !dbg !68 {
entry:
  %Var9 = alloca i17
  ; DIExpression(DW_OP_deref)
  call void @llvm.dbg.declare(metadata ptr %Var9, metadata !72, metadata !DIExpression(DW_OP_deref)), !dbg !74
  call void @Esc(ptr %Var9), !dbg !74
  ret void, !dbg !74
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -4)
; CHECK-NEXT: DW_AT_name ("Var10")
define dso_local void @Fun10() #0 !dbg !75 {
entry:
  %Var10 = alloca i32
  ; DIExpression()
  call void @llvm.dbg.declare(metadata ptr %Var10, metadata !79, metadata !DIExpression()), !dbg !81
  call void @Esc(ptr %Var10), !dbg !81
  ret void, !dbg !81
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -4, DW_OP_deref)
; CHECK-NEXT: DW_AT_name ("Var11")
define dso_local void @Fun11() #0 !dbg !82 {
entry:
  %Var11 = alloca i32
  ; DIExpression(DW_OP_deref)
  call void @llvm.dbg.declare(metadata ptr %Var11, metadata !86, metadata !DIExpression(DW_OP_deref)), !dbg !88
  call void @Esc(ptr %Var11), !dbg !88
  ret void, !dbg !88
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -8)
; CHECK-NEXT: DW_AT_name ("Var12")
define dso_local void @Fun12() #0 !dbg !89 {
entry:
  %Var12 = alloca i64
  ; DIExpression()
  call void @llvm.dbg.declare(metadata ptr %Var12, metadata !93, metadata !DIExpression()), !dbg !95
  call void @Esc(ptr %Var12), !dbg !95
  ret void, !dbg !95
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -8, DW_OP_deref)
; CHECK-NEXT: DW_AT_name ("Var13")
define dso_local void @Fun13() #0 !dbg !96 {
entry:
  %Var13 = alloca i64
  ; DIExpression(DW_OP_deref)
  call void @llvm.dbg.declare(metadata ptr %Var13, metadata !100, metadata !DIExpression(DW_OP_deref)), !dbg !102
  call void @Esc(ptr %Var13), !dbg !102
  ret void, !dbg !102
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -16)
; CHECK-NEXT: DW_AT_name ("Var14")
define dso_local void @Fun14() #0 !dbg !103 {
entry:
  %Var14 = alloca i128
  ; DIExpression()
  call void @llvm.dbg.declare(metadata ptr %Var14, metadata !107, metadata !DIExpression()), !dbg !109
  call void @Esc(ptr %Var14), !dbg !109
  ret void, !dbg !109
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -16, DW_OP_deref)
; CHECK-NEXT: DW_AT_name ("Var15")
define dso_local void @Fun15() #0 !dbg !110 {
entry:
  %Var15 = alloca i128
  ; DIExpression(DW_OP_deref)
  call void @llvm.dbg.declare(metadata ptr %Var15, metadata !114, metadata !DIExpression(DW_OP_deref)), !dbg !116
  call void @Esc(ptr %Var15), !dbg !116
  ret void, !dbg !116
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -2)
; CHECK-NEXT: DW_AT_name ("Var16")
define dso_local void @Fun16() #0 !dbg !117 {
entry:
  %Var16 = alloca half
  ; DIExpression()
  call void @llvm.dbg.declare(metadata ptr %Var16, metadata !121, metadata !DIExpression()), !dbg !123
  call void @Esc(ptr %Var16), !dbg !123
  ret void, !dbg !123
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -2, DW_OP_deref)
; CHECK-NEXT: DW_AT_name ("Var17")
define dso_local void @Fun17() #0 !dbg !124 {
entry:
  %Var17 = alloca half
  ; DIExpression(DW_OP_deref)
  call void @llvm.dbg.declare(metadata ptr %Var17, metadata !128, metadata !DIExpression(DW_OP_deref)), !dbg !130
  call void @Esc(ptr %Var17), !dbg !130
  ret void, !dbg !130
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -2)
; CHECK-NEXT: DW_AT_name ("Var18")
define dso_local void @Fun18() #0 !dbg !131 {
entry:
  %Var18 = alloca bfloat
  ; DIExpression()
  call void @llvm.dbg.declare(metadata ptr %Var18, metadata !135, metadata !DIExpression()), !dbg !137
  call void @Esc(ptr %Var18), !dbg !137
  ret void, !dbg !137
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -2, DW_OP_deref)
; CHECK-NEXT: DW_AT_name ("Var19")
define dso_local void @Fun19() #0 !dbg !138 {
entry:
  %Var19 = alloca bfloat
  ; DIExpression(DW_OP_deref)
  call void @llvm.dbg.declare(metadata ptr %Var19, metadata !142, metadata !DIExpression(DW_OP_deref)), !dbg !144
  call void @Esc(ptr %Var19), !dbg !144
  ret void, !dbg !144
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -4)
; CHECK-NEXT: DW_AT_name ("Var20")
define dso_local void @Fun20() #0 !dbg !145 {
entry:
  %Var20 = alloca float
  ; DIExpression()
  call void @llvm.dbg.declare(metadata ptr %Var20, metadata !149, metadata !DIExpression()), !dbg !151
  call void @Esc(ptr %Var20), !dbg !151
  ret void, !dbg !151
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -4, DW_OP_deref)
; CHECK-NEXT: DW_AT_name ("Var21")
define dso_local void @Fun21() #0 !dbg !152 {
entry:
  %Var21 = alloca float
  ; DIExpression(DW_OP_deref)
  call void @llvm.dbg.declare(metadata ptr %Var21, metadata !156, metadata !DIExpression(DW_OP_deref)), !dbg !158
  call void @Esc(ptr %Var21), !dbg !158
  ret void, !dbg !158
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -8)
; CHECK-NEXT: DW_AT_name ("Var22")
define dso_local void @Fun22() #0 !dbg !159 {
entry:
  %Var22 = alloca double
  ; DIExpression()
  call void @llvm.dbg.declare(metadata ptr %Var22, metadata !163, metadata !DIExpression()), !dbg !165
  call void @Esc(ptr %Var22), !dbg !165
  ret void, !dbg !165
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -8, DW_OP_deref)
; CHECK-NEXT: DW_AT_name ("Var23")
define dso_local void @Fun23() #0 !dbg !166 {
entry:
  %Var23 = alloca double
  ; DIExpression(DW_OP_deref)
  call void @llvm.dbg.declare(metadata ptr %Var23, metadata !170, metadata !DIExpression(DW_OP_deref)), !dbg !172
  call void @Esc(ptr %Var23), !dbg !172
  ret void, !dbg !172
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -16)
; CHECK-NEXT: DW_AT_name ("Var24")
define dso_local void @Fun24() #0 !dbg !173 {
entry:
  %Var24 = alloca fp128
  ; DIExpression()
  call void @llvm.dbg.declare(metadata ptr %Var24, metadata !177, metadata !DIExpression()), !dbg !179
  call void @Esc(ptr %Var24), !dbg !179
  ret void, !dbg !179
}
; CHECK: DW_TAG_variable
; CHECK-NEXT: DW_AT_location (DW_OP_fbreg -16, DW_OP_deref)
; CHECK-NEXT: DW_AT_name ("Var25")
define dso_local void @Fun25() #0 !dbg !180 {
entry:
  %Var25 = alloca fp128
  ; DIExpression(DW_OP_deref)
  call void @llvm.dbg.declare(metadata ptr %Var25, metadata !184, metadata !DIExpression(DW_OP_deref)), !dbg !186
  call void @Esc(ptr %Var25), !dbg !186
  ret void, !dbg !186
}

declare void @Esc(ptr)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1
declare void @llvm.dbg.def(metadata, metadata) #1

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.dbg.cu = !{!1}
!llvm.module.flags = !{!3, !4}

!1 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2, producer: "clang", emissionKind: FullDebug)
!2 = !DIFile(filename: "<stdin>", directory: ".")
!3 = !{i32 7, !"Dwarf Version", i32 5}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = distinct !DISubprogram(name: "Fun0", scope: !2, file: !2, line: 1, type: !6, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !8)
!6 = !DISubroutineType(types: !7)
!7 = !{null}
!8 = !{}
!9 = !DILocalVariable(name: "Var0", scope: !5, file: !2, line: 1, type: !10)
!10 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!11 = !DILocation(scope: !5)
!12 = distinct !DISubprogram(name: "Fun1", scope: !2, file: !2, line: 1, type: !13, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !15)
!13 = !DISubroutineType(types: !14)
!14 = !{null}
!15 = !{}
!16 = !DILocalVariable(name: "Var1", scope: !12, file: !2, line: 1, type: !17)
!17 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!18 = !DILocation(scope: !12)
!19 = distinct !DISubprogram(name: "Fun2", scope: !2, file: !2, line: 1, type: !20, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !22)
!20 = !DISubroutineType(types: !21)
!21 = !{null}
!22 = !{}
!23 = !DILocalVariable(name: "Var2", scope: !19, file: !2, line: 1, type: !24)
!24 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!25 = !DILocation(scope: !19)
!26 = distinct !DISubprogram(name: "Fun3", scope: !2, file: !2, line: 1, type: !27, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !29)
!27 = !DISubroutineType(types: !28)
!28 = !{null}
!29 = !{}
!30 = !DILocalVariable(name: "Var3", scope: !26, file: !2, line: 1, type: !31)
!31 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!32 = !DILocation(scope: !26)
!33 = distinct !DISubprogram(name: "Fun4", scope: !2, file: !2, line: 1, type: !34, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !36)
!34 = !DISubroutineType(types: !35)
!35 = !{null}
!36 = !{}
!37 = !DILocalVariable(name: "Var4", scope: !33, file: !2, line: 1, type: !38)
!38 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!39 = !DILocation(scope: !33)
!40 = distinct !DISubprogram(name: "Fun5", scope: !2, file: !2, line: 1, type: !41, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !43)
!41 = !DISubroutineType(types: !42)
!42 = !{null}
!43 = !{}
!44 = !DILocalVariable(name: "Var5", scope: !40, file: !2, line: 1, type: !45)
!45 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!46 = !DILocation(scope: !40)
!47 = distinct !DISubprogram(name: "Fun6", scope: !2, file: !2, line: 1, type: !48, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !50)
!48 = !DISubroutineType(types: !49)
!49 = !{null}
!50 = !{}
!51 = !DILocalVariable(name: "Var6", scope: !47, file: !2, line: 1, type: !52)
!52 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!53 = !DILocation(scope: !47)
!54 = distinct !DISubprogram(name: "Fun7", scope: !2, file: !2, line: 1, type: !55, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !57)
!55 = !DISubroutineType(types: !56)
!56 = !{null}
!57 = !{}
!58 = !DILocalVariable(name: "Var7", scope: !54, file: !2, line: 1, type: !59)
!59 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!60 = !DILocation(scope: !54)
!61 = distinct !DISubprogram(name: "Fun8", scope: !2, file: !2, line: 1, type: !62, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !64)
!62 = !DISubroutineType(types: !63)
!63 = !{null}
!64 = !{}
!65 = !DILocalVariable(name: "Var8", scope: !61, file: !2, line: 1, type: !66)
!66 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!67 = !DILocation(scope: !61)
!68 = distinct !DISubprogram(name: "Fun9", scope: !2, file: !2, line: 1, type: !69, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !71)
!69 = !DISubroutineType(types: !70)
!70 = !{null}
!71 = !{}
!72 = !DILocalVariable(name: "Var9", scope: !68, file: !2, line: 1, type: !73)
!73 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!74 = !DILocation(scope: !68)
!75 = distinct !DISubprogram(name: "Fun10", scope: !2, file: !2, line: 1, type: !76, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !78)
!76 = !DISubroutineType(types: !77)
!77 = !{null}
!78 = !{}
!79 = !DILocalVariable(name: "Var10", scope: !75, file: !2, line: 1, type: !80)
!80 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!81 = !DILocation(scope: !75)
!82 = distinct !DISubprogram(name: "Fun11", scope: !2, file: !2, line: 1, type: !83, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !85)
!83 = !DISubroutineType(types: !84)
!84 = !{null}
!85 = !{}
!86 = !DILocalVariable(name: "Var11", scope: !82, file: !2, line: 1, type: !87)
!87 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!88 = !DILocation(scope: !82)
!89 = distinct !DISubprogram(name: "Fun12", scope: !2, file: !2, line: 1, type: !90, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !92)
!90 = !DISubroutineType(types: !91)
!91 = !{null}
!92 = !{}
!93 = !DILocalVariable(name: "Var12", scope: !89, file: !2, line: 1, type: !94)
!94 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!95 = !DILocation(scope: !89)
!96 = distinct !DISubprogram(name: "Fun13", scope: !2, file: !2, line: 1, type: !97, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !99)
!97 = !DISubroutineType(types: !98)
!98 = !{null}
!99 = !{}
!100 = !DILocalVariable(name: "Var13", scope: !96, file: !2, line: 1, type: !101)
!101 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!102 = !DILocation(scope: !96)
!103 = distinct !DISubprogram(name: "Fun14", scope: !2, file: !2, line: 1, type: !104, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !106)
!104 = !DISubroutineType(types: !105)
!105 = !{null}
!106 = !{}
!107 = !DILocalVariable(name: "Var14", scope: !103, file: !2, line: 1, type: !108)
!108 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!109 = !DILocation(scope: !103)
!110 = distinct !DISubprogram(name: "Fun15", scope: !2, file: !2, line: 1, type: !111, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !113)
!111 = !DISubroutineType(types: !112)
!112 = !{null}
!113 = !{}
!114 = !DILocalVariable(name: "Var15", scope: !110, file: !2, line: 1, type: !115)
!115 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!116 = !DILocation(scope: !110)
!117 = distinct !DISubprogram(name: "Fun16", scope: !2, file: !2, line: 1, type: !118, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !120)
!118 = !DISubroutineType(types: !119)
!119 = !{null}
!120 = !{}
!121 = !DILocalVariable(name: "Var16", scope: !117, file: !2, line: 1, type: !122)
!122 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!123 = !DILocation(scope: !117)
!124 = distinct !DISubprogram(name: "Fun17", scope: !2, file: !2, line: 1, type: !125, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !127)
!125 = !DISubroutineType(types: !126)
!126 = !{null}
!127 = !{}
!128 = !DILocalVariable(name: "Var17", scope: !124, file: !2, line: 1, type: !129)
!129 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!130 = !DILocation(scope: !124)
!131 = distinct !DISubprogram(name: "Fun18", scope: !2, file: !2, line: 1, type: !132, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !134)
!132 = !DISubroutineType(types: !133)
!133 = !{null}
!134 = !{}
!135 = !DILocalVariable(name: "Var18", scope: !131, file: !2, line: 1, type: !136)
!136 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!137 = !DILocation(scope: !131)
!138 = distinct !DISubprogram(name: "Fun19", scope: !2, file: !2, line: 1, type: !139, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !141)
!139 = !DISubroutineType(types: !140)
!140 = !{null}
!141 = !{}
!142 = !DILocalVariable(name: "Var19", scope: !138, file: !2, line: 1, type: !143)
!143 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!144 = !DILocation(scope: !138)
!145 = distinct !DISubprogram(name: "Fun20", scope: !2, file: !2, line: 1, type: !146, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !148)
!146 = !DISubroutineType(types: !147)
!147 = !{null}
!148 = !{}
!149 = !DILocalVariable(name: "Var20", scope: !145, file: !2, line: 1, type: !150)
!150 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!151 = !DILocation(scope: !145)
!152 = distinct !DISubprogram(name: "Fun21", scope: !2, file: !2, line: 1, type: !153, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !155)
!153 = !DISubroutineType(types: !154)
!154 = !{null}
!155 = !{}
!156 = !DILocalVariable(name: "Var21", scope: !152, file: !2, line: 1, type: !157)
!157 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!158 = !DILocation(scope: !152)
!159 = distinct !DISubprogram(name: "Fun22", scope: !2, file: !2, line: 1, type: !160, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !162)
!160 = !DISubroutineType(types: !161)
!161 = !{null}
!162 = !{}
!163 = !DILocalVariable(name: "Var22", scope: !159, file: !2, line: 1, type: !164)
!164 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!165 = !DILocation(scope: !159)
!166 = distinct !DISubprogram(name: "Fun23", scope: !2, file: !2, line: 1, type: !167, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !169)
!167 = !DISubroutineType(types: !168)
!168 = !{null}
!169 = !{}
!170 = !DILocalVariable(name: "Var23", scope: !166, file: !2, line: 1, type: !171)
!171 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!172 = !DILocation(scope: !166)
!173 = distinct !DISubprogram(name: "Fun24", scope: !2, file: !2, line: 1, type: !174, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !176)
!174 = !DISubroutineType(types: !175)
!175 = !{null}
!176 = !{}
!177 = !DILocalVariable(name: "Var24", scope: !173, file: !2, line: 1, type: !178)
!178 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!179 = !DILocation(scope: !173)
!180 = distinct !DISubprogram(name: "Fun25", scope: !2, file: !2, line: 1, type: !181, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !183)
!181 = !DISubroutineType(types: !182)
!182 = !{null}
!183 = !{}
!184 = !DILocalVariable(name: "Var25", scope: !180, file: !2, line: 1, type: !185)
!185 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
!186 = !DILocation(scope: !180)

#--- mir
# RUN: llc -x mir -O0 -start-after=x86-isel -filetype=obj < %t/mir | llvm-dwarfdump --diff --debug-info -name Var* -regex - | FileCheck %t/mir
--- |
  source_filename = "-"
  target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
  target triple = "x86_64-unknown-linux-gnu"
  
  define dso_local void @Fun26() #0 !dbg !5 {
  entry:
    %Var26 = alloca i1
    ; DIExpression()
    call void @llvm.dbg.declare(metadata ptr %Var26, metadata !9, metadata !DIExpression()), !dbg !11
    call void @Esc(ptr %Var26), !dbg !11
    ret void, !dbg !11
  }
  define dso_local void @Fun27() #0 !dbg !12 {
  entry:
    %Var27 = alloca i1
    ; DIExpression(DW_OP_deref)
    call void @llvm.dbg.declare(metadata ptr %Var27, metadata !16, metadata !DIExpression(DW_OP_deref)), !dbg !18
    call void @Esc(ptr %Var27), !dbg !18
    ret void, !dbg !18
  }
  define dso_local void @Fun28() #0 !dbg !19 {
  entry:
    %Var28 = alloca i1
    ; DIExpression(DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var28, metadata !23, metadata !DIExpression(DW_OP_stack_value)), !dbg !25
    call void @Esc(ptr %Var28), !dbg !25
    ret void, !dbg !25
  }
  define dso_local void @Fun29() #0 !dbg !26 {
  entry:
    %Var29 = alloca i1
    ; DIExpression(DW_OP_deref, DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var29, metadata !30, metadata !DIExpression(DW_OP_deref, DW_OP_stack_value)), !dbg !32
    call void @Esc(ptr %Var29), !dbg !32
    ret void, !dbg !32
  }
  define dso_local void @Fun30() #0 !dbg !33 {
  entry:
    %Var30 = alloca i4
    ; DIExpression()
    call void @llvm.dbg.declare(metadata ptr %Var30, metadata !37, metadata !DIExpression()), !dbg !39
    call void @Esc(ptr %Var30), !dbg !39
    ret void, !dbg !39
  }
  define dso_local void @Fun31() #0 !dbg !40 {
  entry:
    %Var31 = alloca i4
    ; DIExpression(DW_OP_deref)
    call void @llvm.dbg.declare(metadata ptr %Var31, metadata !44, metadata !DIExpression(DW_OP_deref)), !dbg !46
    call void @Esc(ptr %Var31), !dbg !46
    ret void, !dbg !46
  }
  define dso_local void @Fun32() #0 !dbg !47 {
  entry:
    %Var32 = alloca i4
    ; DIExpression(DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var32, metadata !51, metadata !DIExpression(DW_OP_stack_value)), !dbg !53
    call void @Esc(ptr %Var32), !dbg !53
    ret void, !dbg !53
  }
  define dso_local void @Fun33() #0 !dbg !54 {
  entry:
    %Var33 = alloca i4
    ; DIExpression(DW_OP_deref, DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var33, metadata !58, metadata !DIExpression(DW_OP_deref, DW_OP_stack_value)), !dbg !60
    call void @Esc(ptr %Var33), !dbg !60
    ret void, !dbg !60
  }
  define dso_local void @Fun34() #0 !dbg !61 {
  entry:
    %Var34 = alloca i8
    ; DIExpression()
    call void @llvm.dbg.declare(metadata ptr %Var34, metadata !65, metadata !DIExpression()), !dbg !67
    call void @Esc(ptr %Var34), !dbg !67
    ret void, !dbg !67
  }
  define dso_local void @Fun35() #0 !dbg !68 {
  entry:
    %Var35 = alloca i8
    ; DIExpression(DW_OP_deref)
    call void @llvm.dbg.declare(metadata ptr %Var35, metadata !72, metadata !DIExpression(DW_OP_deref)), !dbg !74
    call void @Esc(ptr %Var35), !dbg !74
    ret void, !dbg !74
  }
  define dso_local void @Fun36() #0 !dbg !75 {
  entry:
    %Var36 = alloca i8
    ; DIExpression(DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var36, metadata !79, metadata !DIExpression(DW_OP_stack_value)), !dbg !81
    call void @Esc(ptr %Var36), !dbg !81
    ret void, !dbg !81
  }
  define dso_local void @Fun37() #0 !dbg !82 {
  entry:
    %Var37 = alloca i8
    ; DIExpression(DW_OP_deref, DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var37, metadata !86, metadata !DIExpression(DW_OP_deref, DW_OP_stack_value)), !dbg !88
    call void @Esc(ptr %Var37), !dbg !88
    ret void, !dbg !88
  }
  define dso_local void @Fun38() #0 !dbg !89 {
  entry:
    %Var38 = alloca i16
    ; DIExpression()
    call void @llvm.dbg.declare(metadata ptr %Var38, metadata !93, metadata !DIExpression()), !dbg !95
    call void @Esc(ptr %Var38), !dbg !95
    ret void, !dbg !95
  }
  define dso_local void @Fun39() #0 !dbg !96 {
  entry:
    %Var39 = alloca i16
    ; DIExpression(DW_OP_deref)
    call void @llvm.dbg.declare(metadata ptr %Var39, metadata !100, metadata !DIExpression(DW_OP_deref)), !dbg !102
    call void @Esc(ptr %Var39), !dbg !102
    ret void, !dbg !102
  }
  define dso_local void @Fun40() #0 !dbg !103 {
  entry:
    %Var40 = alloca i16
    ; DIExpression(DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var40, metadata !107, metadata !DIExpression(DW_OP_stack_value)), !dbg !109
    call void @Esc(ptr %Var40), !dbg !109
    ret void, !dbg !109
  }
  define dso_local void @Fun41() #0 !dbg !110 {
  entry:
    %Var41 = alloca i16
    ; DIExpression(DW_OP_deref, DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var41, metadata !114, metadata !DIExpression(DW_OP_deref, DW_OP_stack_value)), !dbg !116
    call void @Esc(ptr %Var41), !dbg !116
    ret void, !dbg !116
  }
  define dso_local void @Fun42() #0 !dbg !117 {
  entry:
    %Var42 = alloca i17
    ; DIExpression()
    call void @llvm.dbg.declare(metadata ptr %Var42, metadata !121, metadata !DIExpression()), !dbg !123
    call void @Esc(ptr %Var42), !dbg !123
    ret void, !dbg !123
  }
  define dso_local void @Fun43() #0 !dbg !124 {
  entry:
    %Var43 = alloca i17
    ; DIExpression(DW_OP_deref)
    call void @llvm.dbg.declare(metadata ptr %Var43, metadata !128, metadata !DIExpression(DW_OP_deref)), !dbg !130
    call void @Esc(ptr %Var43), !dbg !130
    ret void, !dbg !130
  }
  define dso_local void @Fun44() #0 !dbg !131 {
  entry:
    %Var44 = alloca i17
    ; DIExpression(DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var44, metadata !135, metadata !DIExpression(DW_OP_stack_value)), !dbg !137
    call void @Esc(ptr %Var44), !dbg !137
    ret void, !dbg !137
  }
  define dso_local void @Fun45() #0 !dbg !138 {
  entry:
    %Var45 = alloca i17
    ; DIExpression(DW_OP_deref, DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var45, metadata !142, metadata !DIExpression(DW_OP_deref, DW_OP_stack_value)), !dbg !144
    call void @Esc(ptr %Var45), !dbg !144
    ret void, !dbg !144
  }
  define dso_local void @Fun46() #0 !dbg !145 {
  entry:
    %Var46 = alloca i32
    ; DIExpression()
    call void @llvm.dbg.declare(metadata ptr %Var46, metadata !149, metadata !DIExpression()), !dbg !151
    call void @Esc(ptr %Var46), !dbg !151
    ret void, !dbg !151
  }
  define dso_local void @Fun47() #0 !dbg !152 {
  entry:
    %Var47 = alloca i32
    ; DIExpression(DW_OP_deref)
    call void @llvm.dbg.declare(metadata ptr %Var47, metadata !156, metadata !DIExpression(DW_OP_deref)), !dbg !158
    call void @Esc(ptr %Var47), !dbg !158
    ret void, !dbg !158
  }
  define dso_local void @Fun48() #0 !dbg !159 {
  entry:
    %Var48 = alloca i32
    ; DIExpression(DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var48, metadata !163, metadata !DIExpression(DW_OP_stack_value)), !dbg !165
    call void @Esc(ptr %Var48), !dbg !165
    ret void, !dbg !165
  }
  define dso_local void @Fun49() #0 !dbg !166 {
  entry:
    %Var49 = alloca i32
    ; DIExpression(DW_OP_deref, DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var49, metadata !170, metadata !DIExpression(DW_OP_deref, DW_OP_stack_value)), !dbg !172
    call void @Esc(ptr %Var49), !dbg !172
    ret void, !dbg !172
  }
  define dso_local void @Fun50() #0 !dbg !173 {
  entry:
    %Var50 = alloca i64
    ; DIExpression()
    call void @llvm.dbg.declare(metadata ptr %Var50, metadata !177, metadata !DIExpression()), !dbg !179
    call void @Esc(ptr %Var50), !dbg !179
    ret void, !dbg !179
  }
  define dso_local void @Fun51() #0 !dbg !180 {
  entry:
    %Var51 = alloca i64
    ; DIExpression(DW_OP_deref)
    call void @llvm.dbg.declare(metadata ptr %Var51, metadata !184, metadata !DIExpression(DW_OP_deref)), !dbg !186
    call void @Esc(ptr %Var51), !dbg !186
    ret void, !dbg !186
  }
  define dso_local void @Fun52() #0 !dbg !187 {
  entry:
    %Var52 = alloca i64
    ; DIExpression(DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var52, metadata !191, metadata !DIExpression(DW_OP_stack_value)), !dbg !193
    call void @Esc(ptr %Var52), !dbg !193
    ret void, !dbg !193
  }
  define dso_local void @Fun53() #0 !dbg !194 {
  entry:
    %Var53 = alloca i64
    ; DIExpression(DW_OP_deref, DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var53, metadata !198, metadata !DIExpression(DW_OP_deref, DW_OP_stack_value)), !dbg !200
    call void @Esc(ptr %Var53), !dbg !200
    ret void, !dbg !200
  }
  define dso_local void @Fun54() #0 !dbg !201 {
  entry:
    %Var54 = alloca i128
    ; DIExpression()
    call void @llvm.dbg.declare(metadata ptr %Var54, metadata !205, metadata !DIExpression()), !dbg !207
    call void @Esc(ptr %Var54), !dbg !207
    ret void, !dbg !207
  }
  define dso_local void @Fun55() #0 !dbg !208 {
  entry:
    %Var55 = alloca i128
    ; DIExpression(DW_OP_deref)
    call void @llvm.dbg.declare(metadata ptr %Var55, metadata !212, metadata !DIExpression(DW_OP_deref)), !dbg !214
    call void @Esc(ptr %Var55), !dbg !214
    ret void, !dbg !214
  }
  define dso_local void @Fun56() #0 !dbg !215 {
  entry:
    %Var56 = alloca i128
    ; DIExpression(DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var56, metadata !219, metadata !DIExpression(DW_OP_stack_value)), !dbg !221
    call void @Esc(ptr %Var56), !dbg !221
    ret void, !dbg !221
  }
  define dso_local void @Fun57() #0 !dbg !222 {
  entry:
    %Var57 = alloca i128
    ; DIExpression(DW_OP_deref, DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var57, metadata !226, metadata !DIExpression(DW_OP_deref, DW_OP_stack_value)), !dbg !228
    call void @Esc(ptr %Var57), !dbg !228
    ret void, !dbg !228
  }
  define dso_local void @Fun58() #0 !dbg !229 {
  entry:
    %Var58 = alloca half
    ; DIExpression()
    call void @llvm.dbg.declare(metadata ptr %Var58, metadata !233, metadata !DIExpression()), !dbg !235
    call void @Esc(ptr %Var58), !dbg !235
    ret void, !dbg !235
  }
  define dso_local void @Fun59() #0 !dbg !236 {
  entry:
    %Var59 = alloca half
    ; DIExpression(DW_OP_deref)
    call void @llvm.dbg.declare(metadata ptr %Var59, metadata !240, metadata !DIExpression(DW_OP_deref)), !dbg !242
    call void @Esc(ptr %Var59), !dbg !242
    ret void, !dbg !242
  }
  define dso_local void @Fun60() #0 !dbg !243 {
  entry:
    %Var60 = alloca half
    ; DIExpression(DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var60, metadata !247, metadata !DIExpression(DW_OP_stack_value)), !dbg !249
    call void @Esc(ptr %Var60), !dbg !249
    ret void, !dbg !249
  }
  define dso_local void @Fun61() #0 !dbg !250 {
  entry:
    %Var61 = alloca half
    ; DIExpression(DW_OP_deref, DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var61, metadata !254, metadata !DIExpression(DW_OP_deref, DW_OP_stack_value)), !dbg !256
    call void @Esc(ptr %Var61), !dbg !256
    ret void, !dbg !256
  }
  define dso_local void @Fun62() #0 !dbg !257 {
  entry:
    %Var62 = alloca bfloat
    ; DIExpression()
    call void @llvm.dbg.declare(metadata ptr %Var62, metadata !261, metadata !DIExpression()), !dbg !263
    call void @Esc(ptr %Var62), !dbg !263
    ret void, !dbg !263
  }
  define dso_local void @Fun63() #0 !dbg !264 {
  entry:
    %Var63 = alloca bfloat
    ; DIExpression(DW_OP_deref)
    call void @llvm.dbg.declare(metadata ptr %Var63, metadata !268, metadata !DIExpression(DW_OP_deref)), !dbg !270
    call void @Esc(ptr %Var63), !dbg !270
    ret void, !dbg !270
  }
  define dso_local void @Fun64() #0 !dbg !271 {
  entry:
    %Var64 = alloca bfloat
    ; DIExpression(DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var64, metadata !275, metadata !DIExpression(DW_OP_stack_value)), !dbg !277
    call void @Esc(ptr %Var64), !dbg !277
    ret void, !dbg !277
  }
  define dso_local void @Fun65() #0 !dbg !278 {
  entry:
    %Var65 = alloca bfloat
    ; DIExpression(DW_OP_deref, DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var65, metadata !282, metadata !DIExpression(DW_OP_deref, DW_OP_stack_value)), !dbg !284
    call void @Esc(ptr %Var65), !dbg !284
    ret void, !dbg !284
  }
  define dso_local void @Fun66() #0 !dbg !285 {
  entry:
    %Var66 = alloca float
    ; DIExpression()
    call void @llvm.dbg.declare(metadata ptr %Var66, metadata !289, metadata !DIExpression()), !dbg !291
    call void @Esc(ptr %Var66), !dbg !291
    ret void, !dbg !291
  }
  define dso_local void @Fun67() #0 !dbg !292 {
  entry:
    %Var67 = alloca float
    ; DIExpression(DW_OP_deref)
    call void @llvm.dbg.declare(metadata ptr %Var67, metadata !296, metadata !DIExpression(DW_OP_deref)), !dbg !298
    call void @Esc(ptr %Var67), !dbg !298
    ret void, !dbg !298
  }
  define dso_local void @Fun68() #0 !dbg !299 {
  entry:
    %Var68 = alloca float
    ; DIExpression(DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var68, metadata !303, metadata !DIExpression(DW_OP_stack_value)), !dbg !305
    call void @Esc(ptr %Var68), !dbg !305
    ret void, !dbg !305
  }
  define dso_local void @Fun69() #0 !dbg !306 {
  entry:
    %Var69 = alloca float
    ; DIExpression(DW_OP_deref, DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var69, metadata !310, metadata !DIExpression(DW_OP_deref, DW_OP_stack_value)), !dbg !312
    call void @Esc(ptr %Var69), !dbg !312
    ret void, !dbg !312
  }
  define dso_local void @Fun70() #0 !dbg !313 {
  entry:
    %Var70 = alloca double
    ; DIExpression()
    call void @llvm.dbg.declare(metadata ptr %Var70, metadata !317, metadata !DIExpression()), !dbg !319
    call void @Esc(ptr %Var70), !dbg !319
    ret void, !dbg !319
  }
  define dso_local void @Fun71() #0 !dbg !320 {
  entry:
    %Var71 = alloca double
    ; DIExpression(DW_OP_deref)
    call void @llvm.dbg.declare(metadata ptr %Var71, metadata !324, metadata !DIExpression(DW_OP_deref)), !dbg !326
    call void @Esc(ptr %Var71), !dbg !326
    ret void, !dbg !326
  }
  define dso_local void @Fun72() #0 !dbg !327 {
  entry:
    %Var72 = alloca double
    ; DIExpression(DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var72, metadata !331, metadata !DIExpression(DW_OP_stack_value)), !dbg !333
    call void @Esc(ptr %Var72), !dbg !333
    ret void, !dbg !333
  }
  define dso_local void @Fun73() #0 !dbg !334 {
  entry:
    %Var73 = alloca double
    ; DIExpression(DW_OP_deref, DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var73, metadata !338, metadata !DIExpression(DW_OP_deref, DW_OP_stack_value)), !dbg !340
    call void @Esc(ptr %Var73), !dbg !340
    ret void, !dbg !340
  }
  define dso_local void @Fun74() #0 !dbg !341 {
  entry:
    %Var74 = alloca fp128
    ; DIExpression()
    call void @llvm.dbg.declare(metadata ptr %Var74, metadata !345, metadata !DIExpression()), !dbg !347
    call void @Esc(ptr %Var74), !dbg !347
    ret void, !dbg !347
  }
  define dso_local void @Fun75() #0 !dbg !348 {
  entry:
    %Var75 = alloca fp128
    ; DIExpression(DW_OP_deref)
    call void @llvm.dbg.declare(metadata ptr %Var75, metadata !352, metadata !DIExpression(DW_OP_deref)), !dbg !354
    call void @Esc(ptr %Var75), !dbg !354
    ret void, !dbg !354
  }
  define dso_local void @Fun76() #0 !dbg !355 {
  entry:
    %Var76 = alloca fp128
    ; DIExpression(DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var76, metadata !359, metadata !DIExpression(DW_OP_stack_value)), !dbg !361
    call void @Esc(ptr %Var76), !dbg !361
    ret void, !dbg !361
  }
  define dso_local void @Fun77() #0 !dbg !362 {
  entry:
    %Var77 = alloca fp128
    ; DIExpression(DW_OP_deref, DW_OP_stack_value)
    call void @llvm.dbg.declare(metadata ptr %Var77, metadata !366, metadata !DIExpression(DW_OP_deref, DW_OP_stack_value)), !dbg !368
    call void @Esc(ptr %Var77), !dbg !368
    ret void, !dbg !368
  }
  define dso_local void @Fun78() #0 !dbg !369 {
  entry:
    ret void, !dbg !375
  }
  define dso_local void @Fun79() #0 !dbg !376 {
  entry:
    ret void, !dbg !382
  }
  define dso_local void @Fun80() #0 !dbg !383 {
  entry:
    ret void, !dbg !389
  }
  define dso_local void @Fun81() #0 !dbg !390 {
  entry:
    ret void, !dbg !396
  }
  define dso_local void @Fun82() #0 !dbg !397 {
  entry:
    ret void, !dbg !403
  }
  define dso_local void @Fun83() #0 !dbg !404 {
  entry:
    ret void, !dbg !410
  }
  define dso_local void @Fun84() #0 !dbg !411 {
  entry:
    ret void, !dbg !417
  }
  define dso_local void @Fun85() #0 !dbg !418 {
  entry:
    ret void, !dbg !424
  }
  define dso_local void @Fun86() #0 !dbg !425 {
  entry:
    ret void, !dbg !431
  }
  define dso_local void @Fun87() #0 !dbg !432 {
  entry:
    ret void, !dbg !438
  }
  define dso_local void @Fun88() #0 !dbg !439 {
  entry:
    ret void, !dbg !445
  }
  define dso_local void @Fun89() #0 !dbg !446 {
  entry:
    ret void, !dbg !452
  }
  define dso_local void @Fun90() #0 !dbg !453 {
  entry:
    ret void, !dbg !459
  }
  define dso_local void @Fun91() #0 !dbg !460 {
  entry:
    ret void, !dbg !466
  }
  define dso_local void @Fun92() #0 !dbg !467 {
  entry:
    ret void, !dbg !473
  }
  define dso_local void @Fun93() #0 !dbg !474 {
  entry:
    ret void, !dbg !480
  }
  define dso_local void @Fun94() #0 !dbg !481 {
  entry:
    ret void, !dbg !487
  }
  define dso_local void @Fun95() #0 !dbg !488 {
  entry:
    ret void, !dbg !494
  }
  define dso_local void @Fun96() #0 !dbg !495 {
  entry:
    ret void, !dbg !501
  }
  define dso_local void @Fun97() #0 !dbg !502 {
  entry:
    ret void, !dbg !508
  }
  define dso_local void @Fun98() #0 !dbg !509 {
  entry:
    ret void, !dbg !515
  }
  define dso_local void @Fun99() #0 !dbg !516 {
  entry:
    ret void, !dbg !522
  }
  define dso_local void @Fun100() #0 !dbg !523 {
  entry:
    ret void, !dbg !529
  }
  define dso_local void @Fun101() #0 !dbg !530 {
  entry:
    ret void, !dbg !536
  }
  define dso_local void @Fun102() #0 !dbg !537 {
  entry:
    ret void, !dbg !543
  }
  define dso_local void @Fun103() #0 !dbg !544 {
  entry:
    ret void, !dbg !550
  }
  
  declare void @Esc(ptr)
  declare void @llvm.dbg.declare(metadata, metadata, metadata) #1
  declare void @llvm.dbg.def(metadata, metadata) #1
  
  attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
  attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
  attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
  
  !llvm.dbg.cu = !{!1}
  !llvm.module.flags = !{!3, !4}
  
  !1 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2, producer: "clang", emissionKind: FullDebug)
  !2 = !DIFile(filename: "<stdin>", directory: ".")
  !3 = !{i32 7, !"Dwarf Version", i32 5}
  !4 = !{i32 2, !"Debug Info Version", i32 3}
  !5 = distinct !DISubprogram(name: "Fun26", scope: !2, file: !2, line: 1, type: !6, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !8)
  !6 = !DISubroutineType(types: !7)
  !7 = !{null}
  !8 = !{}
  !9 = !DILocalVariable(name: "Var26", scope: !5, file: !2, line: 1, type: !10)
  !10 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !11 = !DILocation(scope: !5)
  !12 = distinct !DISubprogram(name: "Fun27", scope: !2, file: !2, line: 1, type: !13, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !15)
  !13 = !DISubroutineType(types: !14)
  !14 = !{null}
  !15 = !{}
  !16 = !DILocalVariable(name: "Var27", scope: !12, file: !2, line: 1, type: !17)
  !17 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !18 = !DILocation(scope: !12)
  !19 = distinct !DISubprogram(name: "Fun28", scope: !2, file: !2, line: 1, type: !20, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !22)
  !20 = !DISubroutineType(types: !21)
  !21 = !{null}
  !22 = !{}
  !23 = !DILocalVariable(name: "Var28", scope: !19, file: !2, line: 1, type: !24)
  !24 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !25 = !DILocation(scope: !19)
  !26 = distinct !DISubprogram(name: "Fun29", scope: !2, file: !2, line: 1, type: !27, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !29)
  !27 = !DISubroutineType(types: !28)
  !28 = !{null}
  !29 = !{}
  !30 = !DILocalVariable(name: "Var29", scope: !26, file: !2, line: 1, type: !31)
  !31 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !32 = !DILocation(scope: !26)
  !33 = distinct !DISubprogram(name: "Fun30", scope: !2, file: !2, line: 1, type: !34, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !36)
  !34 = !DISubroutineType(types: !35)
  !35 = !{null}
  !36 = !{}
  !37 = !DILocalVariable(name: "Var30", scope: !33, file: !2, line: 1, type: !38)
  !38 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !39 = !DILocation(scope: !33)
  !40 = distinct !DISubprogram(name: "Fun31", scope: !2, file: !2, line: 1, type: !41, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !43)
  !41 = !DISubroutineType(types: !42)
  !42 = !{null}
  !43 = !{}
  !44 = !DILocalVariable(name: "Var31", scope: !40, file: !2, line: 1, type: !45)
  !45 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !46 = !DILocation(scope: !40)
  !47 = distinct !DISubprogram(name: "Fun32", scope: !2, file: !2, line: 1, type: !48, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !50)
  !48 = !DISubroutineType(types: !49)
  !49 = !{null}
  !50 = !{}
  !51 = !DILocalVariable(name: "Var32", scope: !47, file: !2, line: 1, type: !52)
  !52 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !53 = !DILocation(scope: !47)
  !54 = distinct !DISubprogram(name: "Fun33", scope: !2, file: !2, line: 1, type: !55, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !57)
  !55 = !DISubroutineType(types: !56)
  !56 = !{null}
  !57 = !{}
  !58 = !DILocalVariable(name: "Var33", scope: !54, file: !2, line: 1, type: !59)
  !59 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !60 = !DILocation(scope: !54)
  !61 = distinct !DISubprogram(name: "Fun34", scope: !2, file: !2, line: 1, type: !62, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !64)
  !62 = !DISubroutineType(types: !63)
  !63 = !{null}
  !64 = !{}
  !65 = !DILocalVariable(name: "Var34", scope: !61, file: !2, line: 1, type: !66)
  !66 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !67 = !DILocation(scope: !61)
  !68 = distinct !DISubprogram(name: "Fun35", scope: !2, file: !2, line: 1, type: !69, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !71)
  !69 = !DISubroutineType(types: !70)
  !70 = !{null}
  !71 = !{}
  !72 = !DILocalVariable(name: "Var35", scope: !68, file: !2, line: 1, type: !73)
  !73 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !74 = !DILocation(scope: !68)
  !75 = distinct !DISubprogram(name: "Fun36", scope: !2, file: !2, line: 1, type: !76, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !78)
  !76 = !DISubroutineType(types: !77)
  !77 = !{null}
  !78 = !{}
  !79 = !DILocalVariable(name: "Var36", scope: !75, file: !2, line: 1, type: !80)
  !80 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !81 = !DILocation(scope: !75)
  !82 = distinct !DISubprogram(name: "Fun37", scope: !2, file: !2, line: 1, type: !83, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !85)
  !83 = !DISubroutineType(types: !84)
  !84 = !{null}
  !85 = !{}
  !86 = !DILocalVariable(name: "Var37", scope: !82, file: !2, line: 1, type: !87)
  !87 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !88 = !DILocation(scope: !82)
  !89 = distinct !DISubprogram(name: "Fun38", scope: !2, file: !2, line: 1, type: !90, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !92)
  !90 = !DISubroutineType(types: !91)
  !91 = !{null}
  !92 = !{}
  !93 = !DILocalVariable(name: "Var38", scope: !89, file: !2, line: 1, type: !94)
  !94 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !95 = !DILocation(scope: !89)
  !96 = distinct !DISubprogram(name: "Fun39", scope: !2, file: !2, line: 1, type: !97, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !99)
  !97 = !DISubroutineType(types: !98)
  !98 = !{null}
  !99 = !{}
  !100 = !DILocalVariable(name: "Var39", scope: !96, file: !2, line: 1, type: !101)
  !101 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !102 = !DILocation(scope: !96)
  !103 = distinct !DISubprogram(name: "Fun40", scope: !2, file: !2, line: 1, type: !104, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !106)
  !104 = !DISubroutineType(types: !105)
  !105 = !{null}
  !106 = !{}
  !107 = !DILocalVariable(name: "Var40", scope: !103, file: !2, line: 1, type: !108)
  !108 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !109 = !DILocation(scope: !103)
  !110 = distinct !DISubprogram(name: "Fun41", scope: !2, file: !2, line: 1, type: !111, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !113)
  !111 = !DISubroutineType(types: !112)
  !112 = !{null}
  !113 = !{}
  !114 = !DILocalVariable(name: "Var41", scope: !110, file: !2, line: 1, type: !115)
  !115 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !116 = !DILocation(scope: !110)
  !117 = distinct !DISubprogram(name: "Fun42", scope: !2, file: !2, line: 1, type: !118, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !120)
  !118 = !DISubroutineType(types: !119)
  !119 = !{null}
  !120 = !{}
  !121 = !DILocalVariable(name: "Var42", scope: !117, file: !2, line: 1, type: !122)
  !122 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !123 = !DILocation(scope: !117)
  !124 = distinct !DISubprogram(name: "Fun43", scope: !2, file: !2, line: 1, type: !125, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !127)
  !125 = !DISubroutineType(types: !126)
  !126 = !{null}
  !127 = !{}
  !128 = !DILocalVariable(name: "Var43", scope: !124, file: !2, line: 1, type: !129)
  !129 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !130 = !DILocation(scope: !124)
  !131 = distinct !DISubprogram(name: "Fun44", scope: !2, file: !2, line: 1, type: !132, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !134)
  !132 = !DISubroutineType(types: !133)
  !133 = !{null}
  !134 = !{}
  !135 = !DILocalVariable(name: "Var44", scope: !131, file: !2, line: 1, type: !136)
  !136 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !137 = !DILocation(scope: !131)
  !138 = distinct !DISubprogram(name: "Fun45", scope: !2, file: !2, line: 1, type: !139, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !141)
  !139 = !DISubroutineType(types: !140)
  !140 = !{null}
  !141 = !{}
  !142 = !DILocalVariable(name: "Var45", scope: !138, file: !2, line: 1, type: !143)
  !143 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !144 = !DILocation(scope: !138)
  !145 = distinct !DISubprogram(name: "Fun46", scope: !2, file: !2, line: 1, type: !146, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !148)
  !146 = !DISubroutineType(types: !147)
  !147 = !{null}
  !148 = !{}
  !149 = !DILocalVariable(name: "Var46", scope: !145, file: !2, line: 1, type: !150)
  !150 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !151 = !DILocation(scope: !145)
  !152 = distinct !DISubprogram(name: "Fun47", scope: !2, file: !2, line: 1, type: !153, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !155)
  !153 = !DISubroutineType(types: !154)
  !154 = !{null}
  !155 = !{}
  !156 = !DILocalVariable(name: "Var47", scope: !152, file: !2, line: 1, type: !157)
  !157 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !158 = !DILocation(scope: !152)
  !159 = distinct !DISubprogram(name: "Fun48", scope: !2, file: !2, line: 1, type: !160, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !162)
  !160 = !DISubroutineType(types: !161)
  !161 = !{null}
  !162 = !{}
  !163 = !DILocalVariable(name: "Var48", scope: !159, file: !2, line: 1, type: !164)
  !164 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !165 = !DILocation(scope: !159)
  !166 = distinct !DISubprogram(name: "Fun49", scope: !2, file: !2, line: 1, type: !167, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !169)
  !167 = !DISubroutineType(types: !168)
  !168 = !{null}
  !169 = !{}
  !170 = !DILocalVariable(name: "Var49", scope: !166, file: !2, line: 1, type: !171)
  !171 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !172 = !DILocation(scope: !166)
  !173 = distinct !DISubprogram(name: "Fun50", scope: !2, file: !2, line: 1, type: !174, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !176)
  !174 = !DISubroutineType(types: !175)
  !175 = !{null}
  !176 = !{}
  !177 = !DILocalVariable(name: "Var50", scope: !173, file: !2, line: 1, type: !178)
  !178 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !179 = !DILocation(scope: !173)
  !180 = distinct !DISubprogram(name: "Fun51", scope: !2, file: !2, line: 1, type: !181, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !183)
  !181 = !DISubroutineType(types: !182)
  !182 = !{null}
  !183 = !{}
  !184 = !DILocalVariable(name: "Var51", scope: !180, file: !2, line: 1, type: !185)
  !185 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !186 = !DILocation(scope: !180)
  !187 = distinct !DISubprogram(name: "Fun52", scope: !2, file: !2, line: 1, type: !188, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !190)
  !188 = !DISubroutineType(types: !189)
  !189 = !{null}
  !190 = !{}
  !191 = !DILocalVariable(name: "Var52", scope: !187, file: !2, line: 1, type: !192)
  !192 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !193 = !DILocation(scope: !187)
  !194 = distinct !DISubprogram(name: "Fun53", scope: !2, file: !2, line: 1, type: !195, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !197)
  !195 = !DISubroutineType(types: !196)
  !196 = !{null}
  !197 = !{}
  !198 = !DILocalVariable(name: "Var53", scope: !194, file: !2, line: 1, type: !199)
  !199 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !200 = !DILocation(scope: !194)
  !201 = distinct !DISubprogram(name: "Fun54", scope: !2, file: !2, line: 1, type: !202, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !204)
  !202 = !DISubroutineType(types: !203)
  !203 = !{null}
  !204 = !{}
  !205 = !DILocalVariable(name: "Var54", scope: !201, file: !2, line: 1, type: !206)
  !206 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !207 = !DILocation(scope: !201)
  !208 = distinct !DISubprogram(name: "Fun55", scope: !2, file: !2, line: 1, type: !209, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !211)
  !209 = !DISubroutineType(types: !210)
  !210 = !{null}
  !211 = !{}
  !212 = !DILocalVariable(name: "Var55", scope: !208, file: !2, line: 1, type: !213)
  !213 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !214 = !DILocation(scope: !208)
  !215 = distinct !DISubprogram(name: "Fun56", scope: !2, file: !2, line: 1, type: !216, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !218)
  !216 = !DISubroutineType(types: !217)
  !217 = !{null}
  !218 = !{}
  !219 = !DILocalVariable(name: "Var56", scope: !215, file: !2, line: 1, type: !220)
  !220 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !221 = !DILocation(scope: !215)
  !222 = distinct !DISubprogram(name: "Fun57", scope: !2, file: !2, line: 1, type: !223, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !225)
  !223 = !DISubroutineType(types: !224)
  !224 = !{null}
  !225 = !{}
  !226 = !DILocalVariable(name: "Var57", scope: !222, file: !2, line: 1, type: !227)
  !227 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !228 = !DILocation(scope: !222)
  !229 = distinct !DISubprogram(name: "Fun58", scope: !2, file: !2, line: 1, type: !230, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !232)
  !230 = !DISubroutineType(types: !231)
  !231 = !{null}
  !232 = !{}
  !233 = !DILocalVariable(name: "Var58", scope: !229, file: !2, line: 1, type: !234)
  !234 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !235 = !DILocation(scope: !229)
  !236 = distinct !DISubprogram(name: "Fun59", scope: !2, file: !2, line: 1, type: !237, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !239)
  !237 = !DISubroutineType(types: !238)
  !238 = !{null}
  !239 = !{}
  !240 = !DILocalVariable(name: "Var59", scope: !236, file: !2, line: 1, type: !241)
  !241 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !242 = !DILocation(scope: !236)
  !243 = distinct !DISubprogram(name: "Fun60", scope: !2, file: !2, line: 1, type: !244, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !246)
  !244 = !DISubroutineType(types: !245)
  !245 = !{null}
  !246 = !{}
  !247 = !DILocalVariable(name: "Var60", scope: !243, file: !2, line: 1, type: !248)
  !248 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !249 = !DILocation(scope: !243)
  !250 = distinct !DISubprogram(name: "Fun61", scope: !2, file: !2, line: 1, type: !251, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !253)
  !251 = !DISubroutineType(types: !252)
  !252 = !{null}
  !253 = !{}
  !254 = !DILocalVariable(name: "Var61", scope: !250, file: !2, line: 1, type: !255)
  !255 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !256 = !DILocation(scope: !250)
  !257 = distinct !DISubprogram(name: "Fun62", scope: !2, file: !2, line: 1, type: !258, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !260)
  !258 = !DISubroutineType(types: !259)
  !259 = !{null}
  !260 = !{}
  !261 = !DILocalVariable(name: "Var62", scope: !257, file: !2, line: 1, type: !262)
  !262 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !263 = !DILocation(scope: !257)
  !264 = distinct !DISubprogram(name: "Fun63", scope: !2, file: !2, line: 1, type: !265, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !267)
  !265 = !DISubroutineType(types: !266)
  !266 = !{null}
  !267 = !{}
  !268 = !DILocalVariable(name: "Var63", scope: !264, file: !2, line: 1, type: !269)
  !269 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !270 = !DILocation(scope: !264)
  !271 = distinct !DISubprogram(name: "Fun64", scope: !2, file: !2, line: 1, type: !272, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !274)
  !272 = !DISubroutineType(types: !273)
  !273 = !{null}
  !274 = !{}
  !275 = !DILocalVariable(name: "Var64", scope: !271, file: !2, line: 1, type: !276)
  !276 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !277 = !DILocation(scope: !271)
  !278 = distinct !DISubprogram(name: "Fun65", scope: !2, file: !2, line: 1, type: !279, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !281)
  !279 = !DISubroutineType(types: !280)
  !280 = !{null}
  !281 = !{}
  !282 = !DILocalVariable(name: "Var65", scope: !278, file: !2, line: 1, type: !283)
  !283 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !284 = !DILocation(scope: !278)
  !285 = distinct !DISubprogram(name: "Fun66", scope: !2, file: !2, line: 1, type: !286, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !288)
  !286 = !DISubroutineType(types: !287)
  !287 = !{null}
  !288 = !{}
  !289 = !DILocalVariable(name: "Var66", scope: !285, file: !2, line: 1, type: !290)
  !290 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !291 = !DILocation(scope: !285)
  !292 = distinct !DISubprogram(name: "Fun67", scope: !2, file: !2, line: 1, type: !293, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !295)
  !293 = !DISubroutineType(types: !294)
  !294 = !{null}
  !295 = !{}
  !296 = !DILocalVariable(name: "Var67", scope: !292, file: !2, line: 1, type: !297)
  !297 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !298 = !DILocation(scope: !292)
  !299 = distinct !DISubprogram(name: "Fun68", scope: !2, file: !2, line: 1, type: !300, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !302)
  !300 = !DISubroutineType(types: !301)
  !301 = !{null}
  !302 = !{}
  !303 = !DILocalVariable(name: "Var68", scope: !299, file: !2, line: 1, type: !304)
  !304 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !305 = !DILocation(scope: !299)
  !306 = distinct !DISubprogram(name: "Fun69", scope: !2, file: !2, line: 1, type: !307, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !309)
  !307 = !DISubroutineType(types: !308)
  !308 = !{null}
  !309 = !{}
  !310 = !DILocalVariable(name: "Var69", scope: !306, file: !2, line: 1, type: !311)
  !311 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !312 = !DILocation(scope: !306)
  !313 = distinct !DISubprogram(name: "Fun70", scope: !2, file: !2, line: 1, type: !314, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !316)
  !314 = !DISubroutineType(types: !315)
  !315 = !{null}
  !316 = !{}
  !317 = !DILocalVariable(name: "Var70", scope: !313, file: !2, line: 1, type: !318)
  !318 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !319 = !DILocation(scope: !313)
  !320 = distinct !DISubprogram(name: "Fun71", scope: !2, file: !2, line: 1, type: !321, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !323)
  !321 = !DISubroutineType(types: !322)
  !322 = !{null}
  !323 = !{}
  !324 = !DILocalVariable(name: "Var71", scope: !320, file: !2, line: 1, type: !325)
  !325 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !326 = !DILocation(scope: !320)
  !327 = distinct !DISubprogram(name: "Fun72", scope: !2, file: !2, line: 1, type: !328, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !330)
  !328 = !DISubroutineType(types: !329)
  !329 = !{null}
  !330 = !{}
  !331 = !DILocalVariable(name: "Var72", scope: !327, file: !2, line: 1, type: !332)
  !332 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !333 = !DILocation(scope: !327)
  !334 = distinct !DISubprogram(name: "Fun73", scope: !2, file: !2, line: 1, type: !335, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !337)
  !335 = !DISubroutineType(types: !336)
  !336 = !{null}
  !337 = !{}
  !338 = !DILocalVariable(name: "Var73", scope: !334, file: !2, line: 1, type: !339)
  !339 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !340 = !DILocation(scope: !334)
  !341 = distinct !DISubprogram(name: "Fun74", scope: !2, file: !2, line: 1, type: !342, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !344)
  !342 = !DISubroutineType(types: !343)
  !343 = !{null}
  !344 = !{}
  !345 = !DILocalVariable(name: "Var74", scope: !341, file: !2, line: 1, type: !346)
  !346 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !347 = !DILocation(scope: !341)
  !348 = distinct !DISubprogram(name: "Fun75", scope: !2, file: !2, line: 1, type: !349, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !351)
  !349 = !DISubroutineType(types: !350)
  !350 = !{null}
  !351 = !{}
  !352 = !DILocalVariable(name: "Var75", scope: !348, file: !2, line: 1, type: !353)
  !353 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !354 = !DILocation(scope: !348)
  !355 = distinct !DISubprogram(name: "Fun76", scope: !2, file: !2, line: 1, type: !356, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !358)
  !356 = !DISubroutineType(types: !357)
  !357 = !{null}
  !358 = !{}
  !359 = !DILocalVariable(name: "Var76", scope: !355, file: !2, line: 1, type: !360)
  !360 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !361 = !DILocation(scope: !355)
  !362 = distinct !DISubprogram(name: "Fun77", scope: !2, file: !2, line: 1, type: !363, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !365)
  !363 = !DISubroutineType(types: !364)
  !364 = !{null}
  !365 = !{}
  !366 = !DILocalVariable(name: "Var77", scope: !362, file: !2, line: 1, type: !367)
  !367 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !368 = !DILocation(scope: !362)
  !369 = distinct !DISubprogram(name: "Fun78", scope: !2, file: !2, line: 1, type: !370, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !372)
  !370 = !DISubroutineType(types: !371)
  !371 = !{null}
  !372 = !{}
  !373 = !DILocalVariable(name: "Var78", scope: !369, file: !2, line: 1, type: !374)
  !374 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !375 = !DILocation(scope: !369)
  !376 = distinct !DISubprogram(name: "Fun79", scope: !2, file: !2, line: 1, type: !377, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !379)
  !377 = !DISubroutineType(types: !378)
  !378 = !{null}
  !379 = !{}
  !380 = !DILocalVariable(name: "Var79", scope: !376, file: !2, line: 1, type: !381)
  !381 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !382 = !DILocation(scope: !376)
  !383 = distinct !DISubprogram(name: "Fun80", scope: !2, file: !2, line: 1, type: !384, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !386)
  !384 = !DISubroutineType(types: !385)
  !385 = !{null}
  !386 = !{}
  !387 = !DILocalVariable(name: "Var80", scope: !383, file: !2, line: 1, type: !388)
  !388 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !389 = !DILocation(scope: !383)
  !390 = distinct !DISubprogram(name: "Fun81", scope: !2, file: !2, line: 1, type: !391, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !393)
  !391 = !DISubroutineType(types: !392)
  !392 = !{null}
  !393 = !{}
  !394 = !DILocalVariable(name: "Var81", scope: !390, file: !2, line: 1, type: !395)
  !395 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !396 = !DILocation(scope: !390)
  !397 = distinct !DISubprogram(name: "Fun82", scope: !2, file: !2, line: 1, type: !398, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !400)
  !398 = !DISubroutineType(types: !399)
  !399 = !{null}
  !400 = !{}
  !401 = !DILocalVariable(name: "Var82", scope: !397, file: !2, line: 1, type: !402)
  !402 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !403 = !DILocation(scope: !397)
  !404 = distinct !DISubprogram(name: "Fun83", scope: !2, file: !2, line: 1, type: !405, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !407)
  !405 = !DISubroutineType(types: !406)
  !406 = !{null}
  !407 = !{}
  !408 = !DILocalVariable(name: "Var83", scope: !404, file: !2, line: 1, type: !409)
  !409 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !410 = !DILocation(scope: !404)
  !411 = distinct !DISubprogram(name: "Fun84", scope: !2, file: !2, line: 1, type: !412, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !414)
  !412 = !DISubroutineType(types: !413)
  !413 = !{null}
  !414 = !{}
  !415 = !DILocalVariable(name: "Var84", scope: !411, file: !2, line: 1, type: !416)
  !416 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !417 = !DILocation(scope: !411)
  !418 = distinct !DISubprogram(name: "Fun85", scope: !2, file: !2, line: 1, type: !419, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !421)
  !419 = !DISubroutineType(types: !420)
  !420 = !{null}
  !421 = !{}
  !422 = !DILocalVariable(name: "Var85", scope: !418, file: !2, line: 1, type: !423)
  !423 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !424 = !DILocation(scope: !418)
  !425 = distinct !DISubprogram(name: "Fun86", scope: !2, file: !2, line: 1, type: !426, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !428)
  !426 = !DISubroutineType(types: !427)
  !427 = !{null}
  !428 = !{}
  !429 = !DILocalVariable(name: "Var86", scope: !425, file: !2, line: 1, type: !430)
  !430 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !431 = !DILocation(scope: !425)
  !432 = distinct !DISubprogram(name: "Fun87", scope: !2, file: !2, line: 1, type: !433, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !435)
  !433 = !DISubroutineType(types: !434)
  !434 = !{null}
  !435 = !{}
  !436 = !DILocalVariable(name: "Var87", scope: !432, file: !2, line: 1, type: !437)
  !437 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !438 = !DILocation(scope: !432)
  !439 = distinct !DISubprogram(name: "Fun88", scope: !2, file: !2, line: 1, type: !440, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !442)
  !440 = !DISubroutineType(types: !441)
  !441 = !{null}
  !442 = !{}
  !443 = !DILocalVariable(name: "Var88", scope: !439, file: !2, line: 1, type: !444)
  !444 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !445 = !DILocation(scope: !439)
  !446 = distinct !DISubprogram(name: "Fun89", scope: !2, file: !2, line: 1, type: !447, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !449)
  !447 = !DISubroutineType(types: !448)
  !448 = !{null}
  !449 = !{}
  !450 = !DILocalVariable(name: "Var89", scope: !446, file: !2, line: 1, type: !451)
  !451 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !452 = !DILocation(scope: !446)
  !453 = distinct !DISubprogram(name: "Fun90", scope: !2, file: !2, line: 1, type: !454, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !456)
  !454 = !DISubroutineType(types: !455)
  !455 = !{null}
  !456 = !{}
  !457 = !DILocalVariable(name: "Var90", scope: !453, file: !2, line: 1, type: !458)
  !458 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !459 = !DILocation(scope: !453)
  !460 = distinct !DISubprogram(name: "Fun91", scope: !2, file: !2, line: 1, type: !461, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !463)
  !461 = !DISubroutineType(types: !462)
  !462 = !{null}
  !463 = !{}
  !464 = !DILocalVariable(name: "Var91", scope: !460, file: !2, line: 1, type: !465)
  !465 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !466 = !DILocation(scope: !460)
  !467 = distinct !DISubprogram(name: "Fun92", scope: !2, file: !2, line: 1, type: !468, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !470)
  !468 = !DISubroutineType(types: !469)
  !469 = !{null}
  !470 = !{}
  !471 = !DILocalVariable(name: "Var92", scope: !467, file: !2, line: 1, type: !472)
  !472 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !473 = !DILocation(scope: !467)
  !474 = distinct !DISubprogram(name: "Fun93", scope: !2, file: !2, line: 1, type: !475, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !477)
  !475 = !DISubroutineType(types: !476)
  !476 = !{null}
  !477 = !{}
  !478 = !DILocalVariable(name: "Var93", scope: !474, file: !2, line: 1, type: !479)
  !479 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !480 = !DILocation(scope: !474)
  !481 = distinct !DISubprogram(name: "Fun94", scope: !2, file: !2, line: 1, type: !482, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !484)
  !482 = !DISubroutineType(types: !483)
  !483 = !{null}
  !484 = !{}
  !485 = !DILocalVariable(name: "Var94", scope: !481, file: !2, line: 1, type: !486)
  !486 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !487 = !DILocation(scope: !481)
  !488 = distinct !DISubprogram(name: "Fun95", scope: !2, file: !2, line: 1, type: !489, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !491)
  !489 = !DISubroutineType(types: !490)
  !490 = !{null}
  !491 = !{}
  !492 = !DILocalVariable(name: "Var95", scope: !488, file: !2, line: 1, type: !493)
  !493 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !494 = !DILocation(scope: !488)
  !495 = distinct !DISubprogram(name: "Fun96", scope: !2, file: !2, line: 1, type: !496, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !498)
  !496 = !DISubroutineType(types: !497)
  !497 = !{null}
  !498 = !{}
  !499 = !DILocalVariable(name: "Var96", scope: !495, file: !2, line: 1, type: !500)
  !500 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !501 = !DILocation(scope: !495)
  !502 = distinct !DISubprogram(name: "Fun97", scope: !2, file: !2, line: 1, type: !503, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !505)
  !503 = !DISubroutineType(types: !504)
  !504 = !{null}
  !505 = !{}
  !506 = !DILocalVariable(name: "Var97", scope: !502, file: !2, line: 1, type: !507)
  !507 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !508 = !DILocation(scope: !502)
  !509 = distinct !DISubprogram(name: "Fun98", scope: !2, file: !2, line: 1, type: !510, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !512)
  !510 = !DISubroutineType(types: !511)
  !511 = !{null}
  !512 = !{}
  !513 = !DILocalVariable(name: "Var98", scope: !509, file: !2, line: 1, type: !514)
  !514 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !515 = !DILocation(scope: !509)
  !516 = distinct !DISubprogram(name: "Fun99", scope: !2, file: !2, line: 1, type: !517, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !519)
  !517 = !DISubroutineType(types: !518)
  !518 = !{null}
  !519 = !{}
  !520 = !DILocalVariable(name: "Var99", scope: !516, file: !2, line: 1, type: !521)
  !521 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !522 = !DILocation(scope: !516)
  !523 = distinct !DISubprogram(name: "Fun100", scope: !2, file: !2, line: 1, type: !524, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !526)
  !524 = !DISubroutineType(types: !525)
  !525 = !{null}
  !526 = !{}
  !527 = !DILocalVariable(name: "Var100", scope: !523, file: !2, line: 1, type: !528)
  !528 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !529 = !DILocation(scope: !523)
  !530 = distinct !DISubprogram(name: "Fun101", scope: !2, file: !2, line: 1, type: !531, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !533)
  !531 = !DISubroutineType(types: !532)
  !532 = !{null}
  !533 = !{}
  !534 = !DILocalVariable(name: "Var101", scope: !530, file: !2, line: 1, type: !535)
  !535 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !536 = !DILocation(scope: !530)
  !537 = distinct !DISubprogram(name: "Fun102", scope: !2, file: !2, line: 1, type: !538, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !540)
  !538 = !DISubroutineType(types: !539)
  !539 = !{null}
  !540 = !{}
  !541 = !DILocalVariable(name: "Var102", scope: !537, file: !2, line: 1, type: !542)
  !542 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !543 = !DILocation(scope: !537)
  !544 = distinct !DISubprogram(name: "Fun103", scope: !2, file: !2, line: 1, type: !545, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !547)
  !545 = !DISubroutineType(types: !546)
  !546 = !{null}
  !547 = !{}
  !548 = !DILocalVariable(name: "Var103", scope: !544, file: !2, line: 1, type: !549)
  !549 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !550 = !DILocation(scope: !544)
  
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -1)
# CHECK-NEXT: DW_AT_name ("Var26")
---
name:            Fun26
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var26, type: default, offset: 0, size: 1, alignment: 1,
      debug-info-variable: '!9', debug-info-expression: '!DIExpression()',
      debug-info-location: '!11' }
body:             |
  bb.0.entry:
    RET64 debug-location !11
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -1, DW_OP_deref)
# CHECK-NEXT: DW_AT_name ("Var27")
---
name:            Fun27
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var27, type: default, offset: 0, size: 1, alignment: 1,
      debug-info-variable: '!16', debug-info-expression: '!DIExpression(DW_OP_deref)',
      debug-info-location: '!18' }
body:             |
  bb.0.entry:
    RET64 debug-location !18
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -1, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var28")
---
name:            Fun28
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var28, type: default, offset: 0, size: 1, alignment: 1,
      debug-info-variable: '!23', debug-info-expression: '!DIExpression(DW_OP_stack_value)',
      debug-info-location: '!25' }
body:             |
  bb.0.entry:
    RET64 debug-location !25
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -1, DW_OP_deref, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var29")
---
name:            Fun29
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var29, type: default, offset: 0, size: 1, alignment: 1,
      debug-info-variable: '!30', debug-info-expression: '!DIExpression(DW_OP_deref, DW_OP_stack_value)',
      debug-info-location: '!32' }
body:             |
  bb.0.entry:
    RET64 debug-location !32
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -1)
# CHECK-NEXT: DW_AT_name ("Var30")
---
name:            Fun30
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var30, type: default, offset: 0, size: 1, alignment: 1,
      debug-info-variable: '!37', debug-info-expression: '!DIExpression()',
      debug-info-location: '!39' }
body:             |
  bb.0.entry:
    RET64 debug-location !39
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -1, DW_OP_deref)
# CHECK-NEXT: DW_AT_name ("Var31")
---
name:            Fun31
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var31, type: default, offset: 0, size: 1, alignment: 1,
      debug-info-variable: '!44', debug-info-expression: '!DIExpression(DW_OP_deref)',
      debug-info-location: '!46' }
body:             |
  bb.0.entry:
    RET64 debug-location !46
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -1, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var32")
---
name:            Fun32
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var32, type: default, offset: 0, size: 1, alignment: 1,
      debug-info-variable: '!51', debug-info-expression: '!DIExpression(DW_OP_stack_value)',
      debug-info-location: '!53' }
body:             |
  bb.0.entry:
    RET64 debug-location !53
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -1, DW_OP_deref, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var33")
---
name:            Fun33
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var33, type: default, offset: 0, size: 1, alignment: 1,
      debug-info-variable: '!58', debug-info-expression: '!DIExpression(DW_OP_deref, DW_OP_stack_value)',
      debug-info-location: '!60' }
body:             |
  bb.0.entry:
    RET64 debug-location !60
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -1)
# CHECK-NEXT: DW_AT_name ("Var34")
---
name:            Fun34
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var34, type: default, offset: 0, size: 1, alignment: 1,
      debug-info-variable: '!65', debug-info-expression: '!DIExpression()',
      debug-info-location: '!67' }
body:             |
  bb.0.entry:
    RET64 debug-location !67
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -1, DW_OP_deref)
# CHECK-NEXT: DW_AT_name ("Var35")
---
name:            Fun35
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var35, type: default, offset: 0, size: 1, alignment: 1,
      debug-info-variable: '!72', debug-info-expression: '!DIExpression(DW_OP_deref)',
      debug-info-location: '!74' }
body:             |
  bb.0.entry:
    RET64 debug-location !74
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -1, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var36")
---
name:            Fun36
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var36, type: default, offset: 0, size: 1, alignment: 1,
      debug-info-variable: '!79', debug-info-expression: '!DIExpression(DW_OP_stack_value)',
      debug-info-location: '!81' }
body:             |
  bb.0.entry:
    RET64 debug-location !81
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -1, DW_OP_deref, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var37")
---
name:            Fun37
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var37, type: default, offset: 0, size: 1, alignment: 1,
      debug-info-variable: '!86', debug-info-expression: '!DIExpression(DW_OP_deref, DW_OP_stack_value)',
      debug-info-location: '!88' }
body:             |
  bb.0.entry:
    RET64 debug-location !88
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -2)
# CHECK-NEXT: DW_AT_name ("Var38")
---
name:            Fun38
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var38, type: default, offset: 0, size: 2, alignment: 2,
      debug-info-variable: '!93', debug-info-expression: '!DIExpression()',
      debug-info-location: '!95' }
body:             |
  bb.0.entry:
    RET64 debug-location !95
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -2, DW_OP_deref)
# CHECK-NEXT: DW_AT_name ("Var39")
---
name:            Fun39
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var39, type: default, offset: 0, size: 2, alignment: 2,
      debug-info-variable: '!100', debug-info-expression: '!DIExpression(DW_OP_deref)',
      debug-info-location: '!102' }
body:             |
  bb.0.entry:
    RET64 debug-location !102
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -2, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var40")
---
name:            Fun40
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var40, type: default, offset: 0, size: 2, alignment: 2,
      debug-info-variable: '!107', debug-info-expression: '!DIExpression(DW_OP_stack_value)',
      debug-info-location: '!109' }
body:             |
  bb.0.entry:
    RET64 debug-location !109
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -2, DW_OP_deref, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var41")
---
name:            Fun41
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var41, type: default, offset: 0, size: 2, alignment: 2,
      debug-info-variable: '!114', debug-info-expression: '!DIExpression(DW_OP_deref, DW_OP_stack_value)',
      debug-info-location: '!116' }
body:             |
  bb.0.entry:
    RET64 debug-location !116
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -4)
# CHECK-NEXT: DW_AT_name ("Var42")
---
name:            Fun42
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var42, type: default, offset: 0, size: 3, alignment: 4,
      debug-info-variable: '!121', debug-info-expression: '!DIExpression()',
      debug-info-location: '!123' }
body:             |
  bb.0.entry:
    RET64 debug-location !123
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -4, DW_OP_deref)
# CHECK-NEXT: DW_AT_name ("Var43")
---
name:            Fun43
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var43, type: default, offset: 0, size: 3, alignment: 4,
      debug-info-variable: '!128', debug-info-expression: '!DIExpression(DW_OP_deref)',
      debug-info-location: '!130' }
body:             |
  bb.0.entry:
    RET64 debug-location !130
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -4, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var44")
---
name:            Fun44
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var44, type: default, offset: 0, size: 3, alignment: 4,
      debug-info-variable: '!135', debug-info-expression: '!DIExpression(DW_OP_stack_value)',
      debug-info-location: '!137' }
body:             |
  bb.0.entry:
    RET64 debug-location !137
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -4, DW_OP_deref, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var45")
---
name:            Fun45
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var45, type: default, offset: 0, size: 3, alignment: 4,
      debug-info-variable: '!142', debug-info-expression: '!DIExpression(DW_OP_deref, DW_OP_stack_value)',
      debug-info-location: '!144' }
body:             |
  bb.0.entry:
    RET64 debug-location !144
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -4)
# CHECK-NEXT: DW_AT_name ("Var46")
---
name:            Fun46
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var46, type: default, offset: 0, size: 4, alignment: 4,
      debug-info-variable: '!149', debug-info-expression: '!DIExpression()',
      debug-info-location: '!151' }
body:             |
  bb.0.entry:
    RET64 debug-location !151
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -4, DW_OP_deref)
# CHECK-NEXT: DW_AT_name ("Var47")
---
name:            Fun47
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var47, type: default, offset: 0, size: 4, alignment: 4,
      debug-info-variable: '!156', debug-info-expression: '!DIExpression(DW_OP_deref)',
      debug-info-location: '!158' }
body:             |
  bb.0.entry:
    RET64 debug-location !158
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -4, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var48")
---
name:            Fun48
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var48, type: default, offset: 0, size: 4, alignment: 4,
      debug-info-variable: '!163', debug-info-expression: '!DIExpression(DW_OP_stack_value)',
      debug-info-location: '!165' }
body:             |
  bb.0.entry:
    RET64 debug-location !165
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -4, DW_OP_deref, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var49")
---
name:            Fun49
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var49, type: default, offset: 0, size: 4, alignment: 4,
      debug-info-variable: '!170', debug-info-expression: '!DIExpression(DW_OP_deref, DW_OP_stack_value)',
      debug-info-location: '!172' }
body:             |
  bb.0.entry:
    RET64 debug-location !172
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -8)
# CHECK-NEXT: DW_AT_name ("Var50")
---
name:            Fun50
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var50, type: default, offset: 0, size: 8, alignment: 8,
      debug-info-variable: '!177', debug-info-expression: '!DIExpression()',
      debug-info-location: '!179' }
body:             |
  bb.0.entry:
    RET64 debug-location !179
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -8, DW_OP_deref)
# CHECK-NEXT: DW_AT_name ("Var51")
---
name:            Fun51
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var51, type: default, offset: 0, size: 8, alignment: 8,
      debug-info-variable: '!184', debug-info-expression: '!DIExpression(DW_OP_deref)',
      debug-info-location: '!186' }
body:             |
  bb.0.entry:
    RET64 debug-location !186
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -8, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var52")
---
name:            Fun52
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var52, type: default, offset: 0, size: 8, alignment: 8,
      debug-info-variable: '!191', debug-info-expression: '!DIExpression(DW_OP_stack_value)',
      debug-info-location: '!193' }
body:             |
  bb.0.entry:
    RET64 debug-location !193
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -8, DW_OP_deref, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var53")
---
name:            Fun53
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var53, type: default, offset: 0, size: 8, alignment: 8,
      debug-info-variable: '!198', debug-info-expression: '!DIExpression(DW_OP_deref, DW_OP_stack_value)',
      debug-info-location: '!200' }
body:             |
  bb.0.entry:
    RET64 debug-location !200
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -16)
# CHECK-NEXT: DW_AT_name ("Var54")
---
name:            Fun54
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var54, type: default, offset: 0, size: 16, alignment: 16,
      debug-info-variable: '!205', debug-info-expression: '!DIExpression()',
      debug-info-location: '!207' }
body:             |
  bb.0.entry:
    RET64 debug-location !207
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -16, DW_OP_deref)
# CHECK-NEXT: DW_AT_name ("Var55")
---
name:            Fun55
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var55, type: default, offset: 0, size: 16, alignment: 16,
      debug-info-variable: '!212', debug-info-expression: '!DIExpression(DW_OP_deref)',
      debug-info-location: '!214' }
body:             |
  bb.0.entry:
    RET64 debug-location !214
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -16, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var56")
---
name:            Fun56
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var56, type: default, offset: 0, size: 16, alignment: 16,
      debug-info-variable: '!219', debug-info-expression: '!DIExpression(DW_OP_stack_value)',
      debug-info-location: '!221' }
body:             |
  bb.0.entry:
    RET64 debug-location !221
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -16, DW_OP_deref, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var57")
---
name:            Fun57
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var57, type: default, offset: 0, size: 16, alignment: 16,
      debug-info-variable: '!226', debug-info-expression: '!DIExpression(DW_OP_deref, DW_OP_stack_value)',
      debug-info-location: '!228' }
body:             |
  bb.0.entry:
    RET64 debug-location !228
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -2)
# CHECK-NEXT: DW_AT_name ("Var58")
---
name:            Fun58
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var58, type: default, offset: 0, size: 2, alignment: 2,
      debug-info-variable: '!233', debug-info-expression: '!DIExpression()',
      debug-info-location: '!235' }
body:             |
  bb.0.entry:
    RET64 debug-location !235
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -2, DW_OP_deref)
# CHECK-NEXT: DW_AT_name ("Var59")
---
name:            Fun59
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var59, type: default, offset: 0, size: 2, alignment: 2,
      debug-info-variable: '!240', debug-info-expression: '!DIExpression(DW_OP_deref)',
      debug-info-location: '!242' }
body:             |
  bb.0.entry:
    RET64 debug-location !242
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -2, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var60")
---
name:            Fun60
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var60, type: default, offset: 0, size: 2, alignment: 2,
      debug-info-variable: '!247', debug-info-expression: '!DIExpression(DW_OP_stack_value)',
      debug-info-location: '!249' }
body:             |
  bb.0.entry:
    RET64 debug-location !249
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -2, DW_OP_deref, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var61")
---
name:            Fun61
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var61, type: default, offset: 0, size: 2, alignment: 2,
      debug-info-variable: '!254', debug-info-expression: '!DIExpression(DW_OP_deref, DW_OP_stack_value)',
      debug-info-location: '!256' }
body:             |
  bb.0.entry:
    RET64 debug-location !256
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -2)
# CHECK-NEXT: DW_AT_name ("Var62")
---
name:            Fun62
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var62, type: default, offset: 0, size: 2, alignment: 2,
      debug-info-variable: '!261', debug-info-expression: '!DIExpression()',
      debug-info-location: '!263' }
body:             |
  bb.0.entry:
    RET64 debug-location !263
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -2, DW_OP_deref)
# CHECK-NEXT: DW_AT_name ("Var63")
---
name:            Fun63
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var63, type: default, offset: 0, size: 2, alignment: 2,
      debug-info-variable: '!268', debug-info-expression: '!DIExpression(DW_OP_deref)',
      debug-info-location: '!270' }
body:             |
  bb.0.entry:
    RET64 debug-location !270
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -2, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var64")
---
name:            Fun64
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var64, type: default, offset: 0, size: 2, alignment: 2,
      debug-info-variable: '!275', debug-info-expression: '!DIExpression(DW_OP_stack_value)',
      debug-info-location: '!277' }
body:             |
  bb.0.entry:
    RET64 debug-location !277
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -2, DW_OP_deref, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var65")
---
name:            Fun65
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var65, type: default, offset: 0, size: 2, alignment: 2,
      debug-info-variable: '!282', debug-info-expression: '!DIExpression(DW_OP_deref, DW_OP_stack_value)',
      debug-info-location: '!284' }
body:             |
  bb.0.entry:
    RET64 debug-location !284
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -4)
# CHECK-NEXT: DW_AT_name ("Var66")
---
name:            Fun66
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var66, type: default, offset: 0, size: 4, alignment: 4,
      debug-info-variable: '!289', debug-info-expression: '!DIExpression()',
      debug-info-location: '!291' }
body:             |
  bb.0.entry:
    RET64 debug-location !291
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -4, DW_OP_deref)
# CHECK-NEXT: DW_AT_name ("Var67")
---
name:            Fun67
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var67, type: default, offset: 0, size: 4, alignment: 4,
      debug-info-variable: '!296', debug-info-expression: '!DIExpression(DW_OP_deref)',
      debug-info-location: '!298' }
body:             |
  bb.0.entry:
    RET64 debug-location !298
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -4, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var68")
---
name:            Fun68
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var68, type: default, offset: 0, size: 4, alignment: 4,
      debug-info-variable: '!303', debug-info-expression: '!DIExpression(DW_OP_stack_value)',
      debug-info-location: '!305' }
body:             |
  bb.0.entry:
    RET64 debug-location !305
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -4, DW_OP_deref, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var69")
---
name:            Fun69
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var69, type: default, offset: 0, size: 4, alignment: 4,
      debug-info-variable: '!310', debug-info-expression: '!DIExpression(DW_OP_deref, DW_OP_stack_value)',
      debug-info-location: '!312' }
body:             |
  bb.0.entry:
    RET64 debug-location !312
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -8)
# CHECK-NEXT: DW_AT_name ("Var70")
---
name:            Fun70
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var70, type: default, offset: 0, size: 8, alignment: 8,
      debug-info-variable: '!317', debug-info-expression: '!DIExpression()',
      debug-info-location: '!319' }
body:             |
  bb.0.entry:
    RET64 debug-location !319
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -8, DW_OP_deref)
# CHECK-NEXT: DW_AT_name ("Var71")
---
name:            Fun71
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var71, type: default, offset: 0, size: 8, alignment: 8,
      debug-info-variable: '!324', debug-info-expression: '!DIExpression(DW_OP_deref)',
      debug-info-location: '!326' }
body:             |
  bb.0.entry:
    RET64 debug-location !326
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -8, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var72")
---
name:            Fun72
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var72, type: default, offset: 0, size: 8, alignment: 8,
      debug-info-variable: '!331', debug-info-expression: '!DIExpression(DW_OP_stack_value)',
      debug-info-location: '!333' }
body:             |
  bb.0.entry:
    RET64 debug-location !333
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -8, DW_OP_deref, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var73")
---
name:            Fun73
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var73, type: default, offset: 0, size: 8, alignment: 8,
      debug-info-variable: '!338', debug-info-expression: '!DIExpression(DW_OP_deref, DW_OP_stack_value)',
      debug-info-location: '!340' }
body:             |
  bb.0.entry:
    RET64 debug-location !340
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -16)
# CHECK-NEXT: DW_AT_name ("Var74")
---
name:            Fun74
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var74, type: default, offset: 0, size: 16, alignment: 16,
      debug-info-variable: '!345', debug-info-expression: '!DIExpression()',
      debug-info-location: '!347' }
body:             |
  bb.0.entry:
    RET64 debug-location !347
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -16, DW_OP_deref)
# CHECK-NEXT: DW_AT_name ("Var75")
---
name:            Fun75
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var75, type: default, offset: 0, size: 16, alignment: 16,
      debug-info-variable: '!352', debug-info-expression: '!DIExpression(DW_OP_deref)',
      debug-info-location: '!354' }
body:             |
  bb.0.entry:
    RET64 debug-location !354
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -16, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var76")
---
name:            Fun76
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var76, type: default, offset: 0, size: 16, alignment: 16,
      debug-info-variable: '!359', debug-info-expression: '!DIExpression(DW_OP_stack_value)',
      debug-info-location: '!361' }
body:             |
  bb.0.entry:
    RET64 debug-location !361
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_fbreg -16, DW_OP_deref, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var77")
---
name:            Fun77
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var77, type: default, offset: 0, size: 16, alignment: 16,
      debug-info-variable: '!366', debug-info-expression: '!DIExpression(DW_OP_deref, DW_OP_stack_value)',
      debug-info-location: '!368' }
body:             |
  bb.0.entry:
    RET64 debug-location !368
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_reg0 RAX)
# CHECK-NEXT: DW_AT_name ("Var78")
---
name:            Fun78
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression()
    DBG_VALUE $rax, $noreg, !373, !DIExpression(), debug-location !375

    RET64 debug-location !375
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_breg0 RAX+0)
# CHECK-NEXT: DW_AT_name ("Var79")
---
name:            Fun79
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression(DW_OP_deref)
    DBG_VALUE $rax, $noreg, !380, !DIExpression(DW_OP_deref), debug-location !382

    RET64 debug-location !382
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_breg0 RAX+0, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var80")
---
name:            Fun80
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression(DW_OP_stack_value)
    DBG_VALUE $rax, $noreg, !387, !DIExpression(DW_OP_stack_value), debug-location !389

    RET64 debug-location !389
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_breg0 RAX+0, DW_OP_deref, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var81")
---
name:            Fun81
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression(DW_OP_deref, DW_OP_stack_value)
    DBG_VALUE $rax, $noreg, !394, !DIExpression(DW_OP_deref, DW_OP_stack_value), debug-location !396

    RET64 debug-location !396
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_reg0 RAX)
# CHECK-NEXT: DW_AT_name ("Var82")
---
name:            Fun82
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression()
    DBG_VALUE $ax, $noreg, !401, !DIExpression(), debug-location !403

    RET64 debug-location !403
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_breg0 RAX+0, DW_OP_constu 0xffff, DW_OP_and)
# CHECK-NEXT: DW_AT_name ("Var83")
---
name:            Fun83
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression(DW_OP_deref)
    DBG_VALUE $ax, $noreg, !408, !DIExpression(DW_OP_deref), debug-location !410

    RET64 debug-location !410
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_breg0 RAX+0, DW_OP_constu 0xffff, DW_OP_and, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var84")
---
name:            Fun84
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression(DW_OP_stack_value)
    DBG_VALUE $ax, $noreg, !415, !DIExpression(DW_OP_stack_value), debug-location !417

    RET64 debug-location !417
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_breg0 RAX+0, DW_OP_constu 0xffff, DW_OP_and, DW_OP_deref, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var85")
---
name:            Fun85
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression(DW_OP_deref, DW_OP_stack_value)
    DBG_VALUE $ax, $noreg, !422, !DIExpression(DW_OP_deref, DW_OP_stack_value), debug-location !424

    RET64 debug-location !424
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_breg0 RAX+0)
# CHECK-NEXT: DW_AT_name ("Var86")
---
name:            Fun86
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression()
    DBG_VALUE $ax, 0, !429, !DIExpression(), debug-location !431

    RET64 debug-location !431
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_breg0 RAX+0, DW_OP_constu 0xffff, DW_OP_and, DW_OP_deref)
# CHECK-NEXT: DW_AT_name ("Var87")
---
name:            Fun87
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression(DW_OP_deref)
    DBG_VALUE $ax, 0, !436, !DIExpression(DW_OP_deref), debug-location !438

    RET64 debug-location !438
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_breg0 RAX+0, DW_OP_constu 0xffff, DW_OP_and, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var88")
---
name:            Fun88
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression(DW_OP_stack_value)
    DBG_VALUE $ax, 0, !443, !DIExpression(DW_OP_stack_value), debug-location !445

    RET64 debug-location !445
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_breg0 RAX+0, DW_OP_constu 0xffff, DW_OP_and, DW_OP_deref, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var89")
---
name:            Fun89
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression(DW_OP_deref, DW_OP_stack_value)
    DBG_VALUE $ax, 0, !450, !DIExpression(DW_OP_deref, DW_OP_stack_value), debug-location !452

    RET64 debug-location !452
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_breg0 RAX+0)
# CHECK-NEXT: DW_AT_name ("Var90")
---
name:            Fun90
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression()
    DBG_VALUE $rax, 0, !457, !DIExpression(), debug-location !459

    RET64 debug-location !459
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_breg0 RAX+0, DW_OP_deref)
# CHECK-NEXT: DW_AT_name ("Var91")
---
name:            Fun91
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression(DW_OP_deref)
    DBG_VALUE $rax, 0, !464, !DIExpression(DW_OP_deref), debug-location !466

    RET64 debug-location !466
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_breg0 RAX+0, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var92")
---
name:            Fun92
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression(DW_OP_stack_value)
    DBG_VALUE $rax, 0, !471, !DIExpression(DW_OP_stack_value), debug-location !473

    RET64 debug-location !473
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_breg0 RAX+0, DW_OP_deref, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var93")
---
name:            Fun93
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression(DW_OP_deref, DW_OP_stack_value)
    DBG_VALUE $rax, 0, !478, !DIExpression(DW_OP_deref, DW_OP_stack_value), debug-location !480

    RET64 debug-location !480
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_const_value (42)
# CHECK-NEXT: DW_AT_name ("Var94")
---
name:            Fun94
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression()
    DBG_VALUE 42, $noreg, !485, !DIExpression(), debug-location !487

    RET64 debug-location !487
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_constu 0x2a)
# CHECK-NEXT: DW_AT_name ("Var95")
---
name:            Fun95
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression(DW_OP_deref)
    DBG_VALUE 42, $noreg, !492, !DIExpression(DW_OP_deref), debug-location !494

    RET64 debug-location !494
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_constu 0x2a, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var96")
---
name:            Fun96
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression(DW_OP_stack_value)
    DBG_VALUE 42, $noreg, !499, !DIExpression(DW_OP_stack_value), debug-location !501

    RET64 debug-location !501
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_constu 0x2a, DW_OP_deref, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var97")
---
name:            Fun97
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression(DW_OP_deref, DW_OP_stack_value)
    DBG_VALUE 42, $noreg, !506, !DIExpression(DW_OP_deref, DW_OP_stack_value), debug-location !508

    RET64 debug-location !508
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_const_value (42)
# CHECK-NEXT: DW_AT_name ("Var98")
---
name:            Fun98
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression()
    DBG_VALUE 42, 0, !513, !DIExpression(), debug-location !515

    RET64 debug-location !515
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_constu 0x2a)
# CHECK-NEXT: DW_AT_name ("Var99")
---
name:            Fun99
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression(DW_OP_deref)
    DBG_VALUE 42, 0, !520, !DIExpression(DW_OP_deref), debug-location !522

    RET64 debug-location !522
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_constu 0x2a, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var100")
---
name:            Fun100
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression(DW_OP_stack_value)
    DBG_VALUE 42, 0, !527, !DIExpression(DW_OP_stack_value), debug-location !529

    RET64 debug-location !529
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_constu 0x2a, DW_OP_deref, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var101")
---
name:            Fun101
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression(DW_OP_deref, DW_OP_stack_value)
    DBG_VALUE 42, 0, !534, !DIExpression(DW_OP_deref, DW_OP_stack_value), debug-location !536

    RET64 debug-location !536
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (indexed (0x[[#%x,]]) loclist = 0x[[#%x,]]:
# CHECK-NEXT: [0x[[#%x,]], 0x[[#%x,]]): DW_OP_reg0 RAX, DW_OP_piece 0x4, DW_OP_reg3 RBX, DW_OP_piece 0x4)
# CHECK-NEXT: DW_AT_name ("Var102")
---
name:            Fun102
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression(DW_OP_LLVM_fragment, 0, 32)
    DBG_VALUE $rax, $noreg, !541, !DIExpression(DW_OP_LLVM_fragment, 0, 32), debug-location !543
    ; !DIExpression(DW_OP_LLVM_fragment, 32, 32)
    DBG_VALUE $rbx, $noreg, !541, !DIExpression(DW_OP_LLVM_fragment, 32, 32), debug-location !543

    RET64 debug-location !543
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (indexed (0x[[#%x,]]) loclist = 0x[[#%x,]]:
# CHECK-NEXT: [0x[[#%x,]], 0x[[#%x,]]): DW_OP_breg0 RAX+0, DW_OP_piece 0x4, DW_OP_reg3 RBX, DW_OP_piece 0x4)
# CHECK-NEXT: DW_AT_name ("Var103")
---
name:            Fun103
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpression(DW_OP_LLVM_fragment, 0, 32)
    DBG_VALUE $rax, 0, !548, !DIExpression(DW_OP_LLVM_fragment, 0, 32), debug-location !550
    ; !DIExpression(DW_OP_LLVM_fragment, 32, 32)
    DBG_VALUE $rbx, $noreg, !548, !DIExpression(DW_OP_LLVM_fragment, 32, 32), debug-location !550

    RET64 debug-location !550
...

#--- heterogeneous_mir
# RUN: llc -x mir -O0 -start-after=x86-isel -filetype=obj < %t/heterogeneous_mir | llvm-dwarfdump --diff --debug-info -name Var* -regex - | FileCheck %t/heterogeneous_mir
--- |
  source_filename = "-"
  target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
  target triple = "x86_64-unknown-linux-gnu"
  
  define dso_local void @Fun104() #0 !dbg !5 {
  entry:
    %Var104 = alloca i1
    call void @llvm.dbg.def(metadata !12, metadata ptr %Var104), !dbg !11
    call void @Esc(ptr %Var104), !dbg !11
    ret void, !dbg !11
  }
  define dso_local void @Fun105() #0 !dbg !13 {
  entry:
    %Var105 = alloca i1
    call void @llvm.dbg.def(metadata !20, metadata ptr %Var105), !dbg !19
    call void @Esc(ptr %Var105), !dbg !19
    ret void, !dbg !19
  }
  define dso_local void @Fun106() #0 !dbg !21 {
  entry:
    %Var106 = alloca i1
    call void @llvm.dbg.def(metadata !28, metadata ptr %Var106), !dbg !27
    call void @Esc(ptr %Var106), !dbg !27
    ret void, !dbg !27
  }
  define dso_local void @Fun107() #0 !dbg !29 {
  entry:
    %Var107 = alloca i1
    call void @llvm.dbg.def(metadata !36, metadata ptr %Var107), !dbg !35
    call void @Esc(ptr %Var107), !dbg !35
    ret void, !dbg !35
  }
  define dso_local void @Fun108() #0 !dbg !37 {
  entry:
    %Var108 = alloca i4
    call void @llvm.dbg.def(metadata !44, metadata ptr %Var108), !dbg !43
    call void @Esc(ptr %Var108), !dbg !43
    ret void, !dbg !43
  }
  define dso_local void @Fun109() #0 !dbg !45 {
  entry:
    %Var109 = alloca i4
    call void @llvm.dbg.def(metadata !52, metadata ptr %Var109), !dbg !51
    call void @Esc(ptr %Var109), !dbg !51
    ret void, !dbg !51
  }
  define dso_local void @Fun110() #0 !dbg !53 {
  entry:
    %Var110 = alloca i4
    call void @llvm.dbg.def(metadata !60, metadata ptr %Var110), !dbg !59
    call void @Esc(ptr %Var110), !dbg !59
    ret void, !dbg !59
  }
  define dso_local void @Fun111() #0 !dbg !61 {
  entry:
    %Var111 = alloca i4
    call void @llvm.dbg.def(metadata !68, metadata ptr %Var111), !dbg !67
    call void @Esc(ptr %Var111), !dbg !67
    ret void, !dbg !67
  }
  define dso_local void @Fun112() #0 !dbg !69 {
  entry:
    %Var112 = alloca i8
    call void @llvm.dbg.def(metadata !76, metadata ptr %Var112), !dbg !75
    call void @Esc(ptr %Var112), !dbg !75
    ret void, !dbg !75
  }
  define dso_local void @Fun113() #0 !dbg !77 {
  entry:
    %Var113 = alloca i8
    call void @llvm.dbg.def(metadata !84, metadata ptr %Var113), !dbg !83
    call void @Esc(ptr %Var113), !dbg !83
    ret void, !dbg !83
  }
  define dso_local void @Fun114() #0 !dbg !85 {
  entry:
    %Var114 = alloca i8
    call void @llvm.dbg.def(metadata !92, metadata ptr %Var114), !dbg !91
    call void @Esc(ptr %Var114), !dbg !91
    ret void, !dbg !91
  }
  define dso_local void @Fun115() #0 !dbg !93 {
  entry:
    %Var115 = alloca i8
    call void @llvm.dbg.def(metadata !100, metadata ptr %Var115), !dbg !99
    call void @Esc(ptr %Var115), !dbg !99
    ret void, !dbg !99
  }
  define dso_local void @Fun116() #0 !dbg !101 {
  entry:
    %Var116 = alloca i16
    call void @llvm.dbg.def(metadata !108, metadata ptr %Var116), !dbg !107
    call void @Esc(ptr %Var116), !dbg !107
    ret void, !dbg !107
  }
  define dso_local void @Fun117() #0 !dbg !109 {
  entry:
    %Var117 = alloca i16
    call void @llvm.dbg.def(metadata !116, metadata ptr %Var117), !dbg !115
    call void @Esc(ptr %Var117), !dbg !115
    ret void, !dbg !115
  }
  define dso_local void @Fun118() #0 !dbg !117 {
  entry:
    %Var118 = alloca i16
    call void @llvm.dbg.def(metadata !124, metadata ptr %Var118), !dbg !123
    call void @Esc(ptr %Var118), !dbg !123
    ret void, !dbg !123
  }
  define dso_local void @Fun119() #0 !dbg !125 {
  entry:
    %Var119 = alloca i16
    call void @llvm.dbg.def(metadata !132, metadata ptr %Var119), !dbg !131
    call void @Esc(ptr %Var119), !dbg !131
    ret void, !dbg !131
  }
  define dso_local void @Fun120() #0 !dbg !133 {
  entry:
    %Var120 = alloca i17
    call void @llvm.dbg.def(metadata !140, metadata ptr %Var120), !dbg !139
    call void @Esc(ptr %Var120), !dbg !139
    ret void, !dbg !139
  }
  define dso_local void @Fun121() #0 !dbg !141 {
  entry:
    %Var121 = alloca i17
    call void @llvm.dbg.def(metadata !148, metadata ptr %Var121), !dbg !147
    call void @Esc(ptr %Var121), !dbg !147
    ret void, !dbg !147
  }
  define dso_local void @Fun122() #0 !dbg !149 {
  entry:
    %Var122 = alloca i17
    call void @llvm.dbg.def(metadata !156, metadata ptr %Var122), !dbg !155
    call void @Esc(ptr %Var122), !dbg !155
    ret void, !dbg !155
  }
  define dso_local void @Fun123() #0 !dbg !157 {
  entry:
    %Var123 = alloca i17
    call void @llvm.dbg.def(metadata !164, metadata ptr %Var123), !dbg !163
    call void @Esc(ptr %Var123), !dbg !163
    ret void, !dbg !163
  }
  define dso_local void @Fun124() #0 !dbg !165 {
  entry:
    %Var124 = alloca i32
    call void @llvm.dbg.def(metadata !172, metadata ptr %Var124), !dbg !171
    call void @Esc(ptr %Var124), !dbg !171
    ret void, !dbg !171
  }
  define dso_local void @Fun125() #0 !dbg !173 {
  entry:
    %Var125 = alloca i32
    call void @llvm.dbg.def(metadata !180, metadata ptr %Var125), !dbg !179
    call void @Esc(ptr %Var125), !dbg !179
    ret void, !dbg !179
  }
  define dso_local void @Fun126() #0 !dbg !181 {
  entry:
    %Var126 = alloca i32
    call void @llvm.dbg.def(metadata !188, metadata ptr %Var126), !dbg !187
    call void @Esc(ptr %Var126), !dbg !187
    ret void, !dbg !187
  }
  define dso_local void @Fun127() #0 !dbg !189 {
  entry:
    %Var127 = alloca i32
    call void @llvm.dbg.def(metadata !196, metadata ptr %Var127), !dbg !195
    call void @Esc(ptr %Var127), !dbg !195
    ret void, !dbg !195
  }
  define dso_local void @Fun128() #0 !dbg !197 {
  entry:
    %Var128 = alloca i64
    call void @llvm.dbg.def(metadata !204, metadata ptr %Var128), !dbg !203
    call void @Esc(ptr %Var128), !dbg !203
    ret void, !dbg !203
  }
  define dso_local void @Fun129() #0 !dbg !205 {
  entry:
    %Var129 = alloca i64
    call void @llvm.dbg.def(metadata !212, metadata ptr %Var129), !dbg !211
    call void @Esc(ptr %Var129), !dbg !211
    ret void, !dbg !211
  }
  define dso_local void @Fun130() #0 !dbg !213 {
  entry:
    %Var130 = alloca i64
    call void @llvm.dbg.def(metadata !220, metadata ptr %Var130), !dbg !219
    call void @Esc(ptr %Var130), !dbg !219
    ret void, !dbg !219
  }
  define dso_local void @Fun131() #0 !dbg !221 {
  entry:
    %Var131 = alloca i64
    call void @llvm.dbg.def(metadata !228, metadata ptr %Var131), !dbg !227
    call void @Esc(ptr %Var131), !dbg !227
    ret void, !dbg !227
  }
  define dso_local void @Fun132() #0 !dbg !229 {
  entry:
    %Var132 = alloca i128
    call void @llvm.dbg.def(metadata !236, metadata ptr %Var132), !dbg !235
    call void @Esc(ptr %Var132), !dbg !235
    ret void, !dbg !235
  }
  define dso_local void @Fun133() #0 !dbg !237 {
  entry:
    %Var133 = alloca i128
    call void @llvm.dbg.def(metadata !244, metadata ptr %Var133), !dbg !243
    call void @Esc(ptr %Var133), !dbg !243
    ret void, !dbg !243
  }
  define dso_local void @Fun134() #0 !dbg !245 {
  entry:
    %Var134 = alloca i128
    call void @llvm.dbg.def(metadata !252, metadata ptr %Var134), !dbg !251
    call void @Esc(ptr %Var134), !dbg !251
    ret void, !dbg !251
  }
  define dso_local void @Fun135() #0 !dbg !253 {
  entry:
    %Var135 = alloca i128
    call void @llvm.dbg.def(metadata !260, metadata ptr %Var135), !dbg !259
    call void @Esc(ptr %Var135), !dbg !259
    ret void, !dbg !259
  }
  define dso_local void @Fun136() #0 !dbg !261 {
  entry:
    %Var136 = alloca half
    call void @llvm.dbg.def(metadata !268, metadata ptr %Var136), !dbg !267
    call void @Esc(ptr %Var136), !dbg !267
    ret void, !dbg !267
  }
  define dso_local void @Fun137() #0 !dbg !269 {
  entry:
    %Var137 = alloca half
    call void @llvm.dbg.def(metadata !276, metadata ptr %Var137), !dbg !275
    call void @Esc(ptr %Var137), !dbg !275
    ret void, !dbg !275
  }
  define dso_local void @Fun138() #0 !dbg !277 {
  entry:
    %Var138 = alloca half
    call void @llvm.dbg.def(metadata !284, metadata ptr %Var138), !dbg !283
    call void @Esc(ptr %Var138), !dbg !283
    ret void, !dbg !283
  }
  define dso_local void @Fun139() #0 !dbg !285 {
  entry:
    %Var139 = alloca half
    call void @llvm.dbg.def(metadata !292, metadata ptr %Var139), !dbg !291
    call void @Esc(ptr %Var139), !dbg !291
    ret void, !dbg !291
  }
  define dso_local void @Fun140() #0 !dbg !293 {
  entry:
    %Var140 = alloca bfloat
    call void @llvm.dbg.def(metadata !300, metadata ptr %Var140), !dbg !299
    call void @Esc(ptr %Var140), !dbg !299
    ret void, !dbg !299
  }
  define dso_local void @Fun141() #0 !dbg !301 {
  entry:
    %Var141 = alloca bfloat
    call void @llvm.dbg.def(metadata !308, metadata ptr %Var141), !dbg !307
    call void @Esc(ptr %Var141), !dbg !307
    ret void, !dbg !307
  }
  define dso_local void @Fun142() #0 !dbg !309 {
  entry:
    %Var142 = alloca bfloat
    call void @llvm.dbg.def(metadata !316, metadata ptr %Var142), !dbg !315
    call void @Esc(ptr %Var142), !dbg !315
    ret void, !dbg !315
  }
  define dso_local void @Fun143() #0 !dbg !317 {
  entry:
    %Var143 = alloca bfloat
    call void @llvm.dbg.def(metadata !324, metadata ptr %Var143), !dbg !323
    call void @Esc(ptr %Var143), !dbg !323
    ret void, !dbg !323
  }
  define dso_local void @Fun144() #0 !dbg !325 {
  entry:
    %Var144 = alloca float
    call void @llvm.dbg.def(metadata !332, metadata ptr %Var144), !dbg !331
    call void @Esc(ptr %Var144), !dbg !331
    ret void, !dbg !331
  }
  define dso_local void @Fun145() #0 !dbg !333 {
  entry:
    %Var145 = alloca float
    call void @llvm.dbg.def(metadata !340, metadata ptr %Var145), !dbg !339
    call void @Esc(ptr %Var145), !dbg !339
    ret void, !dbg !339
  }
  define dso_local void @Fun146() #0 !dbg !341 {
  entry:
    %Var146 = alloca float
    call void @llvm.dbg.def(metadata !348, metadata ptr %Var146), !dbg !347
    call void @Esc(ptr %Var146), !dbg !347
    ret void, !dbg !347
  }
  define dso_local void @Fun147() #0 !dbg !349 {
  entry:
    %Var147 = alloca float
    call void @llvm.dbg.def(metadata !356, metadata ptr %Var147), !dbg !355
    call void @Esc(ptr %Var147), !dbg !355
    ret void, !dbg !355
  }
  define dso_local void @Fun148() #0 !dbg !357 {
  entry:
    %Var148 = alloca double
    call void @llvm.dbg.def(metadata !364, metadata ptr %Var148), !dbg !363
    call void @Esc(ptr %Var148), !dbg !363
    ret void, !dbg !363
  }
  define dso_local void @Fun149() #0 !dbg !365 {
  entry:
    %Var149 = alloca double
    call void @llvm.dbg.def(metadata !372, metadata ptr %Var149), !dbg !371
    call void @Esc(ptr %Var149), !dbg !371
    ret void, !dbg !371
  }
  define dso_local void @Fun150() #0 !dbg !373 {
  entry:
    %Var150 = alloca double
    call void @llvm.dbg.def(metadata !380, metadata ptr %Var150), !dbg !379
    call void @Esc(ptr %Var150), !dbg !379
    ret void, !dbg !379
  }
  define dso_local void @Fun151() #0 !dbg !381 {
  entry:
    %Var151 = alloca double
    call void @llvm.dbg.def(metadata !388, metadata ptr %Var151), !dbg !387
    call void @Esc(ptr %Var151), !dbg !387
    ret void, !dbg !387
  }
  define dso_local void @Fun152() #0 !dbg !389 {
  entry:
    %Var152 = alloca fp128
    call void @llvm.dbg.def(metadata !396, metadata ptr %Var152), !dbg !395
    call void @Esc(ptr %Var152), !dbg !395
    ret void, !dbg !395
  }
  define dso_local void @Fun153() #0 !dbg !397 {
  entry:
    %Var153 = alloca fp128
    call void @llvm.dbg.def(metadata !404, metadata ptr %Var153), !dbg !403
    call void @Esc(ptr %Var153), !dbg !403
    ret void, !dbg !403
  }
  define dso_local void @Fun154() #0 !dbg !405 {
  entry:
    %Var154 = alloca fp128
    call void @llvm.dbg.def(metadata !412, metadata ptr %Var154), !dbg !411
    call void @Esc(ptr %Var154), !dbg !411
    ret void, !dbg !411
  }
  define dso_local void @Fun155() #0 !dbg !413 {
  entry:
    %Var155 = alloca fp128
    call void @llvm.dbg.def(metadata !420, metadata ptr %Var155), !dbg !419
    call void @Esc(ptr %Var155), !dbg !419
    ret void, !dbg !419
  }
  define dso_local void @Fun156() #0 !dbg !421 {
  entry:
    ret void, !dbg !427
  }
  define dso_local void @Fun157() #0 !dbg !429 {
  entry:
    ret void, !dbg !435
  }
  define dso_local void @Fun158() #0 !dbg !437 {
  entry:
    ret void, !dbg !443
  }
  define dso_local void @Fun159() #0 !dbg !445 {
  entry:
    ret void, !dbg !451
  }
  define dso_local void @Fun160() #0 !dbg !453 {
  entry:
    ret void, !dbg !459
  }
  define dso_local void @Fun161() #0 !dbg !461 {
  entry:
    ret void, !dbg !467
  }
  define dso_local void @Fun162() #0 !dbg !469 {
  entry:
    ret void, !dbg !475
  }
  define dso_local void @Fun163() #0 !dbg !477 {
  entry:
    ret void, !dbg !483
  }
  
  declare void @Esc(ptr)
  declare void @llvm.dbg.declare(metadata, metadata, metadata) #1
  declare void @llvm.dbg.def(metadata, metadata) #1
  
  attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
  attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
  attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
  
  !llvm.dbg.cu = !{!1}
  !llvm.module.flags = !{!3, !4}
  
  !1 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2, producer: "clang", emissionKind: FullDebug)
  !2 = !DIFile(filename: "<stdin>", directory: ".")
  !3 = !{i32 7, !"Dwarf Version", i32 5}
  !4 = !{i32 2, !"Debug Info Version", i32 4}
  !5 = distinct !DISubprogram(name: "Fun104", scope: !2, file: !2, line: 1, type: !6, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !8)
  !6 = !DISubroutineType(types: !7)
  !7 = !{null}
  !8 = !{}
  !9 = !DILocalVariable(name: "Var104", scope: !5, file: !2, line: 1, type: !10)
  !10 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !11 = !DILocation(scope: !5)
  !12 = distinct !DILifetime(object: !9, location: !DIExpr(DIOpReferrer(i1)))
  !13 = distinct !DISubprogram(name: "Fun105", scope: !2, file: !2, line: 1, type: !14, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !16)
  !14 = !DISubroutineType(types: !15)
  !15 = !{null}
  !16 = !{}
  !17 = !DILocalVariable(name: "Var105", scope: !13, file: !2, line: 1, type: !18)
  !18 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !19 = !DILocation(scope: !13)
  !20 = distinct !DILifetime(object: !17, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(i1)))
  !21 = distinct !DISubprogram(name: "Fun106", scope: !2, file: !2, line: 1, type: !22, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !24)
  !22 = !DISubroutineType(types: !23)
  !23 = !{null}
  !24 = !{}
  !25 = !DILocalVariable(name: "Var106", scope: !21, file: !2, line: 1, type: !26)
  !26 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !27 = !DILocation(scope: !21)
  !28 = distinct !DILifetime(object: !25, location: !DIExpr(DIOpReferrer(i1), DIOpRead()))
  !29 = distinct !DISubprogram(name: "Fun107", scope: !2, file: !2, line: 1, type: !30, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !32)
  !30 = !DISubroutineType(types: !31)
  !31 = !{null}
  !32 = !{}
  !33 = !DILocalVariable(name: "Var107", scope: !29, file: !2, line: 1, type: !34)
  !34 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !35 = !DILocation(scope: !29)
  !36 = distinct !DILifetime(object: !33, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(i1), DIOpRead()))
  !37 = distinct !DISubprogram(name: "Fun108", scope: !2, file: !2, line: 1, type: !38, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !40)
  !38 = !DISubroutineType(types: !39)
  !39 = !{null}
  !40 = !{}
  !41 = !DILocalVariable(name: "Var108", scope: !37, file: !2, line: 1, type: !42)
  !42 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !43 = !DILocation(scope: !37)
  !44 = distinct !DILifetime(object: !41, location: !DIExpr(DIOpReferrer(i4)))
  !45 = distinct !DISubprogram(name: "Fun109", scope: !2, file: !2, line: 1, type: !46, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !48)
  !46 = !DISubroutineType(types: !47)
  !47 = !{null}
  !48 = !{}
  !49 = !DILocalVariable(name: "Var109", scope: !45, file: !2, line: 1, type: !50)
  !50 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !51 = !DILocation(scope: !45)
  !52 = distinct !DILifetime(object: !49, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(i4)))
  !53 = distinct !DISubprogram(name: "Fun110", scope: !2, file: !2, line: 1, type: !54, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !56)
  !54 = !DISubroutineType(types: !55)
  !55 = !{null}
  !56 = !{}
  !57 = !DILocalVariable(name: "Var110", scope: !53, file: !2, line: 1, type: !58)
  !58 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !59 = !DILocation(scope: !53)
  !60 = distinct !DILifetime(object: !57, location: !DIExpr(DIOpReferrer(i4), DIOpRead()))
  !61 = distinct !DISubprogram(name: "Fun111", scope: !2, file: !2, line: 1, type: !62, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !64)
  !62 = !DISubroutineType(types: !63)
  !63 = !{null}
  !64 = !{}
  !65 = !DILocalVariable(name: "Var111", scope: !61, file: !2, line: 1, type: !66)
  !66 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !67 = !DILocation(scope: !61)
  !68 = distinct !DILifetime(object: !65, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(i4), DIOpRead()))
  !69 = distinct !DISubprogram(name: "Fun112", scope: !2, file: !2, line: 1, type: !70, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !72)
  !70 = !DISubroutineType(types: !71)
  !71 = !{null}
  !72 = !{}
  !73 = !DILocalVariable(name: "Var112", scope: !69, file: !2, line: 1, type: !74)
  !74 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !75 = !DILocation(scope: !69)
  !76 = distinct !DILifetime(object: !73, location: !DIExpr(DIOpReferrer(i8)))
  !77 = distinct !DISubprogram(name: "Fun113", scope: !2, file: !2, line: 1, type: !78, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !80)
  !78 = !DISubroutineType(types: !79)
  !79 = !{null}
  !80 = !{}
  !81 = !DILocalVariable(name: "Var113", scope: !77, file: !2, line: 1, type: !82)
  !82 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !83 = !DILocation(scope: !77)
  !84 = distinct !DILifetime(object: !81, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(i8)))
  !85 = distinct !DISubprogram(name: "Fun114", scope: !2, file: !2, line: 1, type: !86, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !88)
  !86 = !DISubroutineType(types: !87)
  !87 = !{null}
  !88 = !{}
  !89 = !DILocalVariable(name: "Var114", scope: !85, file: !2, line: 1, type: !90)
  !90 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !91 = !DILocation(scope: !85)
  !92 = distinct !DILifetime(object: !89, location: !DIExpr(DIOpReferrer(i8), DIOpRead()))
  !93 = distinct !DISubprogram(name: "Fun115", scope: !2, file: !2, line: 1, type: !94, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !96)
  !94 = !DISubroutineType(types: !95)
  !95 = !{null}
  !96 = !{}
  !97 = !DILocalVariable(name: "Var115", scope: !93, file: !2, line: 1, type: !98)
  !98 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !99 = !DILocation(scope: !93)
  !100 = distinct !DILifetime(object: !97, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(i8), DIOpRead()))
  !101 = distinct !DISubprogram(name: "Fun116", scope: !2, file: !2, line: 1, type: !102, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !104)
  !102 = !DISubroutineType(types: !103)
  !103 = !{null}
  !104 = !{}
  !105 = !DILocalVariable(name: "Var116", scope: !101, file: !2, line: 1, type: !106)
  !106 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !107 = !DILocation(scope: !101)
  !108 = distinct !DILifetime(object: !105, location: !DIExpr(DIOpReferrer(i16)))
  !109 = distinct !DISubprogram(name: "Fun117", scope: !2, file: !2, line: 1, type: !110, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !112)
  !110 = !DISubroutineType(types: !111)
  !111 = !{null}
  !112 = !{}
  !113 = !DILocalVariable(name: "Var117", scope: !109, file: !2, line: 1, type: !114)
  !114 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !115 = !DILocation(scope: !109)
  !116 = distinct !DILifetime(object: !113, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(i16)))
  !117 = distinct !DISubprogram(name: "Fun118", scope: !2, file: !2, line: 1, type: !118, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !120)
  !118 = !DISubroutineType(types: !119)
  !119 = !{null}
  !120 = !{}
  !121 = !DILocalVariable(name: "Var118", scope: !117, file: !2, line: 1, type: !122)
  !122 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !123 = !DILocation(scope: !117)
  !124 = distinct !DILifetime(object: !121, location: !DIExpr(DIOpReferrer(i16), DIOpRead()))
  !125 = distinct !DISubprogram(name: "Fun119", scope: !2, file: !2, line: 1, type: !126, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !128)
  !126 = !DISubroutineType(types: !127)
  !127 = !{null}
  !128 = !{}
  !129 = !DILocalVariable(name: "Var119", scope: !125, file: !2, line: 1, type: !130)
  !130 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !131 = !DILocation(scope: !125)
  !132 = distinct !DILifetime(object: !129, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(i16), DIOpRead()))
  !133 = distinct !DISubprogram(name: "Fun120", scope: !2, file: !2, line: 1, type: !134, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !136)
  !134 = !DISubroutineType(types: !135)
  !135 = !{null}
  !136 = !{}
  !137 = !DILocalVariable(name: "Var120", scope: !133, file: !2, line: 1, type: !138)
  !138 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !139 = !DILocation(scope: !133)
  !140 = distinct !DILifetime(object: !137, location: !DIExpr(DIOpReferrer(i17)))
  !141 = distinct !DISubprogram(name: "Fun121", scope: !2, file: !2, line: 1, type: !142, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !144)
  !142 = !DISubroutineType(types: !143)
  !143 = !{null}
  !144 = !{}
  !145 = !DILocalVariable(name: "Var121", scope: !141, file: !2, line: 1, type: !146)
  !146 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !147 = !DILocation(scope: !141)
  !148 = distinct !DILifetime(object: !145, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(i17)))
  !149 = distinct !DISubprogram(name: "Fun122", scope: !2, file: !2, line: 1, type: !150, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !152)
  !150 = !DISubroutineType(types: !151)
  !151 = !{null}
  !152 = !{}
  !153 = !DILocalVariable(name: "Var122", scope: !149, file: !2, line: 1, type: !154)
  !154 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !155 = !DILocation(scope: !149)
  !156 = distinct !DILifetime(object: !153, location: !DIExpr(DIOpReferrer(i17), DIOpRead()))
  !157 = distinct !DISubprogram(name: "Fun123", scope: !2, file: !2, line: 1, type: !158, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !160)
  !158 = !DISubroutineType(types: !159)
  !159 = !{null}
  !160 = !{}
  !161 = !DILocalVariable(name: "Var123", scope: !157, file: !2, line: 1, type: !162)
  !162 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !163 = !DILocation(scope: !157)
  !164 = distinct !DILifetime(object: !161, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(i17), DIOpRead()))
  !165 = distinct !DISubprogram(name: "Fun124", scope: !2, file: !2, line: 1, type: !166, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !168)
  !166 = !DISubroutineType(types: !167)
  !167 = !{null}
  !168 = !{}
  !169 = !DILocalVariable(name: "Var124", scope: !165, file: !2, line: 1, type: !170)
  !170 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !171 = !DILocation(scope: !165)
  !172 = distinct !DILifetime(object: !169, location: !DIExpr(DIOpReferrer(i32)))
  !173 = distinct !DISubprogram(name: "Fun125", scope: !2, file: !2, line: 1, type: !174, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !176)
  !174 = !DISubroutineType(types: !175)
  !175 = !{null}
  !176 = !{}
  !177 = !DILocalVariable(name: "Var125", scope: !173, file: !2, line: 1, type: !178)
  !178 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !179 = !DILocation(scope: !173)
  !180 = distinct !DILifetime(object: !177, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(i32)))
  !181 = distinct !DISubprogram(name: "Fun126", scope: !2, file: !2, line: 1, type: !182, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !184)
  !182 = !DISubroutineType(types: !183)
  !183 = !{null}
  !184 = !{}
  !185 = !DILocalVariable(name: "Var126", scope: !181, file: !2, line: 1, type: !186)
  !186 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !187 = !DILocation(scope: !181)
  !188 = distinct !DILifetime(object: !185, location: !DIExpr(DIOpReferrer(i32), DIOpRead()))
  !189 = distinct !DISubprogram(name: "Fun127", scope: !2, file: !2, line: 1, type: !190, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !192)
  !190 = !DISubroutineType(types: !191)
  !191 = !{null}
  !192 = !{}
  !193 = !DILocalVariable(name: "Var127", scope: !189, file: !2, line: 1, type: !194)
  !194 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !195 = !DILocation(scope: !189)
  !196 = distinct !DILifetime(object: !193, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(i32), DIOpRead()))
  !197 = distinct !DISubprogram(name: "Fun128", scope: !2, file: !2, line: 1, type: !198, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !200)
  !198 = !DISubroutineType(types: !199)
  !199 = !{null}
  !200 = !{}
  !201 = !DILocalVariable(name: "Var128", scope: !197, file: !2, line: 1, type: !202)
  !202 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !203 = !DILocation(scope: !197)
  !204 = distinct !DILifetime(object: !201, location: !DIExpr(DIOpReferrer(i64)))
  !205 = distinct !DISubprogram(name: "Fun129", scope: !2, file: !2, line: 1, type: !206, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !208)
  !206 = !DISubroutineType(types: !207)
  !207 = !{null}
  !208 = !{}
  !209 = !DILocalVariable(name: "Var129", scope: !205, file: !2, line: 1, type: !210)
  !210 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !211 = !DILocation(scope: !205)
  !212 = distinct !DILifetime(object: !209, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(i64)))
  !213 = distinct !DISubprogram(name: "Fun130", scope: !2, file: !2, line: 1, type: !214, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !216)
  !214 = !DISubroutineType(types: !215)
  !215 = !{null}
  !216 = !{}
  !217 = !DILocalVariable(name: "Var130", scope: !213, file: !2, line: 1, type: !218)
  !218 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !219 = !DILocation(scope: !213)
  !220 = distinct !DILifetime(object: !217, location: !DIExpr(DIOpReferrer(i64), DIOpRead()))
  !221 = distinct !DISubprogram(name: "Fun131", scope: !2, file: !2, line: 1, type: !222, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !224)
  !222 = !DISubroutineType(types: !223)
  !223 = !{null}
  !224 = !{}
  !225 = !DILocalVariable(name: "Var131", scope: !221, file: !2, line: 1, type: !226)
  !226 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !227 = !DILocation(scope: !221)
  !228 = distinct !DILifetime(object: !225, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(i64), DIOpRead()))
  !229 = distinct !DISubprogram(name: "Fun132", scope: !2, file: !2, line: 1, type: !230, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !232)
  !230 = !DISubroutineType(types: !231)
  !231 = !{null}
  !232 = !{}
  !233 = !DILocalVariable(name: "Var132", scope: !229, file: !2, line: 1, type: !234)
  !234 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !235 = !DILocation(scope: !229)
  !236 = distinct !DILifetime(object: !233, location: !DIExpr(DIOpReferrer(i128)))
  !237 = distinct !DISubprogram(name: "Fun133", scope: !2, file: !2, line: 1, type: !238, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !240)
  !238 = !DISubroutineType(types: !239)
  !239 = !{null}
  !240 = !{}
  !241 = !DILocalVariable(name: "Var133", scope: !237, file: !2, line: 1, type: !242)
  !242 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !243 = !DILocation(scope: !237)
  !244 = distinct !DILifetime(object: !241, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(i128)))
  !245 = distinct !DISubprogram(name: "Fun134", scope: !2, file: !2, line: 1, type: !246, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !248)
  !246 = !DISubroutineType(types: !247)
  !247 = !{null}
  !248 = !{}
  !249 = !DILocalVariable(name: "Var134", scope: !245, file: !2, line: 1, type: !250)
  !250 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !251 = !DILocation(scope: !245)
  !252 = distinct !DILifetime(object: !249, location: !DIExpr(DIOpReferrer(i128), DIOpRead()))
  !253 = distinct !DISubprogram(name: "Fun135", scope: !2, file: !2, line: 1, type: !254, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !256)
  !254 = !DISubroutineType(types: !255)
  !255 = !{null}
  !256 = !{}
  !257 = !DILocalVariable(name: "Var135", scope: !253, file: !2, line: 1, type: !258)
  !258 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !259 = !DILocation(scope: !253)
  !260 = distinct !DILifetime(object: !257, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(i128), DIOpRead()))
  !261 = distinct !DISubprogram(name: "Fun136", scope: !2, file: !2, line: 1, type: !262, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !264)
  !262 = !DISubroutineType(types: !263)
  !263 = !{null}
  !264 = !{}
  !265 = !DILocalVariable(name: "Var136", scope: !261, file: !2, line: 1, type: !266)
  !266 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !267 = !DILocation(scope: !261)
  !268 = distinct !DILifetime(object: !265, location: !DIExpr(DIOpReferrer(half)))
  !269 = distinct !DISubprogram(name: "Fun137", scope: !2, file: !2, line: 1, type: !270, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !272)
  !270 = !DISubroutineType(types: !271)
  !271 = !{null}
  !272 = !{}
  !273 = !DILocalVariable(name: "Var137", scope: !269, file: !2, line: 1, type: !274)
  !274 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !275 = !DILocation(scope: !269)
  !276 = distinct !DILifetime(object: !273, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(half)))
  !277 = distinct !DISubprogram(name: "Fun138", scope: !2, file: !2, line: 1, type: !278, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !280)
  !278 = !DISubroutineType(types: !279)
  !279 = !{null}
  !280 = !{}
  !281 = !DILocalVariable(name: "Var138", scope: !277, file: !2, line: 1, type: !282)
  !282 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !283 = !DILocation(scope: !277)
  !284 = distinct !DILifetime(object: !281, location: !DIExpr(DIOpReferrer(half), DIOpRead()))
  !285 = distinct !DISubprogram(name: "Fun139", scope: !2, file: !2, line: 1, type: !286, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !288)
  !286 = !DISubroutineType(types: !287)
  !287 = !{null}
  !288 = !{}
  !289 = !DILocalVariable(name: "Var139", scope: !285, file: !2, line: 1, type: !290)
  !290 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !291 = !DILocation(scope: !285)
  !292 = distinct !DILifetime(object: !289, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(half), DIOpRead()))
  !293 = distinct !DISubprogram(name: "Fun140", scope: !2, file: !2, line: 1, type: !294, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !296)
  !294 = !DISubroutineType(types: !295)
  !295 = !{null}
  !296 = !{}
  !297 = !DILocalVariable(name: "Var140", scope: !293, file: !2, line: 1, type: !298)
  !298 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !299 = !DILocation(scope: !293)
  !300 = distinct !DILifetime(object: !297, location: !DIExpr(DIOpReferrer(bfloat)))
  !301 = distinct !DISubprogram(name: "Fun141", scope: !2, file: !2, line: 1, type: !302, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !304)
  !302 = !DISubroutineType(types: !303)
  !303 = !{null}
  !304 = !{}
  !305 = !DILocalVariable(name: "Var141", scope: !301, file: !2, line: 1, type: !306)
  !306 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !307 = !DILocation(scope: !301)
  !308 = distinct !DILifetime(object: !305, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(bfloat)))
  !309 = distinct !DISubprogram(name: "Fun142", scope: !2, file: !2, line: 1, type: !310, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !312)
  !310 = !DISubroutineType(types: !311)
  !311 = !{null}
  !312 = !{}
  !313 = !DILocalVariable(name: "Var142", scope: !309, file: !2, line: 1, type: !314)
  !314 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !315 = !DILocation(scope: !309)
  !316 = distinct !DILifetime(object: !313, location: !DIExpr(DIOpReferrer(bfloat), DIOpRead()))
  !317 = distinct !DISubprogram(name: "Fun143", scope: !2, file: !2, line: 1, type: !318, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !320)
  !318 = !DISubroutineType(types: !319)
  !319 = !{null}
  !320 = !{}
  !321 = !DILocalVariable(name: "Var143", scope: !317, file: !2, line: 1, type: !322)
  !322 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !323 = !DILocation(scope: !317)
  !324 = distinct !DILifetime(object: !321, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(bfloat), DIOpRead()))
  !325 = distinct !DISubprogram(name: "Fun144", scope: !2, file: !2, line: 1, type: !326, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !328)
  !326 = !DISubroutineType(types: !327)
  !327 = !{null}
  !328 = !{}
  !329 = !DILocalVariable(name: "Var144", scope: !325, file: !2, line: 1, type: !330)
  !330 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !331 = !DILocation(scope: !325)
  !332 = distinct !DILifetime(object: !329, location: !DIExpr(DIOpReferrer(float)))
  !333 = distinct !DISubprogram(name: "Fun145", scope: !2, file: !2, line: 1, type: !334, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !336)
  !334 = !DISubroutineType(types: !335)
  !335 = !{null}
  !336 = !{}
  !337 = !DILocalVariable(name: "Var145", scope: !333, file: !2, line: 1, type: !338)
  !338 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !339 = !DILocation(scope: !333)
  !340 = distinct !DILifetime(object: !337, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(float)))
  !341 = distinct !DISubprogram(name: "Fun146", scope: !2, file: !2, line: 1, type: !342, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !344)
  !342 = !DISubroutineType(types: !343)
  !343 = !{null}
  !344 = !{}
  !345 = !DILocalVariable(name: "Var146", scope: !341, file: !2, line: 1, type: !346)
  !346 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !347 = !DILocation(scope: !341)
  !348 = distinct !DILifetime(object: !345, location: !DIExpr(DIOpReferrer(float), DIOpRead()))
  !349 = distinct !DISubprogram(name: "Fun147", scope: !2, file: !2, line: 1, type: !350, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !352)
  !350 = !DISubroutineType(types: !351)
  !351 = !{null}
  !352 = !{}
  !353 = !DILocalVariable(name: "Var147", scope: !349, file: !2, line: 1, type: !354)
  !354 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !355 = !DILocation(scope: !349)
  !356 = distinct !DILifetime(object: !353, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(float), DIOpRead()))
  !357 = distinct !DISubprogram(name: "Fun148", scope: !2, file: !2, line: 1, type: !358, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !360)
  !358 = !DISubroutineType(types: !359)
  !359 = !{null}
  !360 = !{}
  !361 = !DILocalVariable(name: "Var148", scope: !357, file: !2, line: 1, type: !362)
  !362 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !363 = !DILocation(scope: !357)
  !364 = distinct !DILifetime(object: !361, location: !DIExpr(DIOpReferrer(double)))
  !365 = distinct !DISubprogram(name: "Fun149", scope: !2, file: !2, line: 1, type: !366, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !368)
  !366 = !DISubroutineType(types: !367)
  !367 = !{null}
  !368 = !{}
  !369 = !DILocalVariable(name: "Var149", scope: !365, file: !2, line: 1, type: !370)
  !370 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !371 = !DILocation(scope: !365)
  !372 = distinct !DILifetime(object: !369, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(double)))
  !373 = distinct !DISubprogram(name: "Fun150", scope: !2, file: !2, line: 1, type: !374, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !376)
  !374 = !DISubroutineType(types: !375)
  !375 = !{null}
  !376 = !{}
  !377 = !DILocalVariable(name: "Var150", scope: !373, file: !2, line: 1, type: !378)
  !378 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !379 = !DILocation(scope: !373)
  !380 = distinct !DILifetime(object: !377, location: !DIExpr(DIOpReferrer(double), DIOpRead()))
  !381 = distinct !DISubprogram(name: "Fun151", scope: !2, file: !2, line: 1, type: !382, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !384)
  !382 = !DISubroutineType(types: !383)
  !383 = !{null}
  !384 = !{}
  !385 = !DILocalVariable(name: "Var151", scope: !381, file: !2, line: 1, type: !386)
  !386 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !387 = !DILocation(scope: !381)
  !388 = distinct !DILifetime(object: !385, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(double), DIOpRead()))
  !389 = distinct !DISubprogram(name: "Fun152", scope: !2, file: !2, line: 1, type: !390, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !392)
  !390 = !DISubroutineType(types: !391)
  !391 = !{null}
  !392 = !{}
  !393 = !DILocalVariable(name: "Var152", scope: !389, file: !2, line: 1, type: !394)
  !394 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !395 = !DILocation(scope: !389)
  !396 = distinct !DILifetime(object: !393, location: !DIExpr(DIOpReferrer(fp128)))
  !397 = distinct !DISubprogram(name: "Fun153", scope: !2, file: !2, line: 1, type: !398, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !400)
  !398 = !DISubroutineType(types: !399)
  !399 = !{null}
  !400 = !{}
  !401 = !DILocalVariable(name: "Var153", scope: !397, file: !2, line: 1, type: !402)
  !402 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !403 = !DILocation(scope: !397)
  !404 = distinct !DILifetime(object: !401, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(fp128)))
  !405 = distinct !DISubprogram(name: "Fun154", scope: !2, file: !2, line: 1, type: !406, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !408)
  !406 = !DISubroutineType(types: !407)
  !407 = !{null}
  !408 = !{}
  !409 = !DILocalVariable(name: "Var154", scope: !405, file: !2, line: 1, type: !410)
  !410 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !411 = !DILocation(scope: !405)
  !412 = distinct !DILifetime(object: !409, location: !DIExpr(DIOpReferrer(fp128), DIOpRead()))
  !413 = distinct !DISubprogram(name: "Fun155", scope: !2, file: !2, line: 1, type: !414, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !416)
  !414 = !DISubroutineType(types: !415)
  !415 = !{null}
  !416 = !{}
  !417 = !DILocalVariable(name: "Var155", scope: !413, file: !2, line: 1, type: !418)
  !418 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !419 = !DILocation(scope: !413)
  !420 = distinct !DILifetime(object: !417, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(fp128), DIOpRead()))
  !421 = distinct !DISubprogram(name: "Fun156", scope: !2, file: !2, line: 1, type: !422, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !424)
  !422 = !DISubroutineType(types: !423)
  !423 = !{null}
  !424 = !{}
  !425 = !DILocalVariable(name: "Var156", scope: !421, file: !2, line: 1, type: !426)
  !426 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !427 = !DILocation(scope: !421)
  !428 = distinct !DILifetime(object: !425, location: !DIExpr(DIOpReferrer(i64)))
  !429 = distinct !DISubprogram(name: "Fun157", scope: !2, file: !2, line: 1, type: !430, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !432)
  !430 = !DISubroutineType(types: !431)
  !431 = !{null}
  !432 = !{}
  !433 = !DILocalVariable(name: "Var157", scope: !429, file: !2, line: 1, type: !434)
  !434 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !435 = !DILocation(scope: !429)
  !436 = distinct !DILifetime(object: !433, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(i64)))
  !437 = distinct !DISubprogram(name: "Fun158", scope: !2, file: !2, line: 1, type: !438, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !440)
  !438 = !DISubroutineType(types: !439)
  !439 = !{null}
  !440 = !{}
  !441 = !DILocalVariable(name: "Var158", scope: !437, file: !2, line: 1, type: !442)
  !442 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !443 = !DILocation(scope: !437)
  !444 = distinct !DILifetime(object: !441, location: !DIExpr(DIOpReferrer(i64), DIOpRead()))
  !445 = distinct !DISubprogram(name: "Fun159", scope: !2, file: !2, line: 1, type: !446, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !448)
  !446 = !DISubroutineType(types: !447)
  !447 = !{null}
  !448 = !{}
  !449 = !DILocalVariable(name: "Var159", scope: !445, file: !2, line: 1, type: !450)
  !450 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !451 = !DILocation(scope: !445)
  !452 = distinct !DILifetime(object: !449, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(i64), DIOpRead()))
  !453 = distinct !DISubprogram(name: "Fun160", scope: !2, file: !2, line: 1, type: !454, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !456)
  !454 = !DISubroutineType(types: !455)
  !455 = !{null}
  !456 = !{}
  !457 = !DILocalVariable(name: "Var160", scope: !453, file: !2, line: 1, type: !458)
  !458 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !459 = !DILocation(scope: !453)
  !460 = distinct !DILifetime(object: !457, location: !DIExpr(DIOpReferrer(i64)))
  !461 = distinct !DISubprogram(name: "Fun161", scope: !2, file: !2, line: 1, type: !462, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !464)
  !462 = !DISubroutineType(types: !463)
  !463 = !{null}
  !464 = !{}
  !465 = !DILocalVariable(name: "Var161", scope: !461, file: !2, line: 1, type: !466)
  !466 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !467 = !DILocation(scope: !461)
  !468 = distinct !DILifetime(object: !465, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(i64)))
  !469 = distinct !DISubprogram(name: "Fun162", scope: !2, file: !2, line: 1, type: !470, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !472)
  !470 = !DISubroutineType(types: !471)
  !471 = !{null}
  !472 = !{}
  !473 = !DILocalVariable(name: "Var162", scope: !469, file: !2, line: 1, type: !474)
  !474 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !475 = !DILocation(scope: !469)
  !476 = distinct !DILifetime(object: !473, location: !DIExpr(DIOpReferrer(i64), DIOpRead()))
  !477 = distinct !DISubprogram(name: "Fun163", scope: !2, file: !2, line: 1, type: !478, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !480)
  !478 = !DISubroutineType(types: !479)
  !479 = !{null}
  !480 = !{}
  !481 = !DILocalVariable(name: "Var163", scope: !477, file: !2, line: 1, type: !482)
  !482 = !DIBasicType(name: "int", size: 42, encoding: DW_ATE_signed)
  !483 = !DILocation(scope: !477)
  !484 = distinct !DILifetime(object: !481, location: !DIExpr(DIOpReferrer(ptr), DIOpDeref(i64), DIOpRead()))
  
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -1, DW_OP_LLVM_user DW_OP_LLVM_offset
# CHECK-NEXT: DW_AT_name ("Var104")
---
name:            Fun104
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var104, type: default, offset: 0, size: 1, alignment: 1 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(i1))
    DBG_DEF !12, %stack.0
    RET64 debug-location !11
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -1, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address
# CHECK-NEXT: DW_AT_name ("Var105")
---
name:            Fun105
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var105, type: default, offset: 0, size: 1, alignment: 1 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(i1))
    DBG_DEF !20, %stack.0
    RET64 debug-location !19
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -1, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x1, DW_OP_constu 0x1, DW_OP_and, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var106")
---
name:            Fun106
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var106, type: default, offset: 0, size: 1, alignment: 1 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(i1), DIOpRead())
    DBG_DEF !28, %stack.0
    RET64 debug-location !27
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -1, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_deref_size 0x1, DW_OP_constu 0x1, DW_OP_and, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var107")
---
name:            Fun107
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var107, type: default, offset: 0, size: 1, alignment: 1 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(i1), DIOpRead())
    DBG_DEF !36, %stack.0
    RET64 debug-location !35
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -1, DW_OP_LLVM_user DW_OP_LLVM_offset
# CHECK-NEXT: DW_AT_name ("Var108")
---
name:            Fun108
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var108, type: default, offset: 0, size: 1, alignment: 1 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(i4))
    DBG_DEF !44, %stack.0
    RET64 debug-location !43
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -1, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address
# CHECK-NEXT: DW_AT_name ("Var109")
---
name:            Fun109
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var109, type: default, offset: 0, size: 1, alignment: 1 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(i4))
    DBG_DEF !52, %stack.0
    RET64 debug-location !51
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -1, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x1, DW_OP_constu 0xf, DW_OP_and, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var110")
---
name:            Fun110
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var110, type: default, offset: 0, size: 1, alignment: 1 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(i4), DIOpRead())
    DBG_DEF !60, %stack.0
    RET64 debug-location !59
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -1, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_deref_size 0x1, DW_OP_constu 0xf, DW_OP_and, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var111")
---
name:            Fun111
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var111, type: default, offset: 0, size: 1, alignment: 1 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(i4), DIOpRead())
    DBG_DEF !68, %stack.0
    RET64 debug-location !67
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -1, DW_OP_LLVM_user DW_OP_LLVM_offset
# CHECK-NEXT: DW_AT_name ("Var112")
---
name:            Fun112
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var112, type: default, offset: 0, size: 1, alignment: 1 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(i8))
    DBG_DEF !76, %stack.0
    RET64 debug-location !75
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -1, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address
# CHECK-NEXT: DW_AT_name ("Var113")
---
name:            Fun113
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var113, type: default, offset: 0, size: 1, alignment: 1 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(i8))
    DBG_DEF !84, %stack.0
    RET64 debug-location !83
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -1, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x1, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var114")
---
name:            Fun114
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var114, type: default, offset: 0, size: 1, alignment: 1 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(i8), DIOpRead())
    DBG_DEF !92, %stack.0
    RET64 debug-location !91
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -1, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_deref_size 0x1, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var115")
---
name:            Fun115
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var115, type: default, offset: 0, size: 1, alignment: 1 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(i8), DIOpRead())
    DBG_DEF !100, %stack.0
    RET64 debug-location !99
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -2, DW_OP_LLVM_user DW_OP_LLVM_offset
# CHECK-NEXT: DW_AT_name ("Var116")
---
name:            Fun116
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var116, type: default, offset: 0, size: 2, alignment: 2 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(i16))
    DBG_DEF !108, %stack.0
    RET64 debug-location !107
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -2, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address
# CHECK-NEXT: DW_AT_name ("Var117")
---
name:            Fun117
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var117, type: default, offset: 0, size: 2, alignment: 2 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(i16))
    DBG_DEF !116, %stack.0
    RET64 debug-location !115
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -2, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x2, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var118")
---
name:            Fun118
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var118, type: default, offset: 0, size: 2, alignment: 2 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(i16), DIOpRead())
    DBG_DEF !124, %stack.0
    RET64 debug-location !123
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -2, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_deref_size 0x2, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var119")
---
name:            Fun119
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var119, type: default, offset: 0, size: 2, alignment: 2 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(i16), DIOpRead())
    DBG_DEF !132, %stack.0
    RET64 debug-location !131
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -4, DW_OP_LLVM_user DW_OP_LLVM_offset
# CHECK-NEXT: DW_AT_name ("Var120")
---
name:            Fun120
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var120, type: default, offset: 0, size: 3, alignment: 4 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(i17))
    DBG_DEF !140, %stack.0
    RET64 debug-location !139
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -4, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address
# CHECK-NEXT: DW_AT_name ("Var121")
---
name:            Fun121
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var121, type: default, offset: 0, size: 3, alignment: 4 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(i17))
    DBG_DEF !148, %stack.0
    RET64 debug-location !147
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -4, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x3, DW_OP_constu 0x1ffff, DW_OP_and, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var122")
---
name:            Fun122
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var122, type: default, offset: 0, size: 3, alignment: 4 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(i17), DIOpRead())
    DBG_DEF !156, %stack.0
    RET64 debug-location !155
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -4, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_deref_size 0x3, DW_OP_constu 0x1ffff, DW_OP_and, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var123")
---
name:            Fun123
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var123, type: default, offset: 0, size: 3, alignment: 4 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(i17), DIOpRead())
    DBG_DEF !164, %stack.0
    RET64 debug-location !163
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -4, DW_OP_LLVM_user DW_OP_LLVM_offset
# CHECK-NEXT: DW_AT_name ("Var124")
---
name:            Fun124
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var124, type: default, offset: 0, size: 4, alignment: 4 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(i32))
    DBG_DEF !172, %stack.0
    RET64 debug-location !171
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -4, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address
# CHECK-NEXT: DW_AT_name ("Var125")
---
name:            Fun125
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var125, type: default, offset: 0, size: 4, alignment: 4 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(i32))
    DBG_DEF !180, %stack.0
    RET64 debug-location !179
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -4, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x4, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var126")
---
name:            Fun126
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var126, type: default, offset: 0, size: 4, alignment: 4 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(i32), DIOpRead())
    DBG_DEF !188, %stack.0
    RET64 debug-location !187
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -4, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_deref_size 0x4, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var127")
---
name:            Fun127
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var127, type: default, offset: 0, size: 4, alignment: 4 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(i32), DIOpRead())
    DBG_DEF !196, %stack.0
    RET64 debug-location !195
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -8, DW_OP_LLVM_user DW_OP_LLVM_offset
# CHECK-NEXT: DW_AT_name ("Var128")
---
name:            Fun128
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var128, type: default, offset: 0, size: 8, alignment: 8 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(i64))
    DBG_DEF !204, %stack.0
    RET64 debug-location !203
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -8, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address
# CHECK-NEXT: DW_AT_name ("Var129")
---
name:            Fun129
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var129, type: default, offset: 0, size: 8, alignment: 8 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(i64))
    DBG_DEF !212, %stack.0
    RET64 debug-location !211
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -8, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var130")
---
name:            Fun130
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var130, type: default, offset: 0, size: 8, alignment: 8 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(i64), DIOpRead())
    DBG_DEF !220, %stack.0
    RET64 debug-location !219
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -8, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_deref_size 0x8, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var131")
---
name:            Fun131
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var131, type: default, offset: 0, size: 8, alignment: 8 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(i64), DIOpRead())
    DBG_DEF !228, %stack.0
    RET64 debug-location !227
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -16, DW_OP_LLVM_user DW_OP_LLVM_offset
# CHECK-NEXT: DW_AT_name ("Var132")
---
name:            Fun132
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var132, type: default, offset: 0, size: 16, alignment: 16 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(i128))
    DBG_DEF !236, %stack.0
    RET64 debug-location !235
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -16, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address
# CHECK-NEXT: DW_AT_name ("Var133")
---
name:            Fun133
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var133, type: default, offset: 0, size: 16, alignment: 16 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(i128))
    DBG_DEF !244, %stack.0
    RET64 debug-location !243
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -16, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x10, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var134")
---
name:            Fun134
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var134, type: default, offset: 0, size: 16, alignment: 16 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(i128), DIOpRead())
    DBG_DEF !252, %stack.0
    RET64 debug-location !251
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -16, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_deref_size 0x10, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var135")
---
name:            Fun135
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var135, type: default, offset: 0, size: 16, alignment: 16 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(i128), DIOpRead())
    DBG_DEF !260, %stack.0
    RET64 debug-location !259
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -2, DW_OP_LLVM_user DW_OP_LLVM_offset
# CHECK-NEXT: DW_AT_name ("Var136")
---
name:            Fun136
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var136, type: default, offset: 0, size: 2, alignment: 2 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(half))
    DBG_DEF !268, %stack.0
    RET64 debug-location !267
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -2, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address
# CHECK-NEXT: DW_AT_name ("Var137")
---
name:            Fun137
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var137, type: default, offset: 0, size: 2, alignment: 2 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(half))
    DBG_DEF !276, %stack.0
    RET64 debug-location !275
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -2, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x2, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var138")
---
name:            Fun138
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var138, type: default, offset: 0, size: 2, alignment: 2 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(half), DIOpRead())
    DBG_DEF !284, %stack.0
    RET64 debug-location !283
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -2, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_deref_size 0x2, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var139")
---
name:            Fun139
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var139, type: default, offset: 0, size: 2, alignment: 2 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(half), DIOpRead())
    DBG_DEF !292, %stack.0
    RET64 debug-location !291
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -2, DW_OP_LLVM_user DW_OP_LLVM_offset
# CHECK-NEXT: DW_AT_name ("Var140")
---
name:            Fun140
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var140, type: default, offset: 0, size: 2, alignment: 2 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(bfloat))
    DBG_DEF !300, %stack.0
    RET64 debug-location !299
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -2, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address
# CHECK-NEXT: DW_AT_name ("Var141")
---
name:            Fun141
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var141, type: default, offset: 0, size: 2, alignment: 2 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(bfloat))
    DBG_DEF !308, %stack.0
    RET64 debug-location !307
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -2, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x2, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var142")
---
name:            Fun142
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var142, type: default, offset: 0, size: 2, alignment: 2 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(bfloat), DIOpRead())
    DBG_DEF !316, %stack.0
    RET64 debug-location !315
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -2, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_deref_size 0x2, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var143")
---
name:            Fun143
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var143, type: default, offset: 0, size: 2, alignment: 2 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(bfloat), DIOpRead())
    DBG_DEF !324, %stack.0
    RET64 debug-location !323
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -4, DW_OP_LLVM_user DW_OP_LLVM_offset
# CHECK-NEXT: DW_AT_name ("Var144")
---
name:            Fun144
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var144, type: default, offset: 0, size: 4, alignment: 4 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(float))
    DBG_DEF !332, %stack.0
    RET64 debug-location !331
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -4, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address
# CHECK-NEXT: DW_AT_name ("Var145")
---
name:            Fun145
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var145, type: default, offset: 0, size: 4, alignment: 4 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(float))
    DBG_DEF !340, %stack.0
    RET64 debug-location !339
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -4, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x4, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var146")
---
name:            Fun146
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var146, type: default, offset: 0, size: 4, alignment: 4 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(float), DIOpRead())
    DBG_DEF !348, %stack.0
    RET64 debug-location !347
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -4, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_deref_size 0x4, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var147")
---
name:            Fun147
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var147, type: default, offset: 0, size: 4, alignment: 4 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(float), DIOpRead())
    DBG_DEF !356, %stack.0
    RET64 debug-location !355
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -8, DW_OP_LLVM_user DW_OP_LLVM_offset
# CHECK-NEXT: DW_AT_name ("Var148")
---
name:            Fun148
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var148, type: default, offset: 0, size: 8, alignment: 8 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(double))
    DBG_DEF !364, %stack.0
    RET64 debug-location !363
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -8, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address
# CHECK-NEXT: DW_AT_name ("Var149")
---
name:            Fun149
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var149, type: default, offset: 0, size: 8, alignment: 8 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(double))
    DBG_DEF !372, %stack.0
    RET64 debug-location !371
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -8, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var150")
---
name:            Fun150
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var150, type: default, offset: 0, size: 8, alignment: 8 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(double), DIOpRead())
    DBG_DEF !380, %stack.0
    RET64 debug-location !379
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -8, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_deref_size 0x8, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var151")
---
name:            Fun151
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var151, type: default, offset: 0, size: 8, alignment: 8 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(double), DIOpRead())
    DBG_DEF !388, %stack.0
    RET64 debug-location !387
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -16, DW_OP_LLVM_user DW_OP_LLVM_offset
# CHECK-NEXT: DW_AT_name ("Var152")
---
name:            Fun152
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var152, type: default, offset: 0, size: 16, alignment: 16 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(fp128))
    DBG_DEF !396, %stack.0
    RET64 debug-location !395
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -16, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address
# CHECK-NEXT: DW_AT_name ("Var153")
---
name:            Fun153
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var153, type: default, offset: 0, size: 16, alignment: 16 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(fp128))
    DBG_DEF !404, %stack.0
    RET64 debug-location !403
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -16, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x10, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var154")
---
name:            Fun154
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var154, type: default, offset: 0, size: 16, alignment: 16 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(fp128), DIOpRead())
    DBG_DEF !412, %stack.0
    RET64 debug-location !411
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_OP_reg6 RBP, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_consts -16, DW_OP_LLVM_user DW_OP_LLVM_offset, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_deref_size 0x10, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var155")
---
name:            Fun155
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack:
  - { id: 0, name: Var155, type: default, offset: 0, size: 16, alignment: 16 }
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(fp128), DIOpRead())
    DBG_DEF !420, %stack.0
    RET64 debug-location !419
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_reg0 RAX)
# CHECK-NEXT: DW_AT_name ("Var156")
---
name:            Fun156
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(i64))
    DBG_DEF !428, $rax, debug-location !427
    RET64 debug-location !427
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_reg0 RAX, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address)
# CHECK-NEXT: DW_AT_name ("Var157")
---
name:            Fun157
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(i64))
    DBG_DEF !436, $rax, debug-location !435
    RET64 debug-location !435
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_reg0 RAX, DW_OP_deref_size 0x8, DW_OP_stack_value
# CHECK-NEXT: DW_AT_name ("Var158")
---
name:            Fun158
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(i64), DIOpRead())
    DBG_DEF !444, $rax, debug-location !443
    RET64 debug-location !443
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_reg0 RAX, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_deref_size 0x8, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var159")
---
name:            Fun159
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(i64), DIOpRead())
    DBG_DEF !452, $rax, debug-location !451
    RET64 debug-location !451
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_constu 0x2a, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var160")
---
name:            Fun160
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(i64))
    DBG_DEF !460, 42, debug-location !459
    RET64 debug-location !459
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_constu 0x2a, DW_OP_stack_value, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address)
# CHECK-NEXT: DW_AT_name ("Var161")
---
name:            Fun161
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(i64))
    DBG_DEF !468, 42, debug-location !467
    RET64 debug-location !467
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_constu 0x2a, DW_OP_stack_value, DW_OP_deref_size 0x8, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var162")
---
name:            Fun162
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(i64), DIOpRead())
    DBG_DEF !476, 42, debug-location !475
    RET64 debug-location !475
...
# CHECK: DW_TAG_variable
# CHECK-NEXT: DW_AT_location (DW_OP_constu 0x2a, DW_OP_stack_value, DW_OP_deref_size 0x8, DW_OP_constu 0x0, DW_OP_LLVM_user DW_OP_LLVM_form_aspace_address, DW_OP_deref_size 0x8, DW_OP_stack_value)
# CHECK-NEXT: DW_AT_name ("Var163")
---
name:            Fun163
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
stack: []
body:             |
  bb.0.entry:
    ; !DIExpr(DIOpReferrer(ptr), DIOpDeref(i64), DIOpRead())
    DBG_DEF !484, 42, debug-location !483
    RET64 debug-location !483
...

