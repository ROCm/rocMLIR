// RUN: mlir-opt --tosa-partition %s | FileCheck %s
// CHECK-LABEL: func private @forward_outlined_part_0
// CHECK-NEXT: tosa.const
// CHECK-NEXT: tosa.transpose
// CHECK-NEXT: tosa.transpose
// CHECK-NEXT: tosa.conv2d
// CHECK-NEXT: tosa.const
// CHECK-NEXT: tosa.transpose
// CHECK: return
// CHECK-LABEL: func private @forward_outlined_part_1
// CHECK-NEXT: tosa.const
// CHECK-NEXT: tosa.transpose
// CHECK-NEXT: tosa.transpose
// CHECK-NEXT: tosa.conv2d
// CHECK-NEXT: tosa.const
// CHECK-NEXT: tosa.transpose
// CHECK-NEXT: return

module attributes {torch.debug_module_name = "ResNet"} {
  func.func @forward(%arg0: tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32> {
    %21 = "tosa.const"() {value = dense<"0x538ED43C"> : tensor<64x64x3x3xf32>} : () -> tensor<64x64x3x3xf32>
    %22 = "tosa.const"() {value = dense<"0x14E76B3D"> : tensor<64x64x3x3xf32>} : () -> tensor<64x64x3x3xf32>
    %24 = "tosa.const"() {value = dense<0.000000e+00> : tensor<64xf32>} : () -> tensor<64xf32>
    %25 = "tosa.const"() {value = dense<[0, 2, 3, 1]> : tensor<4xi32>} : () -> tensor<4xi32>
    %26 = "tosa.const"() {value = dense<[0, 3, 1, 2]> : tensor<4xi32>} : () -> tensor<4xi32>
    %35 = "tosa.const"() {value = dense<[[[4.350550e-01]], [[0.204353958]], [[0.234371066]], [[0.555869102]], [[0.9625808]], [[0.34837237]], [[0.0870912894]], [[0.685126185]], [[0.471447408]], [[1.26418459]], [[0.15185073]], [[0.672973871]], [[0.242970988]], [[0.557663679]], [[0.870111048]], [[0.241860405]], [[0.20524618]], [[0.814857721]], [[0.304025054]], [[0.261729032]], [[0.805968225]], [[0.800655066]], [[1.55810392]], [[0.240396887]], [[0.444482625]], [[0.676496982]], [[0.55617404]], [[0.937783837]], [[0.258368522]], [[0.317292869]], [[0.0961778983]], [[0.411815882]], [[0.519685268]], [[0.976713955]], [[1.27033126]], [[0.890840947]], [[0.360923588]], [[0.222713485]], [[1.15876949]], [[1.59651864]], [[0.406010926]], [[0.255918652]], [[0.176323771]], [[0.279654771]], [[0.375710368]], [[0.128194466]], [[1.82796717]], [[0.314452082]], [[0.741928279]], [[0.21285513]], [[0.812224507]], [[0.46600005]], [[0.406509399]], [[0.491434872]], [[4.813950e-01]], [[0.169687942]], [[0.400027037]], [[3.866580e-01]], [[0.149923742]], [[0.413703024]], [[0.0671055093]], [[0.83032006]], [[0.243440315]], [[0.344939411]]]> : tensor<64x1x1xf32>} : () -> tensor<64x1x1xf32>
    %36 = "tosa.const"() {value = dense<[[[[-0.433190078]], [[-0.175694913]], [[0.0307474807]], [[-0.705806791]], [[-1.63644612]], [[-0.798920393]], [[-0.0678167045]], [[-0.195550278]], [[-1.12603867]], [[-9.577850e-01]], [[0.00303830206]], [[-1.82651103]], [[-0.0393386371]], [[-0.867985606]], [[-1.10618353]], [[-0.635920107]], [[-0.98719418]], [[-0.577786744]], [[-1.33491731]], [[-0.340780795]], [[-1.19819415]], [[-1.60575163]], [[-2.17018104]], [[-0.881360471]], [[-0.817468405]], [[-0.695106149]], [[0.654207646]], [[-1.64223909]], [[0.281131387]], [[0.316296548]], [[-0.412329644]], [[-1.40228522]], [[-1.5043844]], [[-2.5030787]], [[-2.15804982]], [[-1.36450112]], [[-0.857909083]], [[-0.220595926]], [[-2.55477524]], [[-2.26948547]], [[-0.160925135]], [[-0.855172097]], [[0.528860927]], [[1.34920466]], [[-0.938154459]], [[-0.335565716]], [[-2.91677713]], [[-1.59672499]], [[-1.88746727]], [[-1.61662126]], [[-1.94432163]], [[-2.01948833]], [[-0.967084765]], [[-1.38807428]], [[-1.88363433]], [[0.186851829]], [[-1.3487308]], [[-0.459332734]], [[-0.454171181]], [[-0.903211176]], [[-0.0767973289]], [[-1.77187669]], [[1.24841809]], [[-0.913857877]]]]> : tensor<1x64x1x1xf32>} : () -> tensor<1x64x1x1xf32>
    %37 = "tosa.const"() {value = dense<[[[[0.309043467]], [[0.214711159]], [[0.236576676]], [[0.425931394]], [[0.513686061]], [[0.21810919]], [[0.220440537]], [[0.229953438]], [[0.264005542]], [[0.269451439]], [[0.213777632]], [[0.460190892]], [[0.266088396]], [[0.231897846]], [[0.390032232]], [[0.238854751]], [[0.266045094]], [[0.363448173]], [[0.347412556]], [[0.247700587]], [[3.284530e-01]], [[0.53493458]], [[0.644020081]], [[0.227493554]], [[0.448180854]], [[0.30781728]], [[0.260412276]], [[0.465068072]], [[0.217946246]], [[0.285815388]], [[0.342561722]], [[0.441996783]], [[0.444976747]], [[0.450018674]], [[0.551550686]], [[0.509206712]], [[0.256445497]], [[0.263418853]], [[0.566351056]], [[0.640956103]], [[0.222756818]], [[0.198601693]], [[0.245954156]], [[0.224201113]], [[0.214311257]], [[0.198216185]], [[0.636765599]], [[0.310554832]], [[0.504927635]], [[0.240274549]], [[0.306493819]], [[0.375986129]], [[0.379380524]], [[0.428064138]], [[0.299081922]], [[0.332632065]], [[0.259646714]], [[0.334532797]], [[2.005660e-01]], [[0.435055643]], [[0.168260247]], [[0.514937878]], [[0.262882739]], [[0.325370371]]]]> : tensor<1x64x1x1xf32>} : () -> tensor<1x64x1x1xf32>
    %38 = "tosa.const"() {value = dense<[[[[0.165660679]], [[0.241959468]], [[0.177964702]], [[-0.0431376398]], [[-0.205331057]], [[0.159750536]], [[0.292935789]], [[0.0911777243]], [[0.1116466]], [[0.0883733555]], [[0.110413767]], [[-0.203523606]], [[0.153928623]], [[8.571950e-02]], [[-0.109398432]], [[0.0654498711]], [[0.0765945539]], [[-0.206687212]], [[-0.02118567]], [[0.139637291]], [[0.0401249304]], [[-0.282749802]], [[-0.325705916]], [[-0.00346554257]], [[-0.437301368]], [[-0.124844968]], [[0.128242895]], [[-0.0873934776]], [[0.119922049]], [[-0.0829298421]], [[-0.531535208]], [[-7.803100e-02]], [[-0.387627274]], [[-0.0546562374]], [[-0.181554914]], [[-0.188849777]], [[0.132011667]], [[0.00313512608]], [[-0.269714326]], [[-0.298389643]], [[0.139352217]], [[0.259656608]], [[0.137245387]], [[0.00526427291]], [[0.0131502384]], [[0.329455644]], [[-0.271506935]], [[-0.0186743364]], [[-0.246697694]], [[0.157942355]], [[0.0164602138]], [[-0.0890493542]], [[-0.190278217]], [[-0.078674376]], [[0.170012966]], [[-0.483182877]], [[0.0619214252]], [[-0.0677097216]], [[0.312465042]], [[-0.506395757]], [[0.31381321]], [[-0.261734873]], [[-0.154493123]], [[0.00628100662]]]]> : tensor<1x64x1x1xf32>} : () -> tensor<1x64x1x1xf32>
    %103 = "tosa.const"() {value = dense<9.99999974E-6> : tensor<1x1x1xf32>} : () -> tensor<1x1x1xf32>
    %122 = "tosa.transpose"(%arg0, %25) : (tensor<1x64x56x56xf32>, tensor<4xi32>) -> tensor<1x56x56x64xf32>
    %123 = "tosa.transpose"(%22, %25) : (tensor<64x64x3x3xf32>, tensor<4xi32>) -> tensor<64x3x3x64xf32>
    %124 = "tosa.conv2d"(%122, %123, %24) {dilation = [1, 1], pad = [1, 1, 1, 1], stride = [1, 1]} : (tensor<1x56x56x64xf32>, tensor<64x3x3x64xf32>, tensor<64xf32>) -> tensor<1x56x56x64xf32>
    %125 = "tosa.transpose"(%124, %26) : (tensor<1x56x56x64xf32>, tensor<4xi32>) -> tensor<1x64x56x56xf32>
    %126 = "tosa.sub"(%125, %36) : (tensor<1x64x56x56xf32>, tensor<1x64x1x1xf32>) -> tensor<1x64x56x56xf32>
    %127 = "tosa.add"(%35, %103) : (tensor<64x1x1xf32>, tensor<1x1x1xf32>) -> tensor<64x1x1xf32>
    %128 = "tosa.rsqrt"(%127) : (tensor<64x1x1xf32>) -> tensor<64x1x1xf32>
    %129 = "tosa.reshape"(%128) {new_shape = [1, 64, 1, 1]} : (tensor<64x1x1xf32>) -> tensor<1x64x1x1xf32>
    %130 = "tosa.mul"(%126, %129) {shift = 0 : i32} : (tensor<1x64x56x56xf32>, tensor<1x64x1x1xf32>) -> tensor<1x64x56x56xf32>
    %131 = "tosa.mul"(%130, %37) {shift = 0 : i32} : (tensor<1x64x56x56xf32>, tensor<1x64x1x1xf32>) -> tensor<1x64x56x56xf32>
    %132 = "tosa.add"(%131, %38) : (tensor<1x64x56x56xf32>, tensor<1x64x1x1xf32>) -> tensor<1x64x56x56xf32>
    %133 = "tosa.clamp"(%132) {max_fp = 3.40282347E+38 : f32, max_int = 2147483647 : i64, min_fp = 0.000000e+00 : f32, min_int = 0 : i64} : (tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
    %134 = "tosa.transpose"(%133, %25) : (tensor<1x64x56x56xf32>, tensor<4xi32>) -> tensor<1x56x56x64xf32>
    %135 = "tosa.transpose"(%21, %25) : (tensor<64x64x3x3xf32>, tensor<4xi32>) -> tensor<64x3x3x64xf32>
    %136 = "tosa.conv2d"(%134, %135, %24) {dilation = [1, 1], pad = [1, 1, 1, 1], stride = [1, 1]} : (tensor<1x56x56x64xf32>, tensor<64x3x3x64xf32>, tensor<64xf32>) -> tensor<1x56x56x64xf32>
    %137 = "tosa.transpose"(%136, %26) : (tensor<1x56x56x64xf32>, tensor<4xi32>) -> tensor<1x64x56x56xf32>
    return %137 : tensor<1x64x56x56xf32>
  }
}
