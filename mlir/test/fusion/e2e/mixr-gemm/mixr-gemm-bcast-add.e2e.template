// RUN: rocmlir-opt -migraphx-to-tosa %s | rocmlir-driver -host-pipeline highlevel | rocmlir-gen -ph -print-results -rand none - | rocmlir-driver -arch %arch -c  | mlir-cpu-runner -O2 --shared-libs=%linalg_test_lib_dir/libmlir_rocm_runtime%shlibext,%conv_validation_wrapper_library_dir/libconv-validation-wrappers%shlibext,%linalg_test_lib_dir/libmlir_runner_utils%shlibext --entry-point-result=void --mattr=-avx512bf16 | FileCheck %s
// RUN{disablep}: rocmlir-opt -migraphx-to-tosa %s | rocmlir-driver -host-pipeline partition,highlevel -targets %arch | rocmlir-gen -ph -print-results -rand 1 -rand_type float -fut dot_broadcast_add --verifier clone - | rocmlir-driver -host-pipeline mhal,runner -kernel-pipeline full -targets %arch | mlir-cpu-runner -O2 --shared-libs=%linalg_test_lib_dir/libmlir_rocm_runtime%shlibext,%conv_validation_wrapper_library_dir/libconv-validation-wrappers%shlibext,%linalg_test_lib_dir/libmlir_runner_utils%shlibext --entry-point-result=void --mattr=-avx512bf16 | FileCheck %s --check-prefix=CLONE

module {{
  // CHECK:  [5,     5,     5,  5,     5,     5,  5,     5,     5,  5,     5,     5,  5,     5,     5]

  // CLONE: [1 1 1]
  // CLONE-NEXT: Unranked Memref base

  func.func @dot_broadcast_add(%arg0: !migraphx.shaped<1x5x4x{type}, 20x4x1>, %arg1: !migraphx.shaped<1x4x3x{type}, 12x3x1>, %arg2: !migraphx.shaped<3x{type}, 1>) -> !migraphx.shaped<1x5x3x{type}, 15x3x1> attributes{{kernel, arch = ""}} {{
    %0 = migraphx.dot %arg0, %arg1 : <1x5x4x{type}, 20x4x1>, <1x4x3x{type}, 12x3x1> -> <1x5x3x{type}, 15x3x1>
    %1 = migraphx.broadcast %arg2 {{axis = 2:i64, out_lens= [1:i64, 5:i64, 3:i64] }} : <3x{type}, 1> -> <1x5x3x{type}, 0x0x1>
    %2 = migraphx.add %0, %1 {{}} : <1x5x3x{type}, 15x3x1>, <1x5x3x{type}, 0x0x1> -> <1x5x3x{type}, 15x3x1>
    return %2 : !migraphx.shaped<1x5x3x{type}, 15x3x1>
  }}
}}
