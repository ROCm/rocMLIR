pipeline {
    agent {
        docker {
            image 'rocm/mlir:rocm4.1-latest'
            args '--user "$(id -u):$(id -g)" --device=/dev/kfd --device=/dev/dri --group-add video -u 0'
            label 'rocm'
        }
    }
    environment {
        PATH=$PATH:/opt/rocm-4.1.1/llvm/bin/
    }
    stages {
        stage('Environment') {
            steps {
                sh 'cat /etc/os-release'
                sh '/opt/rocm/bin/rocm-smi'
            }
        }
        stage('Build and Test') {
            steps {
                checkout scm
                cmakeBuild generator: 'Ninja',\
                    buildDir: 'build',\
                    buildType: 'Release',\
                    installation: 'InSearchPath',\
                    steps: [[args: 'check-mlir', withCmake: true]],\
                    cmakeArgs: '''-DMLIR_MIOPEN_DRIVER_ENABLED=1
                        -DMLIR_MIOPEN_DRIVER_E2E_TEST_ENABLED=1
                    '''
                dir("build") {
                    deleteDir
                }
            }
        }
        stage('Test Random E2E') {
            steps {
                cmakeBuild generator: 'Ninja',\
                    buildDir: 'build',\
                    buildType: 'Release',\
                    installation: 'InSearchPath',\
                    steps: [[args: 'check-e2e', withCmake: true]],\
                    cmakeArgs: '''-DMLIR_MIOPEN_DRIVER_ENABLED=1
                        -DMLIR_MIOPEN_DRIVER_E2E_TEST_ENABLED=1
                        -DMLIR_MIOPEN_DRIVER_RANDOM_DATA_SEED=1
                    '''
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
