pipeline {
    agent none
    stages {
        // Workaround Durable Tasks bug, hopefully
        stage("Library build") {
            agent {
                docker {
                    image 'rocm/mlir:rocm4.1-latest'
                    args '--user "$(id -u):$(id -g)" --device=/dev/kfd --device=/dev/dri --group-add video -u 0'
                    label "rocm"
                    alwaysPull true
                }
            }
            stages {
                stage('Build libMLIRMIOpen') {
                    steps {
                        checkout scm
                        cmakeBuild generator: 'Ninja',\
                            buildDir: 'build',\
                            installation: 'InSearchPath',\
                            buildType: 'Release',\
                            steps: [[args: 'libMLIRMIOpen']],\
                            cmakeArgs: '-DBUILD_FAT_LIBMLIRMIOPEN=ON'
                        cmake arguments: '--install . --component libMLIRMIOpen',\
                            installation: 'InSearchPath', workingDir: 'build'

                    }
                }
                stage('Build MIOpenDriver') {
                    steps {
                        dir('MIOpen') {
                            git branch: 'develop', poll: false,\
                                url: 'https://github.com/ROCmSoftwarePlatform/MIOpen.git'
                            cmake arguments: "-P install_deps.cmake --minimum",\
                                installation: "InSearchPath"
                            cmakeBuild generator: 'Unix Makefiles',\
                                buildDir: 'build',\
                                buildType: 'Release',\
                                installation: 'InSearchPath',\
                                cmakeArgs: '''-DMIOPEN_USE_MLIR=On
                                -DCMAKE_CXX_COMPILER=/opt/rocm/llvm/bin/clang++
                                -DCMAKE_C_COMPILER=/opt/rocm/llvm/bin/clang
                                -DBUILD_DEV=On
                                -DMIOPEN_TEST_FLAGS=\'--verbose --disable-verification-cache\'
                                '''
                            sh 'cd build; make -j $(nproc) MIOpenDriver'
                        }
                        stash name:"MIOpen-test-requisites",\
                                includes: """MIOpen/src/kernels/**,\
MIOpen/build/bin/MIOpenDriver,\
MIOpen/build/lib/*,\
mlir/utils/jenkins/miopen-tests/**\
"""

                    }
                }
            }
            post {
                always {
                    cleanWs()
                }
            }
        }
        stage("Resnet50 configs nightly tests") {
            matrix {
                agent {
                    docker {
                        image 'rocm/mlir:latest'
                        args '--user "$(id -u):$(id -g)" --device=/dev/kfd --device=/dev/dri --group-add video -u 0'
                        label "${XDLOPS == '1' ? 'gfx908' : 'gfx908'} && multi_gpu"
                        alwaysPull true
                    }
                }
                options {
                    skipDefaultCheckout()
                }
                axes {
                    axis {
                        name 'DTYPE'
                        values 'fp16', 'fp32'
                    }
                    axis {
                        name 'XDLOPS'
                        values '1', '0'
                    }
                    axis {
                        name 'LAYOUT'
                        values 'NCHW', 'NHWC'
                    }
                    axis {
                        name 'DIRECTION'
                        values '1', '2', '4'
                    }
                }
                stages {
                    stage('Environment') {
                        steps {
                            echo "Config is ($DTYPE, $LAYOUT, xdlops=$XDLOPS, dir=$DIRECTION)"
                            sh 'cat /etc/os-release'
                            sh '/opt/rocm/bin/rocm-smi'
                        }
                    }
                    stage("Copy MIOpen test environment") {
                        steps {
                            unstash name: "MIOpen-test-requisites"
                        }
                    }
                    stage("Test MIOpen config") {
                        steps {
                            echo "Config is ($DTYPE, $LAYOUT, xdlops=$XDLOPS, dir=$DIRECTION)"
                            dir('MIOpen/build/') {
                                sh """
bash ${WORKSPACE}/mlir/utils/jenkins/miopen-tests/miopen_validate.sh \
--layout $LAYOUT \
--direction $DIRECTION \
--dtype $DTYPE \
${XDLOPS == '1' ? '--xdlops' : '--no-xdlops'} <${WORKSPACE}/mlir/utils/jenkins/miopen-tests/resnet50-miopen-configs"""
                            }
                        }
                    }
                }
                post {
                    always {
                        cleanWs()
                    }
                }
            }
        }
    }
}
