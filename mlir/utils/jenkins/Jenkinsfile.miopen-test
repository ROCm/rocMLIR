pipeline {
    agent {
        docker {
            image 'rocm/mlir:miopen-test'
            args '--user "$(id -u):$(id -g)" --device=/dev/kfd --device=/dev/dri --group-add video -u 0'
            label 'gfx908'
        }
    }
    stages {
        stage('Environment') {
            steps {
                sh 'cat /etc/os-release'
                sh '/opt/rocm/bin/rocm-smi'
            }
        }
        stage('Build libMLIRMIOpen') {
            steps {
                checkout scm
                sh '''
                    mkdir -p build && cd build
                    /usr/local/bin/cmake -G "Unix Makefiles" ../llvm \
                         -DLLVM_ENABLE_PROJECTS="mlir;lld" \
                         -DCMAKE_BUILD_TYPE=Release \
                         -DBUILD_SHARED_LIBS=OFF \
                         -DLLVM_BUILD_LLVM_DYLIB=OFF \
                         -DLLVM_ENABLE_TERMINFO=OFF
                    make -j$(nproc) libMLIRMIOpen
                '''
            }
        }
        stage('Build MIOpenDriver') {
            steps {
                sh '''
                    cd ~
                    git clone https://github.com/ROCmSoftwarePlatform/MIOpen.git
                    mkdir build && cd build
                    CXX=/opt/rocm/llvm/bin/clang++ cmake -DMIOPEN_USE_MLIR=On \
                         -DBUILD_DEV=On \
                         -DCMAKE_BUILD_TYPE=release \
                         -DMIOPEN_TEST_FLAGS='--verbose \
                         --disable-verification-cache' ..
                    make -j MIOpenDriver
                    bash ~/llvm-project-mlir/mlie/utils/jenkins/resnet50_fp16_nchw.sh
                '''
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
