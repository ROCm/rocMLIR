pipeline {
    agent {
        docker {
            image 'rocm/mlir:rocm4.0-latest'
            args '--user "$(id -u):$(id -g)" --device=/dev/kfd --device=/dev/dri --group-add video -u 0'
            label 'test-0'
        }
    }
    stages {
        stage('Environment') {
            steps {
                sh 'cat /etc/os-release'
                sh '/opt/rocm/bin/rocm-smi'
            }
        }
        stage('Build and Test FP32') {
            steps {
                checkout scm
                sh '''
                    # make build directory
                    mkdir -p build && cd build
                    # Set the path to llvm-symbolizer
                    PATH=$PATH:/opt/rocm-4.0.0/llvm/bin/

                    # config MLIR on ROCm, with MIOpen dialect
                    # with custom perf db for:
                    # - gfx908
                    # - fp32
                    # - resnet50 configs.
                    cmake -G Ninja ../llvm \
                        -DLLVM_ENABLE_PROJECTS="mlir;lld" \
                        -DLLVM_BUILD_EXAMPLES=ON \
                        -DLLVM_TARGETS_TO_BUILD="X86;AMDGPU" \
                        -DCMAKE_BUILD_TYPE=Release \
                        -DLLVM_ENABLE_ASSERTIONS=ON \
                        -DBUILD_SHARED_LIBS=ON \
                        -DLLVM_BUILD_LLVM_DYLIB=ON \
                        -DMLIR_ROCM_RUNNER_ENABLED=1 \
                        -DMLIR_MIOPEN_DRIVER_ENABLED=1 \
                        -DMLIR_MIOPEN_SQLITE_ENABLED=1 \
                        -DMIOPEN_SYSTEM_DB_PATH=`readlink -f ../mlir/utils/jenkins/perfdb/miopen_1.0.0.udb.resnet50_fp32_1013`


                    # build MLIR tools needed for performance benchmarking.
                    # due to customized perf db, tuning-related tests may not
                    # pass.
                    cmake --build . --target mlir-miopen-driver
                    cmake --build . --target mlir-rocm-runner
                '''
            }
        }
        stage('Benchmark FP32') {
            steps {
                sh '''
                    cd build

                    # Run 1 perf benchmark config. more to come.

                    # Ensure rocminfo can be located by rocprof.
                    ./bin/mlir-miopen-driver -p -x2 -ph -c | \
                    PATH=/opt/rocm/bin:$PATH /opt/rocm/bin/rocprof --hip-trace \
                    ./bin/mlir-rocm-runner --shared-libs=./lib/librocm-runtime-wrappers.so,./lib/libmlir_runner_utils.so --entry-point-result=void

                    # Dump perf figures.
                    cat results.stats.csv
                '''
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
