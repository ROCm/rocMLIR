pipeline {
    agent {
        docker {
            image 'rocm/mlir:rocm4.0-latest'
            args '--user "$(id -u):$(id -g)" --device=/dev/kfd --device=/dev/dri --group-add video -u 0'
            label 'test-0'
        }
    }
    stages {
        stage('Environment') {
            steps {
                sh 'cat /etc/os-release'
                sh '/opt/rocm/bin/rocm-smi'
            }
        }
        stage('Build') {
            steps {
                checkout scm
                sh '''
                    # make build directory
                    mkdir -p build && cd build

                    # config MLIR on ROCm, with MIOpen dialect
                    # with custom perf db for:
                    # - gfx908
                    # - fp32
                    # - resnet50 configs.
                    cmake -G Ninja ../llvm \
                        -DLLVM_ENABLE_PROJECTS="mlir;lld" \
                        -DLLVM_BUILD_EXAMPLES=ON \
                        -DLLVM_TARGETS_TO_BUILD="X86;NVPTX;AMDGPU" \
                        -DCMAKE_BUILD_TYPE=Release \
                        -DLLVM_ENABLE_ASSERTIONS=ON \
                        -DBUILD_SHARED_LIBS=ON \
                        -DLLVM_BUILD_LLVM_DYLIB=ON \
                        -DMLIR_ROCM_RUNNER_ENABLED=1 \
                        -DMLIR_MIOPEN_DRIVER_ENABLED=1 \
                        -DMLIR_MIOPEN_SQLITE_ENABLED=1 \
                        -DMIOPEN_SYSTEM_DB_PATH=`readlink -f ../mlir/utils/jenkins/perfdb/miopen_1.0.0.udb.resnet50_fp32_1013`


                    # build MLIR tools needed for performance benchmarking.
                    # due to customized perf db, tuning-related tests may not
                    # pass.
                    cmake --build . --target mlir-miopen-driver
                    cmake --build . --target mlir-rocm-runner
                '''
            }
        }
        stage('Benchmark') {
            steps {
                sh '''
                    cd build

                    cmake --build . --target MIOpenDriver.py

                    # Run MLIR perf benchmarks.
                    ./MIOpenDriver.py -o `date +'%y%m%d'`_mlir_benchmark.csv -b

                    # Dump MLIR perf figures.
                    cat `date +'%y%m%d'`_mlir_benchmark.csv

                    # Run MIOpen perf benchmarks.
                    ./MIOpenDriver.py -o `date +'%y%m%d'`_miopen_benchmark.csv -bmiopen

                    # Dump MIOpen perf figures.
                    cat `date +'%y%m%d'`_miopen_benchmark.csv
                '''
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
