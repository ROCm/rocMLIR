pipeline {
    agent {
        docker {
            image 'rocm/mlir:rocm4.1-latest'
            args '--user "$(id -u):$(id -g)" --device=/dev/kfd --device=/dev/dri --group-add video -u 0'
            label 'test-0'
        }
    }
    environment {
        PATH="$PATH:/opt/rocm/llvm/bin"
    }
    stages {
        stage('Environment') {
            steps {
                sh 'cat /etc/os-release'
                sh '/opt/rocm/bin/rocm-smi'
            }
        }
        stage('Build and Test FP32') {
            steps {
                checkout scm
                // config MLIR on ROCm, with MIOpen dialect
                // with custom perf db for:
                // - gfx908
                // - fp32
                // - resnet50 configs.

                cmakeBuild generator: 'Ninja',\
                    buildDir: 'build',\
                    buildType: 'Release',\
                    installation: 'InSearchPath',\
                    steps: [[args: 'mlir-miopen-driver mlir-rocm-runner']],\
                    cmakeArgs: '''-DMLIR_MIOPEN_DRIVER_ENABLED=1
                        -DMIOPEN_SYSTEM_DB_PATH=${WORKSPACE}/mlir/utils/jenkins/perfdb/miopen_1.0.0.udb.resnet50_fp32_1013
                    '''
            }
        }
        stage('Benchmark FP32') {
            steps {
                sh '''
                    cd build

                    # Run 1 perf benchmark config. more to come.

                    # Ensure rocminfo can be located by rocprof.
                    ./bin/mlir-miopen-driver -p -x2 -ph -c | \
                    PATH=/opt/rocm/bin:$PATH /opt/rocm/bin/rocprof --hip-trace \
                    ./bin/mlir-rocm-runner --shared-libs=./lib/librocm-runtime-wrappers.so,./lib/libmlir_runner_utils.so --entry-point-result=void

                    # Dump perf figures.
                    cat results.stats.csv
                '''
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
