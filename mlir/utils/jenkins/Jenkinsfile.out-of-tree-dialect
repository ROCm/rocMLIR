pipeline {
    agent {
        docker {
            image 'rocm/mlir:rocm4.0-latest'
            args '--user "$(id -u):$(id -g)" --device=/dev/kfd --device=/dev/dri --group-add video -u 0'
            label 'rocm'
        }
    }
    stages {
        stage('Environment') {
            steps {
                sh '''
		    cat /etc/os-release
                    /opt/rocm/bin/rocm-smi

                    # Install dependencies for the out-of-tree build
                    python -m pip install diff_match_patch
                    python -m pip install pathlib2
		'''
            }
        }
        stage('Build') {
            steps {
                checkout scm
                sh '''
                    # Workaround for git submodule not getting cleaned out between jobs
                    git clean -xffd

                    mkdir -p build && cd build

                    cmake -G Ninja ..

                    # Build LLVM / MLIR and run tests
                    cmake --build .
                '''
            }
        }
        stage('Test: check-mlir') {
            steps {
	        dir('build') {
                    sh '''
                        echo "Running check-mlir tests"
                        cmake --build . --target check-mlir
                    '''
		}
            }
        }
        stage('Test: check-mlir-miopen') {
            steps {
	        dir('build') {
                    sh '''
                        echo "Running check-mlir-miopen tests"
                        cmake --build . --target check-mlir-miopen
                    '''
		}
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
