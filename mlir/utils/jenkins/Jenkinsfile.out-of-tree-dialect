pipeline {
    agent {
        docker {
            image 'rocm/mlir:rocm4.0-latest'
            args '--user "$(id -u):$(id -g)" --device=/dev/kfd --device=/dev/dri --group-add video -u 0'
            label 'rocm'
        }
    }
    stages {
        stage('Environment') {
            steps {
                sh 'cat /etc/os-release'
                sh '/opt/rocm/bin/rocm-smi'

                # Install dependencies for the out-of-tree build
                python -m pip install diff_match_patch
                python -m pip install pathlib2
            }
        }
        stage('Build and Test') {
            steps {
                checkout scm
                sh '''
                    mkdir -p build && cd build

                    cmake -G Ninja ..

                    # Build LLVM / MLIR and run tests
                    cmake --build . --target check-mlir-miopen
                '''
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
