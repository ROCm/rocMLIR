pipeline {
    agent {
        docker {
            image 'rocm/mlir:rocm4.1-latest'
            args '--user "$(id -u):$(id -g)" --device=/dev/kfd --device=/dev/dri --group-add video -u 0'
            label 'rocm'
            alwaysPull true
        }
    }
    environment {
        PATH="$PATH:/opt/rocm/llvm/bin"
    }
    stages {
        stage('Environment') {
            steps {
                sh 'cat /etc/os-release'
                sh '/opt/rocm/bin/rocm-smi'
            }
        }
        stage('Build and Test') {
            steps {
                git 'https://github.com/llvm/llvm-project'
                cmakeBuild generator: 'Ninja',\
                    buildDir: 'build',\
                    sourceDir: 'llvm',\
                    buildType: 'Release',\
                    installation: 'InSearchPath',\
                    steps: [[args: 'check-mlir']],\
                    // Reminder to keep these up to date with our cmake
                    cmakeArgs: '''
                    -DLLVM_ENABLE_PROJECTS="mlir;lld"
                    -DLLVM_BUILD_EXAMPLES=ON
                    -DLLVM_TARGETS_TO_BUILD="X86;AMDGPU"
                    -DCMAKE_BUILD_TYPE=Release
                    -DLLVM_ENABLE_ASSERTIONS=ON
                    -DBUILD_SHARED_LIBS=ON
                    -DLLVM_BUILD_LLVM_DYLIB=ON
                    -DMLIR_ROCM_RUNNER_ENABLED=1
                    '''
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
