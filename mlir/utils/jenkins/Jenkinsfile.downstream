void buildProject(String target, String cmakeOpts) {
    cmakeBuild generator: 'Ninja',\
        buildDir: 'build',\
        buildType: 'RelWithDebInfo',\
        installation: 'InSearchPath',\
        steps: [[args: target]],\
        cmakeArgs: "-DMLIR_MIOPEN_DRIVER_ENABLED=1 $cmakeOpts"
}

String dockerArgs() {
    return '--user "$(id -u):$(id -g)" --device=/dev/kfd --device=/dev/dri --group-add video -u 0'
}

String dockerImage() {
    return 'rocm/mlir:rocm4.1-latest'
}

pipeline {
    agent {
        docker {
            image dockerImage()
            args dockerArgs()
            label "rocm && !single_gpu"
            alwaysPull true
        }
    }
    environment {
        PATH="$PATH:/opt/rocm/llvm/bin"
    }
    stages {
        stage('Build and Test') {
            steps {
                buildProject('check-mlir check-mlir-miopen', """
                    -DMLIR_MIOPEN_DRIVER_PR_E2E_TEST_ENABLED=1
                    -DMLIR_MIOPEN_DRIVER_XDLOPS_TEST_ENABLED=0
                    -DMLIR_MIOPEN_DRIVER_E2E_TEST_ENABLED=0
                    -DMLIR_MIOPEN_DRIVER_MISC_E2E_TEST_ENABLED=0
                    -DMLIR_MIOPEN_DRIVER_TEST_GPU_VALIDATION=1
                    -DCMAKE_EXPORT_COMPILE_COMMANDS=1
                    """)
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
